{"version":3,"sources":["ui/assets/spinner.gif","ui/assets/SCALogo.png","ui/assets/on-air-indicator.png","ui/assets/sca-white.svg","util.ts","ui/components/ScheduleCard.tsx","ui/components/AttachmentCard.tsx","service/ScheduleService.ts","service/AttachmentService.ts","service/DatabaseService.ts","service/FormService.ts","service/index.ts","ui/components/ImageDropBox.tsx","ui/components/LiveItems.tsx","ui/components/LiveClassesCarousel.tsx","ui/components/Header.tsx","ui/components/Footer.tsx","ui/screens/Classes.tsx","ui/screens/Attachments.tsx","ui/screens/AttachmentsAdmin.tsx","ui/screens/Form.tsx","ui/screens/Index.tsx","factory/ClassesScreenCreator.tsx","AppNavigator.tsx","factory/AttachmentsAdminScreenCreator.tsx","factory/IndexScreenCreator.tsx","factory/AttachmentsScreenCreator.tsx","factory/FormScreenCreator.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","convertJsonToArrayWithIds","obj","Object","entries","map","_id","val","excludeFilterDataFrameRows","filterType","filterVal","data","header","searchableColIndex","getColumnIdxOfKey","filteredRows","slice","filter","row","cellText","toLowerCase","includes","concat","filterDataFrameRows","key","findIndex","currKey","SmartText","input","highlight","passwordCol","urls","linkify","location","useLocation","password","length","className","value","type","iconSize","pathname","href","style","height","width","ScheduleCard","schedule","title","rows","logo","match","filteredCols","reduce","acc","cur","idx","toString","startsWith","push","filterColIdx","col","passwordColIdx","shouldHighlight","colText","colIdx","text","src","rIdx","cIdx","AttachmentCard","attachment","file","cover","body","target","ScheduleService","database","storage","convertTimesToLocalTimezone","this","read","scheduleRef","then","cb","onChange","createScheduleManager","persistedStorage","AttachmentService","delete","newAttachment","write","findAll","_alphabetize","attachments","sort","a","b","createAttachmentManager","FirebaseManager","config","db","app","firebase","initializeApp","path","ref","once","s","set","basePath","remove","on","createFirebaseDbManager","FormService","form","newForm","tehillim","firstName","createFormManager","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","scheduleManager","attachmentManager","formManager","ImageDropBox","onImageDropped","currentImage","useState","previewImage","setPreviewImage","useEffect","useDropzone","onDrop","files","test","name","alert","getRootProps","getInputProps","isDragActive","accept","randomizeFilename","storageRef","metadata","cacheControl","onUploadStart","spinner","onUploadSuccess","child","getDownloadURL","url","id","htmlFor","LiveItems","schedules","heading","forEach","headerRows","dayIdx","timeIdx","passwordIdx","days","now","Date","filteredByDay","flag","rowDays","getDay","split","rowDay","leftRight","left","v","right","live","elapsed","upcoming","rowTimes","startTime","moment","endTime","add","subtract","isBetween","isSameOrAfter","isBefore","rowId","cell","cellId","AnimatedSwipeIndicator","position","LiveClasses","shouldShowSwipeIndicator","setShouldShowSwipeIndicator","Swiper","slidesPerView","centeredSlides","grabCursor","joinIdx","topicIdx","teacherIdx","day","isShowingFuture","tomorrowsClasses","onClick","time","topic","teacher","maxWidth","border","OnAirIndicator","top","alt","Header","props","pageName","mainRoutes","console","log","SCALogo","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Footer","sca","ClassesScreen","setfilterType","setFilterVal","setHeading","today","calcAvailableTimes","useCallback","validTime","times","idxOfTime","moreTimes","Array","from","Set","_a","_b","calcTeachers","teachers","rel","e","placeholder","AttachmentScreen","AttachmentPreviewItem","isEditing","onUpdateBtnPressed","onDeleteBtnPressed","AdminScreen","createAttachment","deleteAttachment","updateAttachment","undefined","attachmentBeingEdited","setAttachmentBeingEdited","updateAttachmentBeingEdited","updates","uploading","FormScreen","forms","setFirstName","benbat","setBenbat","mothersName","setMothersName","formMessage","setFormMessage","success","setTimeout","fail","onSubmit","preventDefault","required","checked","person","hebrew","search","dir","IndexScreen","LiveClassesCarousel","backgroundColor","ClassesScreenCreator","setSchedules","onSchedulesChanged","Classes","renderRoutes","routes","exact","Component","component","adminRoutes","currentAttachments","setCurrentAttachments","onAttachmentsChanged","AttachmentsAdmin","addAttachment","updatedAttachment","removeAttachment","CompThatTracksLocation","history","useHistory","listen","ReactGa","pageview","Index","setAttachments","Attachments","setForms","onFormsChanged","Form","basename","MainNavigator","App","AppNavigator","Boolean","window","hostname","initialize","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ba0736c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.3acec546.gif\";","module.exports = __webpack_public_path__ + \"static/media/SCALogo.80df96a3.png\";","module.exports = __webpack_public_path__ + \"static/media/on-air-indicator.fb6b3f3c.png\";","module.exports = __webpack_public_path__ + \"static/media/sca-white.cbe6bec1.svg\";","import moment from 'moment-timezone';\nimport xlsx from 'xlsx';\n\n\nexport const dataframeFromExcelFile = (excelFile: File) =>\n  new Promise<DataFrame>(resolve => {\n    var reader = new FileReader();\n\n    reader.onload = function(e) {\n      const data = e.target.result;\n      const workbook = xlsx.read(data, { type: 'array' });\n      const spreadSheet = workbook.Sheets[workbook.SheetNames[0]];\n\n      const rowObjs = xlsx.utils.sheet_to_json(spreadSheet);\n      const header = Object.keys(rowObjs[0]);\n      const rows: DataFrame = [header].concat(\n        rowObjs.map(obj => header.map(key => obj[key])),\n      );\n      resolve(cleanExcelData(rows));\n    };\n\n    reader.readAsArrayBuffer(excelFile);\n  });\n\nexport const convertImageFileToBase64Str = (image: File) => \n  new Promise<string | ArrayBuffer>(resolve => {\n    const reader = new FileReader();\n    reader.onloadend = function (e) {\n      resolve(e.target.result);\n    }\n    reader.readAsDataURL(image);\n  });\n    \n\nexport const adjustExcelTime = string => {\n    return string.toString();\n};\n\nexport const cleanExcelData = (d: DataFrame) => \n    d.map(rows => rows.map(col => adjustExcelTime(col)));\n\n\nexport const convertJsonToArrayWithIds = (obj: object) =>\n    Object.entries(obj).map(([_id, val]) => ({ _id, ...val }));\n\nexport const excludeFilterDataFrameRows = (filterType: string, filterVal: string, data: DataFrame) => {\n    const header = [...data[0]];\n    const searchableColIndex = getColumnIdxOfKey(data, filterType);\n    if (searchableColIndex === -1) { // This table doesn't have a column for specified filterType\n        return [...data];\n    }\n    const filteredRows = data.slice(1).filter(row => {\n        let cellText = row[searchableColIndex];\n        // if (filterType === 'time') cellText = cellText.replace(':', '');\n        return cellText && !cellText.toLowerCase().includes(filterVal.toLowerCase());\n    });\n    return [header].concat(filteredRows);\n}\n\nexport const filterDataFrameRows = (filterType: string, filterVal: string, data: DataFrame) => {\n    const header = [...data[0]];\n    const searchableColIndex = getColumnIdxOfKey(data, filterType);\n    if (searchableColIndex === -1) { // This table doesn't have a column for specified filterType\n        return [header];\n    }\n    const filteredRows = data.slice(1).filter(row => {\n        let cellText = row[searchableColIndex];\n        // if (filterType === 'time') cellText = cellText.replace(':', '');\n        return cellText && cellText.toLowerCase().includes(filterVal.toLowerCase());\n    });\n    return [header].concat(filteredRows);\n}\n\nexport const getColumnIdxOfKey = (data: DataFrame, key: string) => {\n  const colIndex = data[0].findIndex(currKey =>\n    currKey.toLowerCase().includes(key.toLowerCase())\n  );\n  return colIndex;\n}\n\n// Time is intended to be formatted as '7:00 AM'\nexport const adjustToLocalTimezone = time => {\n  return moment(time, 'h:mm A').tz('America/New_York').format('h:mm A');\n}","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport * as linkify from 'linkifyjs';\n\nimport { excludeFilterDataFrameRows, filterDataFrameRows } from '../../util';\n\ninterface ScheduleCardProps {\n  schedule: Schedule;\n  filter?: {\n    /** The column in the header to look for */\n    type: string;\n    /** The string to compare cells with */\n    match: string;\n  };\n  stringToHighlight?: string;\n}\n\ninterface SmartTextProps {\n  input: string;\n  highlight?: boolean;\n  row?: string[];\n  passwordCol: number;\n}\n/** If input contains a link, SmartText will replace it with a clickable ancor tag */\nexport const SmartText: React.FC<SmartTextProps> = ({\n  input,\n  highlight,\n  row,\n  passwordCol,\n}) => {\n  const urls = linkify.find(input);\n  const location = useLocation();\n  let password = '';\n  if (~passwordCol && row[passwordCol] !== '-') {\n    password = `Password: ${row[passwordCol]}`;\n  }\n  if (urls.length === 0) {\n    return <p className={highlight && 'highlight'}>{input}</p>;\n  }\n\n  const { value, type } = urls[0];\n  let iconSize = location.pathname === '/' ? 80 : 40;\n  return (\n    <span>\n      <a\n        href={value}\n        style={{ height: iconSize, width: iconSize }}\n        className={\n          value.includes('zoom') && type === 'url'\n            ? 'zoomIcon'\n            : value.includes('gotomeeting') && type === 'url'\n            ? 'gtmIcon'\n            : ''\n        }>\n        {type === 'url' ? 'Click here' : value}\n      </a>{' '}\n      <p className=\"password\">{password}</p>\n    </span>\n  );\n};\n\nconst ScheduleCard: React.FC<ScheduleCardProps> = ({ schedule, filter }) => {\n  const location = useLocation();\n  const { title, rows, logo } = schedule;\n\n  const filteredRows = filter\n    ? filterDataFrameRows(filter.type, filter.match, rows)\n    : excludeFilterDataFrameRows('type', 'minyan', rows);\n\n  if (filteredRows.length === 1) {\n    // No rows matched the filter criteria\n    return null;\n  }\n\n  const headerRow = filteredRows[0];\n\n  const filteredCols = headerRow.reduce((acc, cur, idx) => {\n    if (cur.toString().toLowerCase().startsWith('hide')) {\n      acc.push(idx);\n    }\n    return acc;\n  }, []);\n\n  const filterColIdx =\n    filter &&\n    rows[0].findIndex((col) => col.toLowerCase().includes(filter.type));\n\n  const passwordColIdx = rows[0].findIndex((col) =>\n    col.toLowerCase().includes('password'),\n  );\n\n  const shouldHighlight = (colText: string, colIdx) => {\n    if (filter?.type === 'topic' && location.pathname === '/bekhorot') {\n      return false;\n    }\n    const text = colText.toLowerCase();\n    return filterColIdx === colIdx && text.includes(filter.match);\n  };\n\n  return (\n    <div className=\"schedule-card my-5\">\n      <div className=\"card-header\">\n        {!!logo && (\n          <div className=\"w-100\">\n            <img src={logo} className=\"logo ml-4\" />\n          </div>\n        )}\n        <h1 className=\"schedule-title\">{title}</h1>\n      </div>\n      <table className=\"table table-striped table-bordered table-hover shadow\">\n        <thead className=\"text-light\">\n          <tr>\n            {filteredRows[0].map((col, idx) => {\n              if (!filteredCols.includes(idx)) {\n                return <th key={idx}>{col}</th>;\n              }\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          {filteredRows.slice(1).map((row, rIdx) => (\n            <tr key={rIdx}>\n              {row.map((col, cIdx) => {\n                if (!filteredCols.includes(cIdx)) {\n                  return (\n                    <td key={cIdx}>\n                      <SmartText\n                        input={col}\n                        row={row}\n                        passwordCol={passwordColIdx}\n                        highlight={shouldHighlight(col, cIdx)}\n                      />\n                    </td>\n                  );\n                }\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ScheduleCard;\n","import React from 'react';\n\ninterface AttachmentCardProps {\n  attachment: Attachment;\n}\n\nconst AttachmentCard: React.FC<AttachmentCardProps> = ({ attachment }) => {\n  const { title, file, cover, body } = attachment;\n\n  return (\n    <div className=\"col-md-4 my-3\">\n      <div className=\"card text-center h-100\">\n        {!!cover && (\n          <div className=\"card-img-top w-100\">\n            <img src={cover} className=\"attachment-cover\" />\n          </div>\n        )}\n        <a href={file} target=\"_blank\" className=\"card-body d-flex flex-column align-items-center bg-aliceblue\">\n            <h3 className=\"card-title\">{title}</h3>\n            {!!body && (\n              <p className=\"card-text\">{body}</p>\n            )}\n          <span className=\"btn btn-primary d-inline-block mt-auto\">Click to download</span>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default AttachmentCard;\n","import moment from 'moment-timezone';\n\nclass ScheduleService {\n  private storage: Database;\n  static scheduleRef = '1TS3fZHRPlhI4L_URhKJXGa48eOy6BiqM1GeSUJL9jFs/live-website-feed';\n\n  constructor(database: Database) {\n    this.storage = database;\n  }\n\n  async getAllSchedules(): Promise<DataFrame> {\n    return await this.storage.read(ScheduleService.scheduleRef).then((data) => {\n      return this.convertTimesToLocalTimezone(data);\n    });\n  }\n\n  onSchedulesChanged(cb: (data: DataFrame) => void) {\n    this.storage.onChange(ScheduleService.scheduleRef, (data: DataFrame) => {\n      cb(this.convertTimesToLocalTimezone(data));\n    });\n  }\n\n  private convertTimesToLocalTimezone = (data: DataFrame) => {\n    // const adjustTime = time => moment(time, 'h:mm A').tz('America/New_York').format('h:mm A');\n    // const idxOfTime = data[0].findIndex(col => col.toLowerCase().includes('time'));\n    // data.forEach((row, i) => i && (row[idxOfTime] = adjustTime(row[idxOfTime])));\n    return data;\n  }\n}\n\nfunction createScheduleManager(persistedStorage: Database) {\n  return new ScheduleService(persistedStorage);\n}\n\nexport default createScheduleManager;\n","import { convertJsonToArrayWithIds } from '../util';\n\nclass AttachmentService {\n  private storage: Database;\n\n  constructor(database: Database) {\n    this.storage = database;\n  }\n\n  async addAttachment(attachment: Attachment) {\n    return this.storage.push('attachments', attachment);\n  }\n\n  async removeAttachment(_id: firebase.database.Reference) {\n    return this.storage.delete('attachments', _id);\n  }\n\n  async updateAttachment(_id: firebase.database.Reference, newAttachment: Attachment) {\n    return this.storage.write(`attachments/${_id}`, newAttachment);\n  }\n\n  async getAllAttachments(): Promise<Attachment[]> {\n    return this._alphabetize(await this.storage.findAll('attachments'));\n  }\n\n  onAttachmentsChanged(cb: (attachments: Attachment[]) => void) {\n    this.storage.onChange('attachments', data =>\n      cb(this._alphabetize(convertJsonToArrayWithIds(data)))\n    );\n  }\n\n  _alphabetize(attachments: Attachment[]) {\n    return attachments ? attachments.sort((a, b) => a.title > b.title ? 1 : a.title < b.title ? -1 : 0) : [];\n  }\n}\n\nfunction createAttachmentManager(persistedStorage: Database) {\n  return new AttachmentService(persistedStorage);\n}\n\nexport default createAttachmentManager;\n","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/storage';\n\nimport { convertJsonToArrayWithIds } from '../util';\n\nclass FirebaseManager implements Database {\n  db: firebase.database.Database;\n  storage: firebase.storage.Storage;\n\n  constructor(config: FirebaseConfig) {\n    const app = firebase.initializeApp(config);\n    this.db = app.database();\n    this.storage = app.storage();\n  }\n\n  async read(path: string) {\n    return this.db\n      .ref(path)\n      .once('value')\n      .then(s => s.val());\n  }\n\n  async write(path: string, data: any) {\n    return this.db.ref(path).set(data);\n  }\n\n  async push(basePath: string, data: any) {\n    return this.db.ref(basePath).push(data);\n  }\n\n  /** Gets all documents with their id's in collection */\n  async findAll(path: string) {\n    return this.db.ref(path).once('value')\n    .then(s => s.val() || {}).then(convertJsonToArrayWithIds)\n  }\n\n  async delete(path: string, _id: firebase.database.Reference) {\n    return this.db.ref(`${path}/${_id}`).remove();\n  }\n\n  onChange(path: string, cb: (data: any) => void) {\n    this.db.ref(path).on('value', (s) => cb(s.val()));\n  }\n\n}\n\nfunction createFirebaseDbManager(config: FirebaseConfig) {\n  return new FirebaseManager(config);\n}\n\nexport default createFirebaseDbManager;\n","import { convertJsonToArrayWithIds } from '../util';\n\nclass FormService {\n  private storage: Database;\n\n  constructor(database: Database) {\n    this.storage = database;\n  }\n\n  async addForm(form: Form) {\n    return this.storage.push('tehillim', form);\n  }\n\n  async removeForm(_id: firebase.database.Reference) {\n    return this.storage.delete('tehillim', _id);\n  }\n\n  async updateForm(_id: firebase.database.Reference, newForm: Form) {\n    return this.storage.write(`tehillim/${_id}`, newForm);\n  }\n\n  async getAllForms(): Promise<Form[]> {\n    return this._alphabetize(await this.storage.findAll('tehillim'));\n  }\n\n  onFormsChanged(cb: (tehillim: Form[]) => void) {\n    this.storage.onChange('tehillim', data =>\n      cb(this._alphabetize(convertJsonToArrayWithIds(data)))\n    );\n  }\n\n  _alphabetize(tehillim: Form[]) {\n    return tehillim ? tehillim.sort((a, b) => a.firstName > b.firstName ? 1 : a.firstName < b.firstName ? -1 : 0) : [];\n  }\n}\n\nfunction createFormManager(persistedStorage: Database) {\n  return new FormService(persistedStorage);\n}\n\nexport default createFormManager;\n","import createScheduleManager from './ScheduleService';\nimport createAttachmentManager from './AttachmentService';\nimport createFirebaseDbManager from './DatabaseService';\nimport createFormManager from './FormService';\n\nconst firebaseConfig: FirebaseConfig = {\n  apiKey: \"AIzaSyDUNiNW3dfplmHAq65wfKIGGSHS8MGXgzM\",\n  authDomain: \"sca-rab-schedules.firebaseapp.com\",\n  databaseURL: \"https://sca-rab-schedules.firebaseio.com\",\n  projectId: \"sca-rab-schedules\",\n  storageBucket: \"sca-rab-schedules.appspot.com\",\n  messagingSenderId: \"893196040077\",\n  appId: \"1:893196040077:web:75ee18b5d771028f616fc4\"\n}\n\nconst database = createFirebaseDbManager(firebaseConfig);\nconst scheduleManager = createScheduleManager(database);\nconst attachmentManager = createAttachmentManager(database);\nconst formManager = createFormManager(database);\n\nexport { database, scheduleManager, attachmentManager, formManager };\n","import React, { useState, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport FileUploader from 'react-firebase-file-uploader';\nimport { database } from '../../service/index';\nimport spinner from '../assets/spinner.gif';\n\ninterface ImageDropBoxProps {\n  onImageDropped: (image: string) => void;\n  currentImage?: string;\n}\nconst ImageDropBox: React.FC<ImageDropBoxProps> = ({\n  onImageDropped,\n  currentImage,\n}) => {\n  const [previewImage, setPreviewImage] = useState(currentImage);\n\n  useEffect(() => setPreviewImage(currentImage), [currentImage]);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: (files: File[]) => {\n      const file = files[0];\n      const imageExt = /^([a-zA-Z0-9\\s_\\\\.\\-:])+(.jpg|.jpeg|.png)$/;\n      if (!imageExt.test(file.name.toLowerCase())) {\n        return alert(\n          'Only files with .jpg or .jpeg or .png extensions are allowed here.',\n        );\n      }\n      /* convertImageFileToBase64Str(file).then(base64URL => {\n        setPreviewImage(base64URL as string);\n        onImageDropped(base64URL as string);\n      }); */\n    },\n  });\n\n  const handleUploadStart = (file) => {\n    setPreviewImage(spinner as string);\n  };\n\n  const handleUploadSuccess = (file) => {\n    database\n      .storage\n      .ref(\"/logos\")\n      .child(file)\n      .getDownloadURL()\n      .then(url => {\n        setPreviewImage(url as string);\n        onImageDropped(url as string);\n      });\n  };\n\n  return (\n    <div className=\"image-dropper mt-2\">\n      <form>\n        <FileUploader\n          accept=\"image/*\"\n          randomizeFilename\n          storageRef={database.storage.ref(\"/logos\")}\n          metadata={{cacheControl: 'max-age=2592000'}}\n          onUploadStart={handleUploadStart}\n          onUploadSuccess={handleUploadSuccess}\n          id=\"image-drop\"\n        />\n        <label htmlFor=\"image-drop\">\n          <p>\n            Drop logo here\n            <br />\n            (or click to choose file)\n          </p>\n        </label>\n      </form>\n      {!!previewImage && <img src={previewImage} className=\"logo\" />}\n    </div>\n  );\n};\n\nexport default ImageDropBox;\n","import React from 'react';\nimport moment from 'moment';\n// import * as linkify from 'linkifyjs';\n\nimport { SmartText } from './ScheduleCard';\nimport { excludeFilterDataFrameRows, filterDataFrameRows } from '../../util';\n\n\ninterface LiveItemsProps {\n  schedules: Schedule[];\n  filter?: {\n    type: string;\n    match: string;\n  };\n  heading: string;\n}\n\nconst LiveItems: React.FC<LiveItemsProps> = ({\n  schedules,\n  filter,\n  heading,\n}) => {\n  let rows = [];\n  schedules.forEach(schedule => {\n    const filteredRows =\n      filter?.match === 'minyan'\n        ? filterDataFrameRows(filter.type, filter.match, schedule.rows)\n        : excludeFilterDataFrameRows('type', 'minyan', schedule.rows);\n    rows.push(...filteredRows);\n  });\n  const headerRows = rows[0];\n\n  if (rows.length < 2) {\n    // No rows matched the filter criteria\n    return null;\n  }\n\n  // Only show the rows whose data in column 'HIDE-Toggle' contains 'show'\n  rows = filterDataFrameRows('toggle', 'show', rows);\n\n  const dayIdx = headerRows.findIndex(data => data.toLowerCase().includes('days'))\n  const timeIdx = headerRows.findIndex(data => data.toLowerCase().includes('time'))\n  const passwordIdx = headerRows.findIndex(data => data.toLowerCase().includes('password'));\n\n  const filteredCols = headerRows.reduce((acc, cur, idx) => {\n    if (cur.toString().toLowerCase().startsWith('hide') || cur.toString().toLowerCase().startsWith('days')) {\n      acc.push(idx)\n    }\n    return acc;\n  }, []);\n\n  const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  const now = new Date();\n\n  const filteredByDay = rows.filter(row => {\n    let flag = false;\n    const rowDays = row[dayIdx];\n    if (rowDays.includes('Daily')) {\n      flag = true;\n    } else if (rowDays.includes(days[now.getDay()])) {\n      flag = true;\n    } else if (rowDays.includes('-')) {\n      const rowDaysArr = rowDays.split(/[^\\w-]/);\n      rowDaysArr.forEach(rowDay => {\n        if (rowDay.includes('-')) {\n          const leftRight = rowDay.split('-');\n          const left = days.findIndex(v => {\n            return leftRight[0].includes(v);\n          });\n          const right = days.findIndex(v => {\n            return leftRight[1].includes(v);\n          });\n          if (left < now.getDay() && right > now.getDay()) {\n            flag = true;\n          }\n        }\n      });\n    }\n    return flag;\n  });\n\n  const live = [];\n  const elapsed = [];\n  const upcoming = [];\n\n  filteredByDay.forEach(row => {\n    const rowTimes = row[timeIdx].match(/\\d\\d?:\\d\\d ?(?:[AP]M)?/g);\n    if (!rowTimes) return false;\n    if (\n      !rowTimes[0].toLowerCase().includes('pm') &&\n      row[3].toLowerCase().includes('pm')\n    ) {\n      rowTimes[0] += ' pm';\n    }\n    const startTime = moment(rowTimes[0], 'h:mm:ss a');\n    const endTime =\n      rowTimes.length > 1\n        ? moment(rowTimes[1], 'h:mm:ss a')\n        : moment(startTime).add(1, 'h');\n    startTime.subtract(10, 'm');\n\n    if (moment(now).isBetween(startTime, endTime, null, '[)')) {\n      live.push(row);\n    } else if (moment(now).isSameOrAfter(endTime)) {\n      elapsed.push(row);\n    } else if (moment(now).isBefore(startTime)) {\n      upcoming.push(row);\n    }\n  });\n\n  return (\n    <div className=\"schedule-card my-5\">\n      {\n        (() => (\n          live.length > 0 &&\n          <>\n            <div className=\"card-header\">\n              <h1 className=\"schedule-title\">Ongoing {heading}</h1>\n            </div>\n            <table className=\"table table-striped table-bordered table-hover shadow\">\n              <thead className=\"text-light\">\n                <tr>\n                  {headerRows.map((col, idx) => {\n                    if (!filteredCols.includes(idx)) {\n                      return <th key={idx}>{col}</th>\n                    }\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {live.map((row, rowId) => (\n                  <tr key={rowId}>\n                    {row.map((cell, cellId) => {\n                      if (!filteredCols.includes(cellId)) {\n                        return <td key={cellId}>\n                          <SmartText input={cell} passwordCol={passwordIdx} row={row} />\n                        </td>\n                      }\n                    })}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </>\n        ))()\n      }\n      {\n        (() => (\n          upcoming.length > 0 &&\n          <>\n            <div className=\"card-header\">\n              <h1 className=\"schedule-title\">Upcoming {heading}</h1>\n            </div>\n            <table className=\"table table-striped table-bordered table-hover shadow\">\n              <thead className=\"text-light\">\n                <tr>\n                  {headerRows.map((col, idx) => {\n                    if (!filteredCols.includes(idx)) {\n                      return <th key={idx}>{col}</th>\n                    }\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {upcoming.map((row, rowId) => (\n                  <tr key={rowId}>\n                    {row.map((cell, cellId) => {\n                      if (!filteredCols.includes(cellId)) {\n                        return <td key={cellId}>\n                         <SmartText input={cell} passwordCol={passwordIdx} row={row} />\n                        </td>\n                      }\n                    })}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </>\n        ))()\n      }\n\n      {\n        (() => (\n          elapsed.length > 0 &&\n          <>\n            <div className=\"card-header\">\n              <h1 className=\"schedule-title\">Completed {heading}</h1>\n            </div>\n            <table className=\"table table-striped table-bordered table-hover shadow\">\n              <thead className=\"text-light\">\n                <tr>\n                  {headerRows.map((col, idx) => {\n                    if (!filteredCols.includes(idx)) {\n                      return <th key={idx}>{col}</th>\n                    }\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {elapsed.map((row, rowId) => (\n                  <tr key={rowId}>\n                    {row.map((cell, cellId) => {\n                      if (!filteredCols.includes(cellId)) {\n                        return <td key={cellId}>\n                          <SmartText input={cell} passwordCol={passwordIdx} row={row} />\n                        </td>\n                      }\n                    })}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </>\n        ))()\n      }\n\n    </div>\n  );\n};\n\nexport default LiveItems;\n","import React, { useEffect, useState } from 'react';\nimport Swiper from 'swiper';\nimport 'swiper/css/swiper.css';\n\nimport moment from 'moment';\n\nimport { SmartText } from './ScheduleCard';\nimport { excludeFilterDataFrameRows, filterDataFrameRows } from '../../util';\nimport OnAirIndicator from '../assets/on-air-indicator.png';\n\ninterface LiveClassesProps {\n  schedules: Schedule[];\n  filter?: {\n    type: string;\n    match: string;\n  };\n  heading: string;\n}\n\nconst AnimatedSwipeIndicator = () => (\n  <div style={{ position: 'relative' }}>\n    <div className=\"swipe-indicator-icon\"></div>\n  </div>\n);\n\nconst LiveClasses: React.FC<LiveClassesProps> = ({\n  schedules,\n  filter,\n  heading,\n}) => {\n  const [shouldShowSwipeIndicator, setShouldShowSwipeIndicator] = useState(\n    true,\n  );\n  useEffect(() => {\n    new Swiper('.swiper-container', {\n      slidesPerView: 'auto',\n      centeredSlides: true,\n      grabCursor: true,\n    });\n  });\n\n  let rows = [];\n  schedules.forEach((schedule) => {\n    const filteredRows =\n      filter?.match === 'minyan'\n        ? filterDataFrameRows(filter.type, filter.match, schedule.rows)\n        : excludeFilterDataFrameRows('type', 'minyan', schedule.rows);\n    rows.push(...filteredRows);\n  });\n  const headerRows = rows[0];\n\n  if (rows.length < 2) {\n    return null;\n  }\n\n  const dayIdx = headerRows.findIndex((data) =>\n    data.toLowerCase().includes('days'),\n  );\n  const timeIdx = headerRows.findIndex((data) =>\n    data.toLowerCase().includes('time'),\n  );\n  const joinIdx = headerRows.findIndex((data) =>\n    data.toLowerCase().includes('join'),\n  );\n  const topicIdx = headerRows.findIndex((data) =>\n    data.toLowerCase().includes('topic'),\n  );\n  const teacherIdx = headerRows.findIndex((data) =>\n    data.toLowerCase().includes('teacher'),\n  );\n  const passwordIdx = headerRows.findIndex((data) =>\n    data.toLowerCase().includes('password'),\n  );\n\n  const filteredCols = headerRows.reduce((acc, cur, idx) => {\n    if (\n      cur.toString().toLowerCase().startsWith('hide') ||\n      cur.toString().toLowerCase().startsWith('days')\n    ) {\n      acc.push(idx);\n    }\n    return acc;\n  }, []);\n\n  const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  const now = new Date();\n\n  const filteredByDay = (day) =>\n    rows.filter((row) => {\n      let flag = false;\n      const rowDays = row[dayIdx];\n      if (rowDays.includes('Daily')) {\n        flag = true;\n      } else if (rowDays.includes(days[day])) {\n        flag = true;\n      } else if (rowDays.includes('-')) {\n        const rowDaysArr = rowDays.split(/[^\\w-]/);\n        rowDaysArr.forEach((rowDay) => {\n          if (rowDay.includes('-')) {\n            const leftRight = rowDay.split('-');\n            const left = days.findIndex((v) => {\n              return leftRight[0].includes(v);\n            });\n            const right = days.findIndex((v) => {\n              return leftRight[1].includes(v);\n            });\n            if (left < day && right > day) {\n              flag = true;\n            }\n          }\n        });\n      }\n      return flag;\n    });\n\n  let live = [];\n  const elapsed = [];\n  let upcoming = [];\n\n  filteredByDay(new Date().getDay()).forEach((row) => {\n    const rowTimes = row[timeIdx].match(/\\d\\d?:\\d\\d ?(?:[AP]M)?/g);\n    if (!rowTimes) return false;\n    if (\n      !rowTimes[0].toLowerCase().includes('pm') &&\n      row[3].toLowerCase().includes('pm')\n    ) {\n      rowTimes[0] += ' pm';\n    }\n    const startTime = moment(rowTimes[0], 'h:mm:ss a');\n    const endTime =\n      rowTimes.length > 1\n        ? moment(rowTimes[1], 'h:mm:ss a')\n        : moment(startTime).add(1, 'h');\n\n    if (moment(now).isBetween(startTime, endTime, null, '[)')) {\n      live.push(row);\n    } else if (moment(now).isSameOrAfter(endTime)) {\n      elapsed.push(row);\n    } else if (moment(now).isBefore(startTime)) {\n      upcoming.push(row);\n    }\n  });\n\n  // If there are no classes happening live, show 6 on deck\n  let isShowingFuture = false;\n  if (live.length === 0) {\n    if (upcoming.length === 0) {\n      const tomorrowsClasses = filteredByDay((new Date().getDay() + 1) % 7);\n      live = tomorrowsClasses.slice(\n        0,\n        tomorrowsClasses.length > 6 ? 6 : tomorrowsClasses.length,\n      );\n    } else {\n      live = upcoming.slice(0, upcoming.length > 6 ? 6 : upcoming.length);\n    }\n    isShowingFuture = true;\n  }\n\n  return (\n    <div onClick={() => setShouldShowSwipeIndicator(false)}>\n      <div\n        className={\n          heading === 'Minyanim'\n            ? 'h3 shadow-lg p-3 mb-5 bg-secondary text-center font-weight-bold text-white'\n            : 'h3 shadow-lg p-3 mb-5 bg-primary text-center font-weight-bold text-white'\n        }>\n        Ongoing {heading}\n      </div>\n      <div className=\"text-center\">\n        {isShowingFuture && <h2 className=\"mr-2 font-weight-bold\">Up Next:</h2>}\n      </div>\n      <div className=\"swiper-container live-classes d-flex justify-content-center mb-5\">\n        <div className=\"swiper-wrapper align-items-center\">\n          {shouldShowSwipeIndicator && <AnimatedSwipeIndicator />}\n          {live.map((row, rowId) => {\n            const time = row[timeIdx];\n            const topic = row[topicIdx];\n            const teacher = row[teacherIdx];\n            const url = row[joinIdx];\n\n            return (\n              <div\n                className=\"swiper-slide card mb-3 flex-grow-1 mx-1\"\n                key={rowId}\n                style={{ maxWidth: '400px' }}>\n                <div\n                  className=\"row no-gutters align-items-center\"\n                  style={{ border: '4px solid #1E4169', height: 165 }}>\n                  <div className=\"col-7\">\n                    <div className=\"card-body\">\n                      <p className=\"card-text my-0\">{time}</p>\n                      <p className=\"card-text my-0\">\n                        <small className=\"text-muted\">{teacher}</small>\n                      </p>\n                      <h5 className=\"card-title text-bold mt-2\">{topic}</h5>\n                    </div>\n                  </div>\n                  <div className=\"col-5\">\n                    {!isShowingFuture && (\n                      <img\n                        src={OnAirIndicator}\n                        width=\"40\"\n                        height=\"40\"\n                        style={{ position: 'absolute', right: 8, top: 8 }}\n                        alt=\"\"\n                      />\n                    )}\n\n                    <div className=\"pt-5 pr-3\">\n                      <SmartText\n                        input={url}\n                        row={row}\n                        passwordCol={passwordIdx}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LiveClasses;\n","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { mainRoutes } from '../../AppNavigator';\nimport SCALogo from '../assets/SCALogo.png';\n\nconst Header: React.FC = (props) => {\n  const location = useLocation();\n  const pageName = mainRoutes[location.pathname]?.pageName;\n  useEffect(() => {\n    console.log(pageName);\n  }, [pageName]);\n\n  /* React.useEffect(() => {\n    ga.send([\"pageview\", location.pathname]);\n  }, [location]); */\n\n  return (\n    <>\n      <header className=\"navbar navbar-expand-lg navbar-light fixed-top bg-light shadow\">\n        <a href=\"/#\" className=\"navbar-brand\">\n          <img className=\"py-0\" src={SCALogo} alt=\"SCA\" height=\"60\" />\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNavAltMarkup\"\n          aria-controls=\"navbarNavAltMarkup\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <nav className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n          <ul\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNavAltMarkup.show\"\n            className=\"navbar-nav ml-auto\">\n            <li\n              className={\n                location.pathname === '/today' ? 'active nav-item' : 'nav-item'\n              }>\n              <a className=\"nav-link\" href=\"/#/today\">\n                Classes\n              </a>\n            </li>\n            <li\n              className={\n                location.pathname === '/minyanim'\n                  ? 'active nav-item'\n                  : 'nav-item'\n              }>\n              <a className=\"nav-link\" href=\"/#/minyanim\">\n                Minyanim\n              </a>\n            </li>\n            <li\n              className={\n                location.pathname === '/letters'\n                  ? 'active nav-item'\n                  : 'nav-item'\n              }>\n              <a className=\"nav-link\" href=\"/#/letters\">\n                COVID-19\n              </a>\n            </li>\n            <li\n              className={\n                location.pathname === '/tehillim'\n                  ? 'active nav-item'\n                  : 'nav-item'\n              }>\n              <a className=\"nav-link\" href=\"/#/tehillim\">\n                Tehillim Requests\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"mailto:info@scaupdates.org\">\n                Contact\n              </a>\n            </li>\n          </ul>\n        </nav>\n      </header>\n      <div className=\"header-spacing\"></div>\n      {!!pageName && (\n        <h5 className=\"w-100 text-center header-title my-5\">{pageName}</h5>\n      )}\n    </>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nimport sca from '../assets/sca-white.svg';\n\nconst Footer: React.FC = props => {\n  return (\n    <>\n      <footer className=\"bg-dark d-flex\">\n        <a href=\"/#\" className=\"my-5 mx-auto d-block\">\n          <img\n            className=\"py-0\"\n            src={sca}\n            alt=\"SCA\"\n            height=\"60\"\n            width=\"177\"\n          />\n        </a>\n      </footer>\n    </>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { getColumnIdxOfKey } from '../../util';\nimport { ScheduleCard, LiveItems } from '../components';\n\ninterface ClassesScreenProps {\n  schedules: Schedule[];\n}\n\nconst ClassesScreen: React.FC<ClassesScreenProps> = ({ schedules }) => {\n  const [filterType, setfilterType] = useState<string>('none');\n  const [filterVal, setFilterVal] = useState<string>('');\n  const [heading, setHeading] = useState<string>('Classes');\n  const location = useLocation();\n\n  const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  useEffect(() => {\n    if (location.pathname === '/minyanim') {\n      setHeading('Minyanim');\n      setfilterType('type');\n      setFilterVal('minyan');\n    } else if (location.pathname === '/today') {\n      const now = new Date();\n      const today = days[now.getDay()];\n      setfilterType('day');\n      setFilterVal(today);\n    }\n  }, [days, location.pathname]);\n\n  const calcAvailableTimes = useCallback(() => {\n    const validTime = /\\d\\d?:\\d\\d ([AP]M)/;\n    let times = [];\n    schedules.forEach(({ rows }) => {\n      const idxOfTime = getColumnIdxOfKey(rows, 'time');\n      const moreTimes = rows\n        .map((row) => row[idxOfTime])\n        .filter((time) => validTime.test(time))\n        .map((time) => time.match(validTime)[0]);\n      times = times.concat(moreTimes);\n    });\n    return Array.from(new Set(times)).sort((a, b) => {\n      const _a = new Date('1970/01/01 ' + a);\n      const _b = new Date('1970/01/01 ' + b);\n      return _a > _b ? 1 : _a < _b ? -1 : 0;\n    });\n  }, [schedules]);\n\n  const calcTeachers = useCallback(() => {\n    let teachers = [];\n    schedules.forEach(({ rows }) => {\n      const idxOfTime = getColumnIdxOfKey(rows, 'teacher');\n      const moreTimes = rows.map((row) => row[idxOfTime]);\n      teachers = teachers.concat(moreTimes);\n    });\n    return Array.from(new Set(teachers)).sort();\n  }, [schedules]);\n\n  return (\n    <>\n      <a\n        href=\"https://dol.scatorah.org\"\n        title=\"Click to go to Yom Ha'asmaut day of learning main page\">\n        <div className=\"bg-day-of-learning-banner\"></div>\n      </a>\n      {location.pathname !== '/minyanim' && (\n        <div className=\"container\">\n          <div className=\"row\">\n            <ul className=\"nav nav-pills nav-justified m-3 w-100\">\n              <li className=\"nav-item\">\n                <a\n                  href=\"/#/today\"\n                  className={\n                    location.pathname === '/today'\n                      ? 'nav-link active'\n                      : 'nav-link'\n                  }>\n                  Today's Classes\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  href=\"/#/classes\"\n                  className={\n                    location.pathname === '/classes'\n                      ? 'nav-link active'\n                      : 'nav-link'\n                  }>\n                  Full Schedule\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  href=\"https://www.youtube.com/channel/UCsHn2xQEscv11QaNHpPf37A\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                  className=\"nav-link\">\n                  Recordings\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      )}\n      <div className=\"container\">\n        {(() =>\n          location.pathname === '/today' && (\n            <LiveItems\n              schedules={schedules}\n              filter={\n                !(filterType === 'none' || filterVal === '') && {\n                  type: filterType,\n                  match: filterVal,\n                }\n              }\n              heading={heading}\n            />\n          ))()}\n      </div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"input-group mt-3 mx-3\">\n            <label\n              htmlFor=\"filter\"\n              className={\n                location.pathname === '/classes' ? 'header-title' : 'hidden'\n              }>\n              Filter By:{' '}\n              <select\n                name=\"filter\"\n                onChange={(e) => {\n                  setfilterType(e.target.value);\n                  setFilterVal('');\n                }}\n                id=\"\"\n                value={filterType}>\n                <option value=\"none\">No filter</option>\n                <option value=\"time\">Time of day</option>\n                <option value=\"day\">Day of week</option>\n                <option value=\"topic\">Topic</option>\n                <option value=\"teacher\">Teacher</option>\n              </select>\n              {filterType !== 'none' &&\n                (filterType === 'day' ? (\n                  <select\n                    className=\"ml-2\"\n                    onChange={(e) => setFilterVal(e.target.value)}>\n                    <option value=\"\">Choose Day</option>\n                    <option value=\"mon\">Mon</option>\n                    <option value=\"tues\">Tues</option>\n                    <option value=\"wed\">Wed</option>\n                    <option value=\"thurs\">Thurs</option>\n                    <option value=\"fri\">Fri</option>\n                    <option value=\"sun\">Sun</option>\n                  </select>\n                ) : filterType === 'time' ? (\n                  <select\n                    className=\"ml-2\"\n                    onChange={(e) =>\n                      setFilterVal(e.target.value.toLowerCase())\n                    }>\n                    <option value=\"\">Choose Time</option>\n                    {calcAvailableTimes().map((time) => (\n                      <option value={time}>{time}</option>\n                    ))}\n                  </select>\n                ) : filterType === 'teacher' ? (\n                  <select\n                    className=\"ml-2\"\n                    onChange={(e) =>\n                      setFilterVal(e.target.value.toLowerCase())\n                    }>\n                    <option value=\"\">Choose Teacher</option>\n                    {calcTeachers().map((time) => (\n                      <option value={time}>{time}</option>\n                    ))}\n                  </select>\n                ) : (\n                  <input\n                    type=\"text\"\n                    className=\"ml-2\"\n                    onChange={(e) => setFilterVal(e.target.value.toLowerCase())}\n                    placeholder={`Enter ${filterType}(s)`}\n                  />\n                ))}\n            </label>\n          </div>\n        </div>\n        {location.pathname !== '/today' &&\n          schedules.map((schedule, idx) => {\n            return (\n              <ScheduleCard\n                key={idx}\n                schedule={schedule}\n                filter={\n                  !(filterType === 'none' || filterVal === '') && {\n                    type: filterType,\n                    match: filterVal,\n                  }\n                }\n              />\n            );\n          })}\n      </div>\n    </>\n  );\n};\n\nexport default ClassesScreen;\n","import React, { useState } from 'react';\nimport { AttachmentCard } from '../components';\n\n\ninterface AttachmentScreenProps {\n  attachments: Attachment[];\n}\n\nconst AttachmentScreen: React.FC<AttachmentScreenProps> = ({ attachments }) => {\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row align-items-stretch\">\n          {attachments.map((attachment, idx) => {\n            return (\n              <AttachmentCard\n                key={idx}\n                attachment={attachment}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AttachmentScreen;\n","import React, { useState, useEffect } from 'react';\nimport FileUploader from 'react-firebase-file-uploader';\n\nimport { ImageDropBox } from '../components';\nimport { database } from '../../service/index';\nimport spinner from '../assets/spinner.gif';\n\ninterface AttachmentPreviewItemProps {\n  attachment: Attachment;\n  isEditing: boolean;\n  onUpdateBtnPressed: () => void;\n  onDeleteBtnPressed: () => void;\n}\nconst AttachmentPreviewItem: React.FC<AttachmentPreviewItemProps> = ({\n  attachment,\n  isEditing,\n  onUpdateBtnPressed,\n  onDeleteBtnPressed,\n}) => (\n  <li className=\"list-group-item d-flex justify-content-between my-2\">\n    <h3>{attachment.title}</h3>\n\n    {isEditing ? (\n      <button className=\"btn btn-danger m-1\" onClick={onDeleteBtnPressed}>\n        x\n      </button>\n    ) : (\n      <button className=\"btn btn-warning\" onClick={onUpdateBtnPressed}>\n        <i className=\"fas fa-edit text-light\"></i>\n      </button>\n    )}\n  </li>\n);\n\ninterface AttachmentsAdminScreenProps {\n  attachments: Attachment[];\n  createAttachment: (\n    newAttachment: Attachment,\n  ) => Promise<firebase.database.Reference> | void;\n  deleteAttachment: (_id: firebase.database.Reference) => Promise<boolean>;\n  updateAttachment: (\n    _id: firebase.database.Reference,\n    updatedAttachment: Attachment,\n  ) => Promise<boolean>;\n}\n\nconst AdminScreen: React.FC<AttachmentsAdminScreenProps> = ({\n  attachments,\n  createAttachment,\n  deleteAttachment,\n  updateAttachment,\n}) => {\n  const [attachmentBeingEdited, setAttachmentBeingEdited] = useState<Attachment>(\n    undefined,\n  );\n  const updateAttachmentBeingEdited = updates =>\n  setAttachmentBeingEdited({ ...attachmentBeingEdited, ...updates });\n  let uploading = false;\n\n  const onSaveBtnPressed = () => {\n    const { title, file, cover, body } = attachmentBeingEdited;\n    const newAttachment = { title, file, cover: cover || '', body: body || ''};\n    if (attachmentBeingEdited._id) {\n      updateAttachment(attachmentBeingEdited._id, newAttachment);\n    } else {\n      createAttachment(newAttachment);\n    }\n    setAttachmentBeingEdited(undefined);\n  };\n\n  const handleUploadSuccess = (file) => {\n    database\n      .storage\n      .ref(\"/attachments\")\n      .child(file)\n      .getDownloadURL()\n      .then(url => {\n        updateAttachmentBeingEdited({file: url as string});\n        uploading = false;\n      });\n  };\n\n  const handleUploadStart = (file) => {\n    uploading = true;\n  };\n\n  useEffect(() => {\n    console.log(attachmentBeingEdited);\n  }, [attachmentBeingEdited]);\n  return (\n    <div className=\"admin-page-container\">\n      <div className=\"schedule-manager-widget row mt-5 py-5\">\n        <div className=\"col scroll-content\">\n          {attachments.map((attachment, idx) => (\n            <AttachmentPreviewItem\n              key={idx}\n              attachment={attachment}\n              isEditing={attachmentBeingEdited?._id === attachment._id}\n              onUpdateBtnPressed={() => setAttachmentBeingEdited(attachment)}\n              onDeleteBtnPressed={() => deleteAttachment(attachment._id)}\n            />\n          ))}\n        </div>\n        <div className=\"col schedule-upload-container\">\n          <div className=\"text-center\">\n            <h3 className=\"text-light\">\n              {!!attachmentBeingEdited\n                ? 'Update Attachment:'\n                : 'Upload Attachment Here:'}\n            </h3>\n          </div>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Attachment Title\"\n            value={attachmentBeingEdited?.title || ''}\n            onChange={e => updateAttachmentBeingEdited({ title: e.target.value })}\n          />\n          <ImageDropBox\n            onImageDropped={cover => updateAttachmentBeingEdited({ cover })}\n            currentImage={attachmentBeingEdited?.cover}\n          />\n          \n          <div className=\"image-dropper mt-2\">\n            <form>\n              <FileUploader\n                randomizeFilename\n                metadata={{cacheControl: 'max-age=2592000'}}\n                storageRef={database.storage.ref(\"/attachments\")}\n                onUploadStart={handleUploadStart}\n                onUploadSuccess={handleUploadSuccess}\n                id=\"file-drop\"\n              />\n              <label htmlFor=\"file-drop\">\n                <p>\n                  Drop attachment here\n                  <br />\n                  (or click to choose file)\n                </p>\n              </label>\n            </form>\n            {!!uploading && <img src={spinner} />}\n            {!!attachmentBeingEdited?.file && <a href={attachmentBeingEdited.file} target=\"_blank\">Preview</a>}\n          </div>\n\n          <textarea\n            className=\"form-control mt-2\"\n            placeholder=\"Caption\"\n            value={attachmentBeingEdited?.body || ''}\n            onChange={e => updateAttachmentBeingEdited({ body: e.target.value })}\n          />\n\n          <button className=\"btn btn-success mt-2\" onClick={onSaveBtnPressed}>\n            {attachmentBeingEdited?._id ? 'Save updates' : 'Upload Attachment'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminScreen;\n","import React, { useState } from 'react';\n\nimport { database } from '../../service/index';\n\ninterface FormScreenProps {\n  forms: Form[];\n}\n\nconst FormScreen: React.FC<FormScreenProps> = ({ forms }) => {\n  const [firstName, setFirstName] = useState<string>('');\n  const [benbat, setBenbat] = useState<string>('');\n  const [mothersName, setMothersName] = useState<string>('');\n  const [formMessage, setFormMessage] = useState<string>('');\n\n  const success = (e) => {\n    setFirstName('');\n    setBenbat('');\n    setMothersName('');\n    setFormMessage('Submitted!');\n    setTimeout(() => {\n      setFormMessage('');\n    }, 2000);\n  }\n\n  const fail = (e) => {\n    setFormMessage('Error');\n  }\n\n  const submit = (e) => {\n    e.preventDefault();\n    database.push('tehillim', {firstName, benbat, mothersName}).then(success, fail);\n  }\n  \n  return (\n    <>\n      <div className=\"container\">\n        <p>\n          We are compiling a list of those who have fallen ill to share with the community so that we may dedicate our prayers and learning in the merit of their complete and speedy recovery.\n        </p>\n        <form onSubmit={submit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"firstName\">Hebrew First Name</label>\n            <input type=\"text\" id=\"firstName\" className=\"form-control\" onChange={e => setFirstName(e.target.value)} value={firstName} required />\n          </div>\n          <div className=\"form-group\">\n            <label>Ben/Bat</label>\n            <div className=\"form-check\">\n              <input type=\"radio\" id=\"ben\" name=\"benbat\" value=\"ben\" checked={!!(benbat === 'ben')} onChange={e => e.target.checked && setBenbat(e.target.value)} required />\n              <label htmlFor=\"ben\"> Ben</label>\n            </div>\n            <div className=\"form-check\">\n              <input type=\"radio\" id=\"bat\" name=\"benbat\" value=\"bat\" checked={!!(benbat === 'bat')} onChange={e => e.target.checked && setBenbat(e.target.value)} />\n              <label htmlFor=\"bat\"> Bat</label>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"mothersName\">Mother's Hebrew Name</label>\n            <input type=\"text\" id=\"mothersName\" className=\"form-control\" onChange={e => setMothersName(e.target.value)} value={mothersName} required />\n          </div>\n          <div className=\"form-group\">\n            <button type=\"submit\" className=\"btn btn-primary btn-lg\">Submit</button>\n            {!!formMessage && (<span className=\"alert\">{formMessage}</span>)}\n          </div>\n        </form>\n      </div>\n      <div className=\"container my-5\">\n        <table className=\"table table-striped table-bordered table-hover shadow\">\n          <thead className=\"text-light\">\n            <tr>\n              <th>Please dedicate prayers and learning in the merit of their complete and speedy recovery.</th>\n            </tr>\n          </thead>\n          <tbody>\n          {forms.map((person, idx) => {\n            let hebrew = ~person.firstName.search(/[\\u0590-\\u05FF]/) && ~person.mothersName.search(/[\\u0590-\\u05FF]/);\n            let benbat = person.benbat;\n            if (hebrew) {\n              benbat = benbat === 'ben' ? 'בן' : 'בת'\n            }\n            return (\n              <tr key={idx}>\n                <td dir={hebrew && 'rtl'}>{person.firstName} {benbat} {person.mothersName}</td>\n              </tr>\n            )\n          })}\n          </tbody>\n        </table>\n      </div>\n\n    </>\n  );\n};\n\nexport default FormScreen;\n","import React from 'react';\nimport SCALogo from '../assets/SCALogo.png';\n\nimport { LiveClassesCarousel } from '../components';\n\ninterface IndexScreenProps {\n  schedules: Schedule[];\n}\n\nconst IndexScreen: React.FC<IndexScreenProps> = ({ schedules }) => {\n  return (\n    <>\n      <div className=\"home-bg-img\">\n        <div className=\"opaque-overlay\"></div>\n      </div>\n      <div className=\"bg-pesah py-5 block shadow\">\n        <img\n          src={SCALogo}\n          className=\"centered-image img-fluid\"\n          height=\"150\"\n          alt=\"\"\n        />\n      </div>\n      <div className=\"block\">\n        <LiveClassesCarousel\n          schedules={schedules}\n          filter={{ type: '', match: '' }}\n          heading=\"Classes\"\n        />\n      </div>\n      <a href=\"https://www.dol.scatorah.org/\">\n        <div\n          className=\"shadow text-center pb-2\"\n          style={{ backgroundColor: '#BEE3F4' }}>\n          <div className=\"bg-pesah-recordings pb-5 block text-center\"></div>\n          <a\n            href=\"https://www.dol.scatorah.org/\"\n            className=\"btn btn-danger px-4 mt-2\">\n            Click here for full schedule\n          </a>\n        </div>\n      </a>\n\n      <div className=\"block\">\n        <LiveClassesCarousel\n          schedules={schedules}\n          filter={{ type: 'type', match: 'minyan' }}\n          heading=\"Minyanim\"\n        />\n      </div>\n\n      <div className=\"d-flex align-items-center justify-content-center my-3 site-nav-index\">\n        <a\n          href=\"https://chat.whatsapp.com/FUQrLPQSXlZ8EeB0F1kHLJ\"\n          className=\"btn btn-primary btn-whatsapp btn-lg m-3\">\n          Join Chat for Class Updates\n        </a>\n        <a\n          href=\"mailto:info@scaupdates.org\"\n          className=\"btn btn-primary btn-lg m-3 btn-email\">\n          Contact the SCA\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default IndexScreen;\n","import React, { useEffect, useState } from 'react';\n\nimport { ClassesScreen } from '../ui';\nimport { scheduleManager } from '../service';\n\nconst ClassesScreenCreator = () => {\n  const [schedules, setSchedules] = useState<Schedule[]>([]);\n\n  useEffect(() => {\n    scheduleManager.onSchedulesChanged((data: DataFrame) => {\n      setSchedules([{ title: 'All Schedules', rows: data }]);\n    });\n  }, []);\n\n  return <ClassesScreen schedules={schedules} />;\n};\n\nexport default ClassesScreenCreator;\n","import React, { useEffect } from 'react';\nimport { HashRouter, Route, useHistory } from 'react-router-dom';\nimport ReactGa from 'react-ga';\n\nimport { Header, Footer } from './ui/components';\nimport {\n  ClassesScreenCreator,\n  AttachmentsAdminScreenCreator,\n  AttachmentsScreenCreator,\n  FormScreenCreator,\n  IndexScreenCreator,\n} from './factory';\n\ninterface RouteMap {\n  [path: string]: RouteConfig;\n}\ninterface RouteConfig {\n  exact?: boolean;\n  pageName?: string; // For display purposes\n  Component: React.ComponentType;\n}\n\nconst renderRoutes = (routes: RouteMap) =>\n  Object.entries(routes).map(([path, { exact, Component }]) => (\n    <Route path={path} exact={exact} component={Component} />\n  ));\n\nexport const adminRoutes: RouteMap = {\n  '/edit-letters': { exact: true, Component: AttachmentsAdminScreenCreator },\n};\n\nconst AdminNavigator = () => (\n  <HashRouter basename=\"/admin\">{renderRoutes(adminRoutes)}</HashRouter>\n);\n\nconst CompThatTracksLocation = () => {\n  const history = useHistory();\n  useEffect(() => {\n    return history.listen((location) => {\n      ReactGa.pageview(location.pathname);\n    });\n  }, [history]);\n\n  return null;\n};\n\nexport const mainRoutes: RouteMap = {\n  '/': { exact: true, Component: IndexScreenCreator, pageName: '' },\n  '/today': {\n    exact: true,\n    Component: ClassesScreenCreator,\n    // pageName: 'SCA Affiliate Synagogue - Virtual Classes Schedules',\n  },\n  '/classes': {\n    exact: true,\n    Component: ClassesScreenCreator,\n    // pageName: 'SCA Affiliate Synagogue - Virtual Classes Schedules',\n  },\n  '/minyanim': {\n    exact: true,\n    Component: ClassesScreenCreator,\n    // pageName: 'SCA Affiliate Synagogue - Virtual Minyanim Schedules',\n  },\n  '/bekhorot': {\n    exact: true,\n    Component: ClassesScreenCreator,\n    pageName: 'SCA Affiliate Synagogue - Siyum Bekhorot Schedules',\n  },\n  '/letters': {\n    exact: true,\n    Component: AttachmentsScreenCreator,\n    pageName: 'COVID-19 Letters',\n  },\n  '/tehillim': {\n    exact: true,\n    Component: FormScreenCreator,\n    pageName: 'SCA Tehilim Requests',\n  },\n  '/admin': { Component: AdminNavigator },\n};\n\nconst MainNavigator = () => (\n  <HashRouter>\n    <CompThatTracksLocation />\n    <Header />\n    {renderRoutes(mainRoutes)}\n    <Footer />\n  </HashRouter>\n);\n\nexport default MainNavigator;\n","import React, { useEffect, useState } from 'react';\n\nimport { AttachmentsAdminScreen } from '../ui';\nimport { attachmentManager } from '../service';\n\nconst AttachmentsAdminScreenCreator = () => {\n  const [currentAttachments, setCurrentAttachments] = useState<Attachment[]>([]);\n\n  useEffect(() => {\n    attachmentManager.onAttachmentsChanged(setCurrentAttachments);\n  }, []);\n\n  const uploadAttachment = attachment => {\n    if (!attachment.file) {\n      return alert('Please upload an attachment first');\n    }\n    if (!attachment.title) {\n      return alert('Please enter the title of this table');\n    }\n    return attachmentManager.addAttachment(attachment);\n  };\n\n  const removeAttachment = _id => {\n    return attachmentManager.removeAttachment(_id);\n  };\n\n  const updateAttachment = (_id, updatedAttachment) => {\n    return attachmentManager.updateAttachment(_id, updatedAttachment);\n  };\n\n  return (\n    <AttachmentsAdminScreen\n      attachments={currentAttachments}\n      createAttachment={uploadAttachment}\n      updateAttachment={updateAttachment}\n      deleteAttachment={removeAttachment}\n    />\n  );\n};\n\nexport default AttachmentsAdminScreenCreator;\n","import React, { useEffect, useState } from 'react';\nimport ReactGa from 'react-ga';\n\nimport { IndexScreen } from '../ui';\nimport { scheduleManager } from '../service';\n\nconst IndexScreenCreator = () => {\n  const [schedules, setSchedules] = useState<Schedule[]>([]);\n\n  useEffect(() => {\n    scheduleManager.onSchedulesChanged((data: DataFrame) => {\n      setSchedules([{ title: 'All Schedules', rows: data }]);\n    });\n\n    ReactGa.pageview('/');\n  }, []);\n\n  return <IndexScreen schedules={schedules} />;\n};\n\nexport default IndexScreenCreator;\n","import React, { useEffect, useState } from 'react';\n\nimport { AttachmentsScreen } from '../ui';\nimport { attachmentManager } from '../service';\n\nconst AttachmentsScreenCreator = () => {\n  const [attachments, setAttachments] = useState<Attachment[]>([]);\n\n  useEffect(() => {\n    attachmentManager.onAttachmentsChanged(setAttachments);\n  }, []);\n\n  return <AttachmentsScreen attachments={attachments} />;\n};\n\nexport default AttachmentsScreenCreator;","import React, { useEffect, useState } from 'react';\n\nimport { FormScreen } from '../ui';\nimport { formManager } from '../service';\n\nconst FormScreenCreator = () => {\n  const [forms, setForms] = useState<Form[]>([]);\n\n  useEffect(() => {\n    formManager.onFormsChanged(setForms);\n  }, []);\n\n  return <FormScreen forms={forms} />;\n};\n\nexport default FormScreenCreator;\n","import React from 'react';\nimport AppNavigator from './AppNavigator';\n\nconst App = () => <AppNavigator />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGa from 'react-ga';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'jquery';\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\nimport './ui/styles.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactGa.initialize('UA-164561407-1');\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}