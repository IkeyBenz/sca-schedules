{"version":3,"sources":["ui/assets/spinner.gif","ui/assets/SCALogo.png","ui/assets/on-air-indicator.png","ui/assets/sca-white.svg","util.ts","ui/components/ScheduleCard.tsx","service/ScheduleService.ts","service/AttachmentService.ts","service/DatabaseService.ts","service/FormService.ts","service/index.ts","ui/components/LiveItems.tsx","ui/screens/Classes.tsx","factory/ClassesScreenCreator.tsx","AppNavigator.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","convertJsonToArrayWithIds","obj","Object","entries","map","_id","val","getColumnIdxOfKey","data","key","findIndex","currKey","toLowerCase","includes","excludeFilterDataFrameRows","filterType","filterVal","header","searchableColIndex","filteredRows","slice","filter","row","cellText","concat","filterDataFrameRows","SmartText","input","highlight","passwordCol","urls","linkify","location","useLocation","password","length","className","value","type","iconSize","pathname","href","style","height","width","ScheduleCard","schedule","rows","logo","title","match","filteredCols","reduce","acc","cur","idx","toString","startsWith","push","filterColIdx","col","passwordColIdx","shouldHighlight","colText","colIdx","text","src","rIdx","cIdx","ScheduleService","database","storage","convertTimesToLocalTimezone","adjustTime","time","moment","local","format","idxOfTime","i","newRow","timeRange","split","trim","join","this","read","scheduleRef","then","makeSchedules","cb","onChange","withoutHiddenRows","todaysClasses","scheduleData","dayIdx","now","Date","days","shouldInclude","dayCol","getDay","forEach","rowDay","leftRight","left","v","right","filterByToday","minyanim","fullSchedule","createScheduleManager","persistedStorage","AttachmentService","attachment","delete","newAttachment","write","findAll","_alphabetize","attachments","sort","a","b","createAttachmentManager","FirebaseManager","config","db","app","firebase","initializeApp","path","ref","once","s","set","basePath","remove","on","createFirebaseDbManager","FormService","form","newForm","tehillim","firstName","createFormManager","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","scheduleManager","LiveItems","headerRows","removeDayCol","df","_","timeIdx","live","elapsed","upcoming","rowTimes","startTime","endTime","add","subtract","isBetween","isSameOrAfter","isBefore","ClassesScreen","useState","setfilterType","setFilterVal","calcTeachers","useCallback","teachers","moreTimes","Array","from","Set","target","rel","htmlFor","name","e","id","validTime","times","test","last","next","calcAvailableTimes","placeholder","ClassesScreenCreator","defaultScheduleDatas","fill","setScheduleDatas","useEffect","onSchedulesChanged","Classes","CompThatTracksLocation","history","useHistory","listen","ReactGa","pageview","NavigatorForWix","basename","to","component","App","AppNavigator","Boolean","window","hostname","initialize","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"oHAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,sCCA3CD,EAAOC,QAAU,IAA0B,8C,mBCA3CD,EAAOC,QAAU,IAA0B,uC,6QCwC9BC,G,MAA4B,SAACC,GAAD,OACvCC,OAAOC,QAAQF,GAAKG,KAAI,mCAAEC,EAAF,KAAOC,EAAP,yBAAmBD,OAAQC,QAExCC,EAAoB,SAACC,EAAiBC,GAGjD,OAFiBD,EAAK,GAAGE,WAAU,SAAAC,GAAO,OACxCA,EAAQC,cAAcC,SAASJ,EAAIG,mBAI1BE,EAA6B,SACxCC,EACAC,EACAR,GAEA,IAAMS,EAAM,YAAOT,EAAK,IAClBU,EAAqBX,EAAkBC,EAAMO,GACnD,IAA4B,IAAxBG,EACF,OAAO,YAAIV,GAEb,IAAMW,EAAeX,EAAKY,MAAM,GAAGC,QAAO,SAAAC,GACxC,IAAMC,EAAWD,EAAIJ,GAErB,OAAOK,IAAaA,EAASX,cAAcC,SAASG,EAAUJ,kBAEhE,MAAO,CAACK,GAAQO,OAAOL,IAGZM,EAAsB,SAACV,EAAoBC,EAAmBR,GACzE,IAAMS,EAAM,YAAOT,EAAK,IAClBU,EAAqBX,EAAkBC,EAAMO,GACnD,IAA4B,IAAxBG,EACF,MAAO,CAACD,GAEV,IAAME,EAAeX,EAAKY,MAAM,GAAGC,QAAO,SAAAC,GACxC,IAAMC,EAAWD,EAAIJ,GAErB,OAAOK,GAAYA,EAASX,cAAcC,SAASG,EAAUJ,kBAE/D,MAAO,CAACK,GAAQO,OAAOL,ICtDZO,EAAsC,SAAC,GAK7C,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,UACAN,EAEI,EAFJA,IACAO,EACI,EADJA,YAEMC,EAAOC,OAAaJ,GACpBK,EAAWC,cACbC,EAAW,GAIf,IAHKL,GAAoC,MAArBP,EAAIO,KACtBK,EAAQ,oBAAgBZ,EAAIO,KAEV,IAAhBC,EAAKK,OACP,OAAO,uBAAGC,UAAWR,GAAa,aAAcD,GAR9C,MAWoBG,EAAK,GAArBO,EAXJ,EAWIA,MAAOC,EAXX,EAWWA,KACTC,EAAiC,MAAtBP,EAASQ,SAAmB,GAAK,GAClD,OACE,8BACE,uBACEC,KAAMJ,EACNK,MAAO,CAAEC,OAAQJ,EAAUK,MAAOL,GAClCH,UACEC,EAAMxB,SAAS,SAAoB,QAATyB,EACtB,WACAD,EAAMxB,SAAS,gBAA2B,QAATyB,EACjC,UACA,IAGI,QAATA,EAAiB,aAAeD,GAC9B,IACL,uBAAGD,UAAU,YAAYF,KAmFhBW,EA9EmC,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAUzB,EAAa,EAAbA,OACrD0B,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MAEd9B,EAAeE,EACjBI,EAAoBJ,EAAOiB,KAAMjB,EAAO6B,MAAOH,GAC/CA,EAEJ,GAA4B,IAAxB5B,EAAagB,OAEf,OAAO,KAGT,IAEMgB,EAFYhC,EAAa,GAEAiC,QAAO,SAACC,EAAKC,EAAKC,GAI/C,OAHID,EAAIE,WAAW5C,cAAc6C,WAAW,SAC1CJ,EAAIK,KAAKH,GAEJF,IACN,IAEGM,EACJtC,GAAU0B,EAAK,GAAGrC,WAAU,SAAAkD,GAAG,OAAIA,EAAIhD,cAAcC,SAASQ,EAAOiB,SAEjEuB,EAAiBd,EAAK,GAAGrC,WAAU,SAAAkD,GAAG,OAC1CA,EAAIhD,cAAcC,SAAS,eAGvBiD,EAAkB,SAACC,EAAiBC,GACxC,IAAMC,EAAOF,EAAQnD,cACrB,OAAO+C,IAAiBK,GAAUC,EAAKpD,SAASQ,EAAO6B,QAGzD,OACE,yBAAKd,UAAU,sBACb,yBAAKA,UAAU,iBACVY,GACD,yBAAKZ,UAAU,SACb,yBAAK8B,IAAKlB,EAAMZ,UAAU,eAG9B,wBAAIA,UAAU,kBAAkBa,IAElC,2BAAOb,UAAU,yDACf,2BAAOA,UAAU,cACf,4BACGjB,EAAa,GAAGf,KAAI,SAACwD,EAAKL,GACzB,IAAKJ,EAAatC,SAAS0C,GACzB,OAAO,wBAAI9C,IAAK8C,GAAMK,QAK9B,+BACGzC,EAAaC,MAAM,GAAGhB,KAAI,SAACkB,EAAK6C,GAAN,OACzB,wBAAI1D,IAAK0D,GACN7C,EAAIlB,KAAI,SAACwD,EAAKQ,GACb,IAAKjB,EAAatC,SAASuD,GACzB,OACE,wBAAI3D,IAAK2D,GACP,kBAAC,EAAD,CACEzC,MAAOiC,EACPtC,IAAKA,EACLO,YAAagC,EACbjC,UAAWkC,EAAgBF,EAAKQ,iB,oDC1HlDC,E,WAKJ,WAAYC,GAAqB,yBAJzBC,aAIwB,OA6BxBC,4BAA8B,SAAChE,GACrC,IAAMiE,EAAa,SAACC,GAAD,OAAUC,IAAOD,EAAM,UAAUE,QAAQC,OAAO,WAC7DC,EAAYtE,EAAK,GAAGE,WAAU,SAACkD,GAAD,OAASA,EAAIhD,cAAcC,SAAS,WASxE,OARkBL,EAAKJ,KAAI,SAACkB,EAAKyD,GAC/B,IAAMC,EAAM,YAAO1D,GACnB,GAAIyD,EAAI,EAAG,CACT,IAAME,EAAYD,EAAOF,GAAWI,MAAM,KAAK9E,KAAI,SAACsE,GAAD,OAAUA,EAAKS,UAClEH,EAAOF,GAAaG,EAAU7E,IAAIqE,GAAYW,KAAK,SAErD,OAAOJ,MArCTK,KAAKd,QAAUD,E,iMAIRe,KAAKd,QAAQe,KAAKjB,EAAgBkB,aAAaC,KAAKH,KAAKI,gB,+IAG/CC,GAA4C,IAAD,OAC5DL,KAAKd,QAAQoB,SAAStB,EAAgBkB,aAAa,SAAA/E,GACjDkF,EAAG,EAAKD,cAAcjF,S,oCAKJA,GACpB,IAAMoF,EAAoBnE,EAAoB,SAAU,OAAQjB,GAKhE,MAAO,CACLqF,cFqDuB,SAACC,GAC5B,IAAMC,EAASD,EAAa3D,OAAS,GAChC2D,EAAa,GAAGpF,WAAU,SAAAF,GAAI,OAAIA,EAAKI,cAAcC,SAAS,WAEnE,IAAKkF,IAAsB,IAAZA,EACb,OAAOD,EAGT,IAAME,EAAM,IAAIC,KACVC,EAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAExD,OAAOJ,EAAazE,QAAO,SAACC,EAAKyD,GAC/B,IAAIoB,EAAsB,IAANpB,EACdqB,EAAS9E,EAAIyE,GACnB,GAAIK,EAAOxF,cAAcC,SAAS,SAChCsF,GAAgB,OACX,GAAIC,EAAOvF,SAASqF,EAAKF,EAAIK,WAClCF,GAAgB,OACX,GAAIC,EAAOvF,SAAS,KAAM,CACZuF,EAAOlB,MAAM,UACrBoB,SAAQ,SAAAC,GACjB,GAAIA,EAAO1F,SAAS,KAAM,CACxB,IAAM2F,EAAYD,EAAOrB,MAAM,KACzBuB,EAAOP,EAAKxF,WAAU,SAAAgG,GAAC,OAAIF,EAAU,GAAG3F,SAAS6F,MACjDC,EAAQT,EAAKxF,WAAU,SAAAgG,GAAC,OAAIF,EAAU,GAAG3F,SAAS6F,MACpDD,EAAOT,EAAIK,UAAYM,EAAQX,EAAIK,WACrCF,GAAgB,OAKxB,OAAOA,KExFeS,CADE9F,EAA2B,OAAQ,SAAU8E,IAMnEiB,SAAUpF,EAAoB,OAAQ,SAAUmE,GAChDkB,aAAclB,O,KA7BdvB,EAGGkB,YAAc,iEAkDRwB,MAJf,SAA+BC,GAC7B,OAAO,IAAI3C,EAAgB2C,ICpDvBC,E,WAGJ,WAAY3C,GAAqB,yBAFzBC,aAEwB,EAC9Bc,KAAKd,QAAUD,E,mGAGG4C,G,0FACX7B,KAAKd,QAAQb,KAAK,cAAewD,I,uLAGnB7G,G,0FACdgF,KAAKd,QAAQ4C,OAAO,cAAe9G,I,uLAGrBA,EAAkC+G,G,0FAChD/B,KAAKd,QAAQ8C,MAAb,sBAAkChH,GAAO+G,I,yQAIzC/B,K,SAAwBA,KAAKd,QAAQ+C,QAAQ,e,iDAAxCC,a,kKAGO7B,GAA0C,IAAD,OAC5DL,KAAKd,QAAQoB,SAAS,eAAe,SAAAnF,GAAI,OACvCkF,EAAG,EAAK6B,aAAavH,EAA0BQ,U,mCAItCgH,GACX,OAAOA,EAAcA,EAAYC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEzE,MAAQ0E,EAAE1E,MAAQ,EAAIyE,EAAEzE,MAAQ0E,EAAE1E,OAAS,EAAI,KAAK,O,KAQ3F2E,MAJf,SAAiCZ,GAC/B,OAAO,IAAIC,EAAkBD,I,iBC/BzBa,G,uBAKJ,WAAYC,GAAyB,yBAJrCC,QAIoC,OAFpCxD,aAEoC,EAClC,IAAMyD,EAAMC,IAASC,cAAcJ,GACnCzC,KAAK0C,GAAKC,EAAI1D,WACde,KAAKd,QAAUyD,EAAIzD,U,0FAGV4D,G,0FACF9C,KAAK0C,GACTK,IAAID,GACJE,KAAK,SACL7C,MAAK,SAAC8C,GAAD,OAAOA,EAAEhI,U,4KAIP6H,EAAc3H,G,0FACjB6E,KAAK0C,GAAGK,IAAID,GAAMI,IAAI/H,I,6KAGpBgI,EAAkBhI,G,0FACpB6E,KAAK0C,GAAGK,IAAII,GAAU9E,KAAKlD,I,gLAItB2H,G,0FACL9C,KAAK0C,GAAGK,IAAID,GAAME,KAAK,SAC3B7C,MAAK,SAAC8C,GAAD,OAAOA,EAAEhI,OAAS,MAAIkF,KAAKxF,I,6KAGxBmI,EAAc9H,G,0FAClBgF,KAAK0C,GAAGK,IAAR,UAAeD,EAAf,YAAuB9H,IAAOoI,U,wIAG9BN,EAAczC,GACrBL,KAAK0C,GAAGK,IAAID,GAAMO,GAAG,SAAS,SAACJ,GAAD,OAAO5C,EAAG4C,EAAEhI,c,MAQ/BqI,MAJf,SAAiCb,GAC/B,OAAO,IAAID,EAAgBC,IC/CvBc,E,WAGJ,WAAYtE,GAAqB,yBAFzBC,aAEwB,EAC9Bc,KAAKd,QAAUD,E,6FAGHuE,G,0FACLxD,KAAKd,QAAQb,KAAK,WAAYmF,I,iLAGtBxI,G,0FACRgF,KAAKd,QAAQ4C,OAAO,WAAY9G,I,iLAGxBA,EAAkCyI,G,0FAC1CzD,KAAKd,QAAQ8C,MAAb,mBAA+BhH,GAAOyI,I,mQAItCzD,K,SAAwBA,KAAKd,QAAQ+C,QAAQ,Y,iDAAxCC,a,4JAGC7B,GAAiC,IAAD,OAC7CL,KAAKd,QAAQoB,SAAS,YAAY,SAAAnF,GAAI,OACpCkF,EAAG,EAAK6B,aAAavH,EAA0BQ,U,mCAItCuI,GACX,OAAOA,EAAWA,EAAStB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEsB,UAAYrB,EAAEqB,UAAY,EAAItB,EAAEsB,UAAYrB,EAAEqB,WAAa,EAAI,KAAK,O,KAQrGC,MAJf,SAA2BjC,GACzB,OAAO,IAAI4B,EAAY5B,ICtBnB1C,EAAWqE,EAVsB,CACrCO,OAAQ,0CACRC,WAAY,oCACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,8CAIHC,EAAkB1C,EAAsBzC,G,GACpBsD,EAAwBtD,GAC9B2E,EAAkB3E,G,qBCwFvBoF,EAxF6B,SAAC,GAA0B,IAAxB5G,EAAuB,EAAvBA,SAAUzB,EAAa,EAAbA,OAC/C0B,EAASD,EAATC,KAEF4G,EAAa5G,EAAK,GAClB6G,EAAe,SAAAC,GACnB,IAAM9D,EAAS8D,EAAG,GAAGnJ,WAAU,SAAAkD,GAAG,OAAIA,EAAIhD,cAAcC,SAAS,UACjE,OAAmB,IAAZkF,EACHhD,EAAK3C,KAAI,SAAAkB,GAAG,OAAIA,EAAID,QAAO,SAACyI,EAAG/E,GAAJ,OAAUA,IAAMgB,QAC3C8D,GAGN,GAAI9G,EAAKZ,OAAS,EAEhB,OAAO,KAGT,IAAM4H,EAAUJ,EAAWjJ,WAAU,SAAAF,GAAI,OACvCA,EAAKI,cAAcC,SAAS,WAI9B,IAAiB,IAAbkJ,EACF,OAAO,kBAAC,EAAD,CAAcjH,SAAU,CAAEG,MAAO,GAAIF,UAG9C,IAAMiD,EAAM,IAAIC,KACV+D,EAAO,GACPC,EAAU,GACVC,EAAW,GA2BjB,OAzBAnH,EAAKuD,SAAQ,SAAAhF,GACX,IAAM6I,EAAW7I,EAAIyI,GAAS7G,MAAM,2BACpC,IAAKiH,EAAU,OAAO,GAEnBA,EAAS,GAAGvJ,cAAcC,SAAS,OACpCS,EAAI,GAAGV,cAAcC,SAAS,QAE9BsJ,EAAS,IAAM,OAEjB,IAAMC,EAAYzF,IAAOwF,EAAS,GAAI,aAChCE,EACJF,EAAShI,OAAS,EACdwC,IAAOwF,EAAS,GAAI,aACpBxF,IAAOyF,GAAWE,IAAI,EAAG,KAC/BF,EAAUG,SAAS,GAAI,KAEnB5F,IAAOqB,GAAKwE,UAAUJ,EAAWC,EAAS,KAAM,MAClDL,EAAKtG,KAAKpC,GACDqD,IAAOqB,GAAKyE,cAAcJ,GACnCJ,EAAQvG,KAAKpC,GACJqD,IAAOqB,GAAK0E,SAASN,IAC9BF,EAASxG,KAAKpC,MAKhB,6BACG0I,EAAK7H,OAAS,GACb,kBAAC,EAAD,CACEW,SAAU,CACRC,KAAM6G,EAAa,CAACD,GAAYnI,OAAOwI,IACvC/G,MAAM,WAAD,OAAaH,EAASG,QAE7B5B,OAAQA,IAGX6I,EAAS/H,OAAS,GACjB,kBAAC,EAAD,CACEW,SAAU,CACRC,KAAM6G,EAAa,CAACD,GAAYnI,OAAO0I,IACvCjH,MAAM,YAAD,OAAcH,EAASG,QAE9B5B,OAAQA,IAGX4I,EAAQ9H,OAAS,GAChB,kBAAC,EAAD,CACEW,SAAU,CACRC,KAAM6G,EAAa,CAACD,GAAYnI,OAAOyI,IACvChH,MAAM,WAAD,OAAaH,EAASG,QAE7B5B,OAAQA,MCoHHsJ,G,8BA3MqC,SAAC,GAI9C,IAHL9E,EAGI,EAHJA,cACAgB,EAEI,EAFJA,SACcf,EACV,EADJgB,aACI,EACgC8D,mBAAiB,QADjD,mBACG7J,EADH,KACe8J,EADf,OAE8BD,mBAAiB,IAF/C,mBAEG5J,EAFH,KAEc8J,EAFd,KAGE9I,EAAWC,cAuBX8I,EAAeC,uBAAY,WAC/B,IAAIC,EAAW,GACTnG,EAAYvE,EAAkBuF,EAAc,WAC5CoF,EAAYpF,EAAa1F,KAAI,SAAAkB,GAAG,OAAIA,EAAIwD,MAE9C,OADAmG,EAAWA,EAASzJ,OAAO0J,GACpBC,MAAMC,KAAK,IAAIC,IAAIJ,IAAWxD,SACpC,CAAC3B,IAEJ,OACE,oCACE,yBAAK1D,UAAU,kBACb,yBAAKA,UAAU,OACb,wBAAIA,UAAU,yCACZ,wBAAIA,UAAU,YACZ,uBACEK,KAAK,yBACLL,UACEJ,EAASQ,SAAS3B,SAAS,UACvB,kBACA,YALR,oBAWF,wBAAIuB,UAAU,YACZ,uBACEK,KAAK,4BACLL,UACEJ,EAASQ,SAAS3B,SAAS,aACvB,kBACA,YALR,aAWF,wBAAIuB,UAAU,YACZ,uBACEK,KAAK,2BACLL,UACEJ,EAASQ,SAAS3B,SAAS,YACvB,kBACA,YALR,kBAWF,wBAAIuB,UAAU,YACZ,uBACEK,KAAK,2DACL6I,OAAO,SACPC,IAAI,sBACJnJ,UAAU,YAJZ,kBAaP0D,EAAa3D,OAAS,GACrB,yBAAKC,UAAU,aACb,yBAAKA,UAAiC,cAAtBJ,EAASQ,SAA2B,SAAW,OAC7D,yBAAKJ,UAAU,yBACb,2BAAOoJ,QAAQ,SAASpJ,UAAU,gBAAlC,aACa,IACX,4BACEqJ,KAAK,SACL9F,SAAU,SAAA+F,GACRb,EAAca,EAAEJ,OAAOjJ,OACvByI,EAAa,KAEfa,GAAG,GACHtJ,MAAOtB,GAEP,4BAAQsB,MAAM,QAAd,aACA,4BAAQA,MAAM,QAAd,eACuB,WAAtBL,EAASQ,UACR,4BAAQH,MAAM,OAAd,eAEF,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,WAAd,YAEc,SAAftB,IACiB,QAAfA,EACC,4BACEqB,UAAU,OACVuD,SAAU,SAAA+F,GAAC,OAAIZ,EAAaY,EAAEJ,OAAOjJ,SAErC,4BAAQA,MAAM,IAAd,cACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,QAEe,SAAftB,EACF,4BACEqB,UAAU,OACVuD,SAAU,SAAA+F,GAAC,OAAIZ,EAAaY,EAAEJ,OAAOjJ,MAAMzB,iBAE3C,4BAAQyB,MAAM,IAAd,eA9HO,WACzB,GAA4B,IAAxByD,EAAa3D,OACf,MAAO,GAET,IAAMyJ,EAAY,qBACZ9G,EAAYvE,EAAkBuF,EAAc,QAC5C+F,GACW,IAAf/G,EACI,GACAgB,EACG1F,KAAI,SAAAkB,GAAG,OAAIA,EAAIwD,MACfzD,QAAO,SAAAqD,GAAI,OAAIkH,EAAUE,KAAKpH,MAC9BtE,KAAI,SAAAsE,GAAI,OAAIA,EAAKxB,MAAM0I,GAAW,MAE3C,OAAOT,MAAMC,KAAK,IAAIC,IAAIQ,IAAQpE,MAAK,SAACC,EAAGC,GACzC,IAAMoE,EAAO,IAAI9F,KAAJ,qBAAuByB,IAC9BsE,EAAO,IAAI/F,KAAJ,qBAAuB0B,IACpC,OAAOoE,EAAOC,EAAO,EAAID,EAAOC,GAAQ,EAAI,KA8G3BC,GAAqB7L,KAAI,SAAAsE,GAAI,OAC5B,4BAAQrC,MAAOqC,GAAOA,OAGT,YAAf3D,EACF,4BACEqB,UAAU,OACVuD,SAAU,SAAA+F,GAAC,OAAIZ,EAAaY,EAAEJ,OAAOjJ,MAAMzB,iBAE3C,4BAAQyB,MAAM,IAAd,kBACC0I,IAAe3K,KAAI,SAAAsE,GAAI,OACtB,4BAAQrC,MAAOqC,GAAOA,OAI1B,2BACEpC,KAAK,OACLF,UAAU,OACVuD,SAAU,SAAA+F,GAAC,OAAIZ,EAAaY,EAAEJ,OAAOjJ,MAAMzB,gBAC3CsL,YAAW,gBAAWnL,EAAX,aAMA,WAAtBiB,EAASQ,UACR,kBAAC,EAAD,CACEM,SAAU,CACRG,MAAO,UACPF,KAAM8C,GAERxE,SACmB,SAAfN,GAAuC,KAAdC,IAAqB,CAC9CsB,KAAMvB,EACNmC,MAAOlC,KAKQ,cAAtBgB,EAASQ,UACR,kBAAC,EAAD,CACEM,SAAU,CACRG,MAAO,WACPF,KAAM8D,KAIW,aAAtB7E,EAASQ,UACR,kBAAC,EAAD,CACEM,SAAU,CACRG,MAAO,qBACPF,KAAM+C,GAERzE,SACmB,SAAfN,GAAuC,KAAdC,IAAqB,CAC9CsB,KAAMvB,EACNmC,MAAOlC,SC/KVmL,EAxBc,WAC3B,IAAMC,EAAyC,CAC7CvG,cAAesF,MAAM,IAAIkB,KAAKlB,MAAM,GAAGkB,KAAK,KAC5CxF,SAAUsE,MAAM,IAAIkB,KAAKlB,MAAM,GAAGkB,KAAK,KACvCvF,aAAcqE,MAAM,IAAIkB,KAAKlB,MAAM,GAAGkB,KAAK,MAJZ,EAS7BzB,mBAA2BwB,GATE,0BAO7BvG,EAP6B,EAO7BA,cAAegB,EAPc,EAOdA,SAAUC,EAPI,EAOJA,aAC3BwF,EAR+B,KAejC,OAJAC,qBAAU,WACR9C,EAAgB+C,mBAAmBF,KAClC,IAGD,kBAACG,EAAD,CACE5G,cAAeA,EACfgB,SAAUA,EACVC,aAAcA,KCWd4F,EAAyB,WAC7B,IAAMC,EAAUC,cAShB,OARAL,qBACE,kBACEI,EAAQE,QAAO,SAAA7K,GACb8K,IAAQC,SAAS/K,EAASQ,eAE9B,CAACmK,IAGI,MA0DMK,EAnBS,kBACtB,kBAAC,IAAD,CAAYC,SAAS,iBACnB,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAU7B,KAAK,IAAI8B,GAAG,WACtB,kBAAC,IAAD,CAAO/E,KAAK,SAASgF,UAAWhB,IAChC,kBAAC,IAAD,CAAOhE,KAAK,YAAYgF,UAAWhB,IACnC,kBAAC,IAAD,CAAOhE,KAAK,WAAWgF,UAAWhB,MCrFvBiB,EAFH,kBAAM,kBAACC,EAAD,OCSEC,QACW,cAA7BC,OAAOvL,SAASwL,UAEe,UAA7BD,OAAOvL,SAASwL,UAEhBD,OAAOvL,SAASwL,SAAStK,MACvB,2DCNN4J,IAAQW,WAAW,kBAEnBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxI,MAAK,SAAAyI,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.dd8a572e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.3acec546.gif\";","module.exports = __webpack_public_path__ + \"static/media/SCALogo.80df96a3.png\";","module.exports = __webpack_public_path__ + \"static/media/on-air-indicator.fb6b3f3c.png\";","module.exports = __webpack_public_path__ + \"static/media/sca-white.cbe6bec1.svg\";","import moment from 'moment-timezone';\nimport xlsx from 'xlsx';\n\n\nexport const dataframeFromExcelFile = (excelFile: File) =>\n  new Promise<DataFrame>(resolve => {\n    const reader = new FileReader();\n\n    reader.onload = function (e) {\n      const data = e.target.result;\n      const workbook = xlsx.read(data, { type: 'array' });\n      const spreadSheet = workbook.Sheets[workbook.SheetNames[0]];\n\n      const rowObjs = xlsx.utils.sheet_to_json(spreadSheet);\n      const header = Object.keys(rowObjs[0]);\n      const rows: DataFrame = [header].concat(\n        rowObjs.map(obj => header.map(key => obj[key])),\n      );\n      resolve(cleanExcelData(rows));\n    };\n\n    reader.readAsArrayBuffer(excelFile);\n  });\n\nexport const convertImageFileToBase64Str = (image: File) =>\n  new Promise<string | ArrayBuffer>(resolve => {\n    const reader = new FileReader();\n    reader.onloadend = function (e) {\n      resolve(e.target.result);\n    };\n    reader.readAsDataURL(image);\n  });\n\n\nexport const adjustExcelTime = string => string.toString();\n\nexport const cleanExcelData = (d: DataFrame) =>\n  d.map(rows => rows.map(col => adjustExcelTime(col)));\n\n\nexport const convertJsonToArrayWithIds = (obj: object) =>\n  Object.entries(obj).map(([_id, val]) => ({ _id, ...val }));\n\nexport const getColumnIdxOfKey = (data: DataFrame, key: string) => {\n  const colIndex = data[0].findIndex(currKey =>\n    currKey.toLowerCase().includes(key.toLowerCase()));\n  return colIndex;\n};\n\nexport const excludeFilterDataFrameRows = (\n  filterType: string,\n  filterVal: string,\n  data: DataFrame,\n) => {\n  const header = [...data[0]];\n  const searchableColIndex = getColumnIdxOfKey(data, filterType);\n  if (searchableColIndex === -1) { // This table doesn't have a column for specified filterType\n    return [...data];\n  }\n  const filteredRows = data.slice(1).filter(row => {\n    const cellText = row[searchableColIndex];\n    // if (filterType === 'time') cellText = cellText.replace(':', '');\n    return cellText && !cellText.toLowerCase().includes(filterVal.toLowerCase());\n  });\n  return [header].concat(filteredRows);\n};\n\nexport const filterDataFrameRows = (filterType: string, filterVal: string, data: DataFrame) => {\n  const header = [...data[0]];\n  const searchableColIndex = getColumnIdxOfKey(data, filterType);\n  if (searchableColIndex === -1) { // This table doesn't have a column for specified filterType\n    return [header];\n  }\n  const filteredRows = data.slice(1).filter(row => {\n    const cellText = row[searchableColIndex];\n    // if (filterType === 'time') cellText = cellText.replace(':', '');\n    return cellText && cellText.toLowerCase().includes(filterVal.toLowerCase());\n  });\n  return [header].concat(filteredRows);\n};\n\n// Time is intended to be formatted as '7:00 AM'\nexport const adjustToLocalTimezone = time => moment(time, 'h:mm A').tz('America/New_York').format('h:mm A');\n\nexport const filterByToday = (scheduleData: DataFrame) => {\n  const dayIdx = scheduleData.length > 0\n    && scheduleData[0].findIndex(data => data.toLowerCase().includes('days'));\n\n  if (!dayIdx || dayIdx === -1) {\n    return scheduleData;\n  }\n\n  const now = new Date();\n  const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  return scheduleData.filter((row, i) => {\n    let shouldInclude = i === 0;\n    const dayCol = row[dayIdx];\n    if (dayCol.toLowerCase().includes('daily')) {\n      shouldInclude = true;\n    } else if (dayCol.includes(days[now.getDay()])) {\n      shouldInclude = true;\n    } else if (dayCol.includes('-')) {\n      const rowDaysArr = dayCol.split(/[^\\w-]/);\n      rowDaysArr.forEach(rowDay => {\n        if (rowDay.includes('-')) {\n          const leftRight = rowDay.split('-');\n          const left = days.findIndex(v => leftRight[0].includes(v));\n          const right = days.findIndex(v => leftRight[1].includes(v));\n          if (left < now.getDay() && right > now.getDay()) {\n            shouldInclude = true;\n          }\n        }\n      });\n    }\n    return shouldInclude;\n  });\n};\n\nexport const removeHiddenColumns = (data: DataFrame) => {\n  const indicesOfHidden = data[0]\n    .map((col, idx) => ({ col, idx }))\n    .filter(({ col }) => col.toLowerCase().includes('hide'))\n    .map(({ idx }) => idx);\n\n  return data.map(row => row.filter((_, colIdx) => !indicesOfHidden.includes(colIdx)));\n};\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport * as linkify from 'linkifyjs';\n\nimport { excludeFilterDataFrameRows, filterDataFrameRows } from '../../util';\n\ninterface ScheduleCardProps {\n  schedule: Schedule;\n  filter?: {\n    /** The column in the header to look for */\n    type: string;\n    /** The string to compare cells with */\n    match: string;\n  };\n  stringToHighlight?: string;\n}\n\ninterface SmartTextProps {\n  input: string;\n  highlight?: boolean;\n  row?: string[];\n  passwordCol: number;\n}\n/** If input contains a link, SmartText will replace it with a clickable ancor tag */\nexport const SmartText: React.FC<SmartTextProps> = ({\n  input,\n  highlight,\n  row,\n  passwordCol,\n}) => {\n  const urls = linkify.find(input);\n  const location = useLocation();\n  let password = '';\n  if (~passwordCol && row[passwordCol] !== '-') {\n    password = `Password: ${row[passwordCol]}`;\n  }\n  if (urls.length === 0) {\n    return <p className={highlight && 'highlight'}>{input}</p>;\n  }\n\n  const { value, type } = urls[0];\n  const iconSize = location.pathname === '/' ? 80 : 40;\n  return (\n    <span>\n      <a\n        href={value}\n        style={{ height: iconSize, width: iconSize }}\n        className={\n          value.includes('zoom') && type === 'url'\n            ? 'zoomIcon'\n            : value.includes('gotomeeting') && type === 'url'\n            ? 'gtmIcon'\n            : ''\n        }\n      >\n        {type === 'url' ? 'Click here' : value}\n      </a>{' '}\n      <p className=\"password\">{password}</p>\n    </span>\n  );\n};\n\nconst ScheduleCard: React.FC<ScheduleCardProps> = ({ schedule, filter }) => {\n  const { rows, logo, title } = schedule;\n\n  const filteredRows = filter\n    ? filterDataFrameRows(filter.type, filter.match, rows)\n    : rows;\n\n  if (filteredRows.length === 1) {\n    // No rows matched the filter criteria\n    return null;\n  }\n\n  const headerRow = filteredRows[0];\n\n  const filteredCols = headerRow.reduce((acc, cur, idx) => {\n    if (cur.toString().toLowerCase().startsWith('hide')) {\n      acc.push(idx);\n    }\n    return acc;\n  }, []);\n\n  const filterColIdx =\n    filter && rows[0].findIndex(col => col.toLowerCase().includes(filter.type));\n\n  const passwordColIdx = rows[0].findIndex(col =>\n    col.toLowerCase().includes('password')\n  );\n\n  const shouldHighlight = (colText: string, colIdx) => {\n    const text = colText.toLowerCase();\n    return filterColIdx === colIdx && text.includes(filter.match);\n  };\n\n  return (\n    <div className=\"schedule-card my-2\">\n      <div className=\"card-header\">\n        {!!logo && (\n          <div className=\"w-100\">\n            <img src={logo} className=\"logo ml-4\" />\n          </div>\n        )}\n        <h1 className=\"schedule-title\">{title}</h1>\n      </div>\n      <table className=\"table table-striped table-bordered table-hover shadow\">\n        <thead className=\"text-light\">\n          <tr>\n            {filteredRows[0].map((col, idx) => {\n              if (!filteredCols.includes(idx)) {\n                return <th key={idx}>{col}</th>;\n              }\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          {filteredRows.slice(1).map((row, rIdx) => (\n            <tr key={rIdx}>\n              {row.map((col, cIdx) => {\n                if (!filteredCols.includes(cIdx)) {\n                  return (\n                    <td key={cIdx}>\n                      <SmartText\n                        input={col}\n                        row={row}\n                        passwordCol={passwordColIdx}\n                        highlight={shouldHighlight(col, cIdx)}\n                      />\n                    </td>\n                  );\n                }\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ScheduleCard;\n","import moment from 'moment-timezone';\nimport { filterDataFrameRows, excludeFilterDataFrameRows, filterByToday, removeHiddenColumns } from '../util';\n\n\nclass ScheduleService {\n  private storage: Database;\n\n  static scheduleRef = '1TS3fZHRPlhI4L_URhKJXGa48eOy6BiqM1GeSUJL9jFs/live-website-feed';\n\n  constructor(database: Database) {\n    this.storage = database;\n  }\n\n  async getAllSchedules(): Promise<AllScheduleDatas> {\n    return this.storage.read(ScheduleService.scheduleRef).then(this.makeSchedules);\n  }\n\n  onSchedulesChanged(cb: (schedules: AllScheduleDatas) => void) {\n    this.storage.onChange(ScheduleService.scheduleRef, data => {\n      cb(this.makeSchedules(data));\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private makeSchedules(data: DataFrame) {\n    const withoutHiddenRows = filterDataFrameRows('toggle', 'show', data);\n    const withoutMinyanim = excludeFilterDataFrameRows('type', 'minyan', withoutHiddenRows);\n    const todaysClasses = filterByToday(withoutMinyanim);\n\n\n    return {\n      todaysClasses,\n      minyanim: filterDataFrameRows('type', 'minyan', withoutHiddenRows),\n      fullSchedule: withoutHiddenRows,\n    };\n  }\n\n\n  private convertTimesToLocalTimezone = (data: DataFrame) => {\n    const adjustTime = (time) => moment(time, 'h:mm A').local().format('h:mm A');\n    const idxOfTime = data[0].findIndex((col) => col.toLowerCase().includes('time'));\n    const formatted = data.map((row, i) => {\n      const newRow = [...row];\n      if (i > 0) { // skip header\n        const timeRange = newRow[idxOfTime].split('-').map((time) => time.trim());\n        newRow[idxOfTime] = timeRange.map(adjustTime).join(' - \\n');\n      }\n      return newRow;\n    });\n    return formatted;\n  }\n}\n\nfunction createScheduleManager(persistedStorage: Database) {\n  return new ScheduleService(persistedStorage);\n}\n\nexport default createScheduleManager;\n","import { convertJsonToArrayWithIds } from '../util';\n\nclass AttachmentService {\n  private storage: Database;\n\n  constructor(database: Database) {\n    this.storage = database;\n  }\n\n  async addAttachment(attachment: Attachment) {\n    return this.storage.push('attachments', attachment);\n  }\n\n  async removeAttachment(_id: firebase.database.Reference) {\n    return this.storage.delete('attachments', _id);\n  }\n\n  async updateAttachment(_id: firebase.database.Reference, newAttachment: Attachment) {\n    return this.storage.write(`attachments/${_id}`, newAttachment);\n  }\n\n  async getAllAttachments(): Promise<Attachment[]> {\n    return this._alphabetize(await this.storage.findAll('attachments'));\n  }\n\n  onAttachmentsChanged(cb: (attachments: Attachment[]) => void) {\n    this.storage.onChange('attachments', data =>\n      cb(this._alphabetize(convertJsonToArrayWithIds(data)))\n    );\n  }\n\n  _alphabetize(attachments: Attachment[]) {\n    return attachments ? attachments.sort((a, b) => a.title > b.title ? 1 : a.title < b.title ? -1 : 0) : [];\n  }\n}\n\nfunction createAttachmentManager(persistedStorage: Database) {\n  return new AttachmentService(persistedStorage);\n}\n\nexport default createAttachmentManager;\n","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/storage';\n\nimport { convertJsonToArrayWithIds } from '../util';\n\nclass FirebaseManager implements Database {\n  db: firebase.database.Database;\n\n  storage: firebase.storage.Storage;\n\n  constructor(config: FirebaseConfig) {\n    const app = firebase.initializeApp(config);\n    this.db = app.database();\n    this.storage = app.storage();\n  }\n\n  async read(path: string) {\n    return this.db\n      .ref(path)\n      .once('value')\n      .then((s) => s.val());\n  }\n\n\n  async write(path: string, data: any) {\n    return this.db.ref(path).set(data);\n  }\n\n  async push(basePath: string, data: any) {\n    return this.db.ref(basePath).push(data);\n  }\n\n  /** Gets all documents with their id's in collection */\n  async findAll(path: string) {\n    return this.db.ref(path).once('value')\n      .then((s) => s.val() || {}).then(convertJsonToArrayWithIds);\n  }\n\n  async delete(path: string, _id: firebase.database.Reference) {\n    return this.db.ref(`${path}/${_id}`).remove();\n  }\n\n  onChange(path: string, cb: (data: any) => void) {\n    this.db.ref(path).on('value', (s) => cb(s.val()));\n  }\n}\n\nfunction createFirebaseDbManager(config: FirebaseConfig) {\n  return new FirebaseManager(config);\n}\n\nexport default createFirebaseDbManager;\n","import { convertJsonToArrayWithIds } from '../util';\n\nclass FormService {\n  private storage: Database;\n\n  constructor(database: Database) {\n    this.storage = database;\n  }\n\n  async addForm(form: Form) {\n    return this.storage.push('tehillim', form);\n  }\n\n  async removeForm(_id: firebase.database.Reference) {\n    return this.storage.delete('tehillim', _id);\n  }\n\n  async updateForm(_id: firebase.database.Reference, newForm: Form) {\n    return this.storage.write(`tehillim/${_id}`, newForm);\n  }\n\n  async getAllForms(): Promise<Form[]> {\n    return this._alphabetize(await this.storage.findAll('tehillim'));\n  }\n\n  onFormsChanged(cb: (tehillim: Form[]) => void) {\n    this.storage.onChange('tehillim', data =>\n      cb(this._alphabetize(convertJsonToArrayWithIds(data)))\n    );\n  }\n\n  _alphabetize(tehillim: Form[]) {\n    return tehillim ? tehillim.sort((a, b) => a.firstName > b.firstName ? 1 : a.firstName < b.firstName ? -1 : 0) : [];\n  }\n}\n\nfunction createFormManager(persistedStorage: Database) {\n  return new FormService(persistedStorage);\n}\n\nexport default createFormManager;\n","import createScheduleManager from './ScheduleService';\nimport createAttachmentManager from './AttachmentService';\nimport createFirebaseDbManager from './DatabaseService';\nimport createFormManager from './FormService';\n\nconst firebaseConfig: FirebaseConfig = {\n  apiKey: 'AIzaSyDUNiNW3dfplmHAq65wfKIGGSHS8MGXgzM',\n  authDomain: 'sca-rab-schedules.firebaseapp.com',\n  databaseURL: 'https://sca-rab-schedules.firebaseio.com',\n  projectId: 'sca-rab-schedules',\n  storageBucket: 'sca-rab-schedules.appspot.com',\n  messagingSenderId: '893196040077',\n  appId: '1:893196040077:web:75ee18b5d771028f616fc4',\n};\n\nconst database = createFirebaseDbManager(firebaseConfig);\nconst scheduleManager = createScheduleManager(database);\nconst attachmentManager = createAttachmentManager(database);\nconst formManager = createFormManager(database);\n\nexport { database, scheduleManager, attachmentManager, formManager };\n","import React from 'react';\nimport moment from 'moment';\n// import * as linkify from 'linkifyjs';\n\nimport ScheduleCard, { SmartText } from './ScheduleCard';\nimport { excludeFilterDataFrameRows, filterDataFrameRows } from '../../util';\n\ninterface LiveItemsProps {\n  schedule: Schedule;\n  filter?: {\n    type: string;\n    match: string;\n  };\n}\n\n/** Displays three schedule cards for upcoming, ongoing, and elapsed classes.\n *\n */\nconst LiveItems: React.FC<LiveItemsProps> = ({ schedule, filter }) => {\n  const { rows } = schedule;\n\n  const headerRows = rows[0];\n  const removeDayCol = df => {\n    const dayIdx = df[0].findIndex(col => col.toLowerCase().includes('day'));\n    return dayIdx !== -1\n      ? rows.map(row => row.filter((_, i) => i !== dayIdx))\n      : df;\n  };\n\n  if (rows.length < 2) {\n    // No rows matched the filter criteria\n    return null;\n  }\n\n  const timeIdx = headerRows.findIndex(data =>\n    data.toLowerCase().includes('time')\n  );\n\n  // If can't categorize by times, display all in one\n  if (timeIdx === -1) {\n    return <ScheduleCard schedule={{ title: '', rows }} />;\n  }\n\n  const now = new Date();\n  const live = [];\n  const elapsed = [];\n  const upcoming = [];\n\n  rows.forEach(row => {\n    const rowTimes = row[timeIdx].match(/\\d\\d?:\\d\\d ?(?:[AP]M)?/g);\n    if (!rowTimes) return false;\n    if (\n      !rowTimes[0].toLowerCase().includes('pm') &&\n      row[3].toLowerCase().includes('pm')\n    ) {\n      rowTimes[0] += ' pm';\n    }\n    const startTime = moment(rowTimes[0], 'h:mm:ss a');\n    const endTime =\n      rowTimes.length > 1\n        ? moment(rowTimes[1], 'h:mm:ss a')\n        : moment(startTime).add(1, 'h');\n    startTime.subtract(10, 'm');\n\n    if (moment(now).isBetween(startTime, endTime, null, '[)')) {\n      live.push(row);\n    } else if (moment(now).isSameOrAfter(endTime)) {\n      elapsed.push(row);\n    } else if (moment(now).isBefore(startTime)) {\n      upcoming.push(row);\n    }\n  });\n\n  return (\n    <div>\n      {live.length > 0 && (\n        <ScheduleCard\n          schedule={{\n            rows: removeDayCol([headerRows].concat(live)),\n            title: `Ongoing ${schedule.title}`,\n          }}\n          filter={filter}\n        />\n      )}\n      {upcoming.length > 0 && (\n        <ScheduleCard\n          schedule={{\n            rows: removeDayCol([headerRows].concat(upcoming)),\n            title: `Upcoming ${schedule.title}`,\n          }}\n          filter={filter}\n        />\n      )}\n      {elapsed.length > 0 && (\n        <ScheduleCard\n          schedule={{\n            rows: removeDayCol([headerRows].concat(elapsed)),\n            title: `Elapsed ${schedule.title}`,\n          }}\n          filter={filter}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default LiveItems;\n","import React, { useState, useCallback } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { getColumnIdxOfKey } from '../../util';\nimport { ScheduleCard, LiveItems } from '../components';\n\ninterface ClassesScreenProps {\n  todaysClasses: DataFrame;\n  minyanim: DataFrame;\n  fullSchedule: DataFrame;\n}\n\nconst ClassesScreen: React.FC<ClassesScreenProps> = ({\n  todaysClasses,\n  minyanim,\n  fullSchedule: scheduleData,\n}) => {\n  const [filterType, setfilterType] = useState<string>('none');\n  const [filterVal, setFilterVal] = useState<string>('');\n  const location = useLocation();\n\n  const calcAvailableTimes = () => {\n    if (scheduleData.length === 0) {\n      return [];\n    }\n    const validTime = /\\d\\d?:\\d\\d ([AP]M)/;\n    const idxOfTime = getColumnIdxOfKey(scheduleData, 'time');\n    const times =\n      idxOfTime === -1\n        ? []\n        : scheduleData\n            .map(row => row[idxOfTime])\n            .filter(time => validTime.test(time))\n            .map(time => time.match(validTime)[0]);\n\n    return Array.from(new Set(times)).sort((a, b) => {\n      const last = new Date(`1970/01/01 ${a}`);\n      const next = new Date(`1970/01/01 ${b}`);\n      return last > next ? 1 : last < next ? -1 : 0;\n    });\n  };\n\n  const calcTeachers = useCallback(() => {\n    let teachers = [];\n    const idxOfTime = getColumnIdxOfKey(scheduleData, 'teacher');\n    const moreTimes = scheduleData.map(row => row[idxOfTime]);\n    teachers = teachers.concat(moreTimes);\n    return Array.from(new Set(teachers)).sort();\n  }, [scheduleData]);\n\n  return (\n    <>\n      <div className=\"container pb-5\">\n        <div className=\"row\">\n          <ul className=\"nav nav-pills nav-justified m-3 w-100\">\n            <li className=\"nav-item\">\n              <a\n                href=\"/sca-schedules/#/today\"\n                className={\n                  location.pathname.includes('/today')\n                    ? 'nav-link active'\n                    : 'nav-link'\n                }\n              >\n                Today&apos;s Classes\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a\n                href=\"/sca-schedules/#/minyanim\"\n                className={\n                  location.pathname.includes('/minyanim')\n                    ? 'nav-link active'\n                    : 'nav-link'\n                }\n              >\n                Minyanim\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a\n                href=\"/sca-schedules/#/classes\"\n                className={\n                  location.pathname.includes('/classes')\n                    ? 'nav-link active'\n                    : 'nav-link'\n                }\n              >\n                Full Schedule\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a\n                href=\"https://www.youtube.com/channel/UCsHn2xQEscv11QaNHpPf37A\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"nav-link\"\n              >\n                Recordings\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      {scheduleData.length > 0 && (\n        <div className=\"container\">\n          <div className={location.pathname === '/minyanim' ? 'd-none' : 'row'}>\n            <div className=\"input-group mt-3 mx-3\">\n              <label htmlFor=\"filter\" className=\"header-title\">\n                Filter By:{' '}\n                <select\n                  name=\"filter\"\n                  onChange={e => {\n                    setfilterType(e.target.value);\n                    setFilterVal('');\n                  }}\n                  id=\"\"\n                  value={filterType}\n                >\n                  <option value=\"none\">No filter</option>\n                  <option value=\"time\">Time of day</option>\n                  {location.pathname !== '/today' && (\n                    <option value=\"day\">Day of week</option>\n                  )}\n                  <option value=\"topic\">Topic</option>\n                  <option value=\"teacher\">Teacher</option>\n                </select>\n                {filterType !== 'none' &&\n                  (filterType === 'day' ? (\n                    <select\n                      className=\"ml-2\"\n                      onChange={e => setFilterVal(e.target.value)}\n                    >\n                      <option value=\"\">Choose Day</option>\n                      <option value=\"mon\">Mon</option>\n                      <option value=\"tues\">Tues</option>\n                      <option value=\"wed\">Wed</option>\n                      <option value=\"thurs\">Thurs</option>\n                      <option value=\"fri\">Fri</option>\n                      <option value=\"sun\">Sun</option>\n                    </select>\n                  ) : filterType === 'time' ? (\n                    <select\n                      className=\"ml-2\"\n                      onChange={e => setFilterVal(e.target.value.toLowerCase())}\n                    >\n                      <option value=\"\">Choose Time</option>\n                      {calcAvailableTimes().map(time => (\n                        <option value={time}>{time}</option>\n                      ))}\n                    </select>\n                  ) : filterType === 'teacher' ? (\n                    <select\n                      className=\"ml-2\"\n                      onChange={e => setFilterVal(e.target.value.toLowerCase())}\n                    >\n                      <option value=\"\">Choose Teacher</option>\n                      {calcTeachers().map(time => (\n                        <option value={time}>{time}</option>\n                      ))}\n                    </select>\n                  ) : (\n                    <input\n                      type=\"text\"\n                      className=\"ml-2\"\n                      onChange={e => setFilterVal(e.target.value.toLowerCase())}\n                      placeholder={`Enter ${filterType}(s)`}\n                    />\n                  ))}\n              </label>\n            </div>\n          </div>\n          {location.pathname === '/today' && (\n            <LiveItems\n              schedule={{\n                title: 'Classes',\n                rows: todaysClasses,\n              }}\n              filter={\n                !(filterType === 'none' || filterVal === '') && {\n                  type: filterType,\n                  match: filterVal,\n                }\n              }\n            />\n          )}\n          {location.pathname === '/minyanim' && (\n            <ScheduleCard\n              schedule={{\n                title: 'Minyanim',\n                rows: minyanim,\n              }}\n            />\n          )}\n          {location.pathname === '/classes' && (\n            <ScheduleCard\n              schedule={{\n                title: 'Classes & Minyanim',\n                rows: scheduleData,\n              }}\n              filter={\n                !(filterType === 'none' || filterVal === '') && {\n                  type: filterType,\n                  match: filterVal,\n                }\n              }\n            />\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ClassesScreen;\n","import React, { useEffect, useState } from 'react';\n\nimport { ClassesScreen } from '../ui';\nimport { scheduleManager } from '../service';\n\nconst ClassesScreenCreator = () => {\n  const defaultScheduleDatas: AllScheduleDatas = {\n    todaysClasses: Array(20).fill(Array(6).fill('')),\n    minyanim: Array(20).fill(Array(6).fill('')),\n    fullSchedule: Array(20).fill(Array(6).fill('')),\n  };\n  const [\n    { todaysClasses, minyanim, fullSchedule },\n    setScheduleDatas,\n  ] = useState<AllScheduleDatas>(defaultScheduleDatas);\n\n  useEffect(() => {\n    scheduleManager.onSchedulesChanged(setScheduleDatas);\n  }, []);\n\n  return (\n    <ClassesScreen\n      todaysClasses={todaysClasses}\n      minyanim={minyanim}\n      fullSchedule={fullSchedule}\n    />\n  );\n};\n\nexport default ClassesScreenCreator;\n","import React, { useEffect } from 'react';\nimport { HashRouter, Route, Redirect, useHistory } from 'react-router-dom';\nimport ReactGa from 'react-ga';\n\nimport { Header, Footer } from './ui/components';\nimport {\n  ClassesScreenCreator,\n  AttachmentsAdminScreenCreator,\n  AttachmentsScreenCreator,\n  FormScreenCreator,\n  IndexScreenCreator,\n} from './factory';\n\ninterface RouteMap {\n  [path: string]: RouteConfig;\n}\ninterface RouteConfig {\n  exact?: boolean;\n  pageName?: string; // For display purposes\n  Component: React.ComponentType;\n}\n\nconst renderRoutes = (routes: RouteMap) =>\n  Object.entries(routes).map(([path, { exact, Component }]) => (\n    <Route path={path} exact={exact} component={Component} />\n  ));\n\nexport const adminRoutes: RouteMap = {\n  '/edit-letters': { exact: true, Component: AttachmentsAdminScreenCreator },\n};\n\nconst AdminNavigator = () => (\n  <HashRouter basename=\"/admin\">{renderRoutes(adminRoutes)}</HashRouter>\n);\n\nconst CompThatTracksLocation = () => {\n  const history = useHistory();\n  useEffect(\n    () =>\n      history.listen(location => {\n        ReactGa.pageview(location.pathname);\n      }),\n    [history]\n  );\n\n  return null;\n};\n\nexport const mainRoutes: RouteMap = {\n  '/': { exact: true, Component: IndexScreenCreator, pageName: '' },\n  '/today': {\n    exact: true,\n    Component: ClassesScreenCreator,\n    // pageName: 'SCA Affiliate Synagogue - Virtual Classes Schedules',\n  },\n  '/classes': {\n    exact: true,\n    Component: ClassesScreenCreator,\n    // pageName: 'SCA Affiliate Synagogue - Virtual Classes Schedules',\n  },\n  '/minyanim': {\n    exact: true,\n    Component: ClassesScreenCreator,\n    // pageName: 'SCA Affiliate Synagogue - Virtual Minyanim Schedules',\n  },\n  '/bekhorot': {\n    exact: true,\n    Component: ClassesScreenCreator,\n    pageName: 'SCA Affiliate Synagogue - Siyum Bekhorot Schedules',\n  },\n  '/letters': {\n    exact: true,\n    Component: AttachmentsScreenCreator,\n    pageName: 'COVID-19 Letters',\n  },\n  '/tehillim': {\n    exact: true,\n    Component: FormScreenCreator,\n    pageName: 'SCA Tehilim Requests',\n  },\n  '/admin': { Component: AdminNavigator },\n  // '/wix/today': { Component: ClassesScreenCreator },\n};\n\nconst NavigatorForWix = () => (\n  <HashRouter basename=\"sca-schedules\">\n    <CompThatTracksLocation />\n    <Redirect from=\"/\" to=\"/today\" />\n    <Route path=\"/today\" component={ClassesScreenCreator} />\n    <Route path=\"/minyanim\" component={ClassesScreenCreator} />\n    <Route path=\"/classes\" component={ClassesScreenCreator} />\n  </HashRouter>\n);\n\nconst MainNavigator = () => (\n  <HashRouter>\n    <CompThatTracksLocation />\n    <Header />\n    {renderRoutes(mainRoutes)}\n    <Footer />\n  </HashRouter>\n);\n\nexport default NavigatorForWix;\n","import React from 'react';\nimport AppNavigator from './AppNavigator';\n\nconst App = () => <AppNavigator />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGa from 'react-ga';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'jquery';\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport './ui/styles.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactGa.initialize('UA-164561407-1');\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}