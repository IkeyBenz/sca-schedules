{"version":3,"sources":["ui/assets/spinner.gif","ui/assets/SCALogo.png","util.ts","ui/components/ScheduleCard.tsx","ui/components/AttachmentCard.tsx","ui/components/SpreadSheetDropBox.tsx","service/ScheduleService.ts","service/AttachmentService.ts","service/DatabaseService.ts","service/FormService.ts","service/index.ts","ui/components/ImageDropBox.tsx","ui/components/LiveItems.tsx","ui/components/Header.tsx","ui/screens/Classes.tsx","ui/screens/Admin.tsx","ui/screens/Attachments.tsx","ui/screens/AttachmentsAdmin.tsx","ui/screens/Form.tsx","ui/screens/Index.tsx","factory/ClassesScreenCreator.tsx","AppNavigator.tsx","factory/AdminScreenCreator.tsx","factory/AttachmentsAdminScreenCreator.tsx","factory/IndexScreenCreator.tsx","factory/AttachmentsScreenCreator.tsx","factory/FormScreenCreator.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","cleanExcelData","d","map","rows","col","toString","convertJsonToArrayWithIds","obj","Object","entries","_id","val","excludeFilterDataFrameRows","filterType","filterVal","data","header","searchableColIndex","getColumnIdxOfKey","filteredRows","slice","filter","row","cellText","toLowerCase","includes","concat","filterDataFrameRows","key","findIndex","currKey","SmartText","input","highlight","passwordCol","urls","linkify","password","length","className","value","type","href","ScheduleCard","schedule","title","logo","match","filteredCols","reduce","acc","cur","idx","startsWith","push","filterColIdx","passwordColIdx","shouldHighlight","colText","colIdx","text","src","rIdx","cIdx","AttachmentCard","attachment","file","cover","body","target","SpreadSheetDropBox","onSpreadSheetDropped","currentSpreadSheet","useState","undefined","droppedFileName","setDroppedFileName","dataRows","setDataRows","useEffect","useDropzone","onDrop","files","excelFile","test","name","alert","Promise","resolve","reader","FileReader","onload","e","result","workbook","xlsx","read","spreadSheet","Sheets","SheetNames","rowObjs","utils","sheet_to_json","keys","readAsArrayBuffer","then","getRootProps","getInputProps","isDragActive","ScheduleService","database","storage","this","delete","newSchedule","write","findAll","_alphabetize","cb","onChange","schedules","sort","a","b","createScheduleManager","persistedStorage","AttachmentService","newAttachment","attachments","createAttachmentManager","FirebaseManager","config","db","app","firebase","initializeApp","path","ref","once","s","set","basePath","remove","on","createFirebaseDbManager","FormService","form","newForm","tehillim","firstName","createFormManager","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","scheduleManager","attachmentManager","formManager","ImageDropBox","onImageDropped","currentImage","previewImage","setPreviewImage","accept","randomizeFilename","storageRef","metadata","cacheControl","onUploadStart","spinner","onUploadSuccess","child","getDownloadURL","url","id","htmlFor","LiveItems","heading","forEach","headerRows","dayIdx","timeIdx","days","now","Date","filteredByDay","flag","rowDays","getDay","split","rowDay","leftRight","left","v","right","live","elapsed","upcoming","rowTimes","startTime","moment","endTime","add","subtract","isBetween","isSameOrAfter","isBefore","rowId","cell","cellId","Header","props","location","useLocation","pageName","mainRoutes","pathname","SCALogo","alt","height","data-toggle","data-target","aria-controls","aria-expanded","aria-label","ClassesScreen","setfilterType","setFilterVal","setHeading","today","calcAvailableTimes","useCallback","validTime","times","idxOfTime","moreTimes","time","Array","from","Set","_a","_b","calcTeachers","teachers","placeholder","SchedulePreviewItem","isEditing","onUpdateBtnPressed","onDeleteBtnPressed","onClick","AdminScreen","createSchedule","deleteSchedule","updateSchedule","scheduleBeingEdited","setScheduleBeingEdited","updateScheduleBeingEdited","updates","console","log","AttachmentScreen","AttachmentPreviewItem","createAttachment","deleteAttachment","updateAttachment","attachmentBeingEdited","setAttachmentBeingEdited","updateAttachmentBeingEdited","uploading","FormScreen","forms","setFirstName","benbat","setBenbat","mothersName","setMothersName","formMessage","setFormMessage","success","setTimeout","fail","onSubmit","preventDefault","required","checked","person","hebrew","search","dir","IndexScreen","ClassesScreenCreator","setSchedules","onSchedulesChanged","Classes","renderRoutes","routes","exact","Component","component","adminRoutes","currentSchedules","setCurrentSchedules","Admin","addSchedule","updatedSchedule","removeSchedule","currentAttachments","setCurrentAttachments","onAttachmentsChanged","AttachmentsAdmin","addAttachment","updatedAttachment","removeAttachment","Index","setAttachments","Attachments","setForms","onFormsChanged","Form","basename","MainNavigator","App","AppNavigator","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"oHAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,ySC4C9BC,EAAiB,SAACC,GAAD,OAC1BA,EAAEC,KAAI,SAAAC,GAAI,OAAIA,EAAKD,KAAI,SAAAE,GAAG,OAAoBA,EAThCC,kBAYLC,EAA4B,SAACC,GAAD,OACrCC,OAAOC,QAAQF,GAAKL,KAAI,mCAAEQ,EAAF,KAAOC,EAAP,yBAAmBD,OAAQC,OAE1CC,EAA6B,SAACC,EAAoBC,EAAmBC,GAC9E,IAAMC,EAAM,YAAOD,EAAK,IAClBE,EAAqBC,EAAkBH,EAAMF,GACnD,IAA4B,IAAxBI,EACA,OAAO,YAAIF,GAEf,IAAMI,EAAeJ,EAAKK,MAAM,GAAGC,QAAO,SAAAC,GACtC,IAAIC,EAAWD,EAAIL,GAEnB,OAAOM,IAAaA,EAASC,cAAcC,SAASX,EAAUU,kBAElE,MAAO,CAACR,GAAQU,OAAOP,IAGdQ,EAAsB,SAACd,EAAoBC,EAAmBC,GACvE,IAAMC,EAAM,YAAOD,EAAK,IAClBE,EAAqBC,EAAkBH,EAAMF,GACnD,IAA4B,IAAxBI,EACA,MAAO,CAACD,GAEZ,IAAMG,EAAeJ,EAAKK,MAAM,GAAGC,QAAO,SAAAC,GACtC,IAAIC,EAAWD,EAAIL,GAEnB,OAAOM,GAAYA,EAASC,cAAcC,SAASX,EAAUU,kBAEjE,MAAO,CAACR,GAAQU,OAAOP,IAGdD,EAAoB,SAACH,EAAiBa,GAIjD,OAHiBb,EAAK,GAAGc,WAAU,SAAAC,GAAO,OACxCA,EAAQN,cAAcC,SAASG,EAAIJ,mBCzDjCO,EAAsC,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,UAAWX,EAAuB,EAAvBA,IAAKY,EAAkB,EAAlBA,YAC9DC,EAAOC,OAAaJ,GACtBK,EAAW,GAIf,IAHKH,GAAoC,MAArBZ,EAAIY,KACtBG,EAAQ,oBAAgBf,EAAIY,KAEV,IAAhBC,EAAKG,OACP,OAAO,uBAAGC,UAAWN,GAAa,aAAcD,GAPoC,MAS9DG,EAAK,GAArBK,EAT8E,EAS9EA,MAAOC,EATuE,EASvEA,KACf,OAAO,2BAAG,uBAAGC,KAAMF,EAAOD,UAAWC,EAAMf,SAAS,SAAoB,QAATgB,EAAiB,WAAaD,EAAMf,SAAS,gBAA2B,QAATgB,EAAiB,UAAY,IAAc,QAATA,EAAiB,aAAeD,GAAzL,IAAoM,0BAAMD,UAAU,YAAYF,KAiF1NM,EA9EmC,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAUvB,EAAa,EAAbA,OACrDwB,EAAsBD,EAAtBC,MAAO1C,EAAeyC,EAAfzC,KAAM2C,EAASF,EAATE,KAEf3B,EAAeE,EACjBM,EAAoBN,EAAOoB,KAAMpB,EAAO0B,MAAO5C,GAC/CS,EAA2B,OAAQ,SAAUT,GAEjD,GAA4B,IAAxBgB,EAAamB,OAEf,OAAO,KAGT,IAEMU,EAFY7B,EAAa,GAEA8B,QAAO,SAACC,EAAKC,EAAKC,GAI/C,OAHID,EAAI9C,WAAWmB,cAAc6B,WAAW,SAC1CH,EAAII,KAAKF,GAEJF,IACN,IAEGK,EACJlC,GAAUlB,EAAK,GAAG0B,WAAU,SAAAzB,GAAG,OAAIA,EAAIoB,cAAcC,SAASJ,EAAOoB,SAEjEe,EACJrD,EAAK,GAAG0B,WAAU,SAAAzB,GAAG,OAAIA,EAAIoB,cAAcC,SAAS,eAEhDgC,EAAkB,SAACC,EAAiBC,GACxC,GAAsB,YAAZ,OAANtC,QAAM,IAANA,OAAA,EAAAA,EAAQ0B,OACV,OAAO,EAET,IAAMa,EAAOF,EAAQlC,cACrB,OAAO+B,IAAiBI,GAAUC,EAAKnC,SAASJ,EAAO0B,QAGzD,OACE,yBAAKR,UAAU,sBACb,yBAAKA,UAAU,iBACVO,GACD,yBAAKP,UAAU,SACb,yBAAKsB,IAAKf,EAAMP,UAAU,eAG9B,wBAAIA,UAAU,kBAAkBM,IAElC,2BAAON,UAAU,yDACf,2BAAOA,UAAU,cACf,4BACGpB,EAAa,GAAGjB,KAAI,SAACE,EAAKgD,GACzB,IAAKJ,EAAavB,SAAS2B,GACzB,OAAO,wBAAIxB,IAAKwB,GAAMhD,QAK9B,+BACGe,EAAaC,MAAM,GAAGlB,KAAI,SAACoB,EAAKwC,GAAN,OACzB,wBAAIlC,IAAKkC,GACNxC,EAAIpB,KAAI,SAACE,EAAK2D,GACb,IAAKf,EAAavB,SAASsC,GACzB,OAAO,wBAAInC,IAAKmC,GACd,kBAAC,EAAD,CACE/B,MAAO5B,EACPkB,IAAKA,EACLY,YAAasB,EACbvB,UAAWwB,EAAgBrD,EAAK2D,iBCvEvCC,EAvBuC,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC/CpB,EAA6BoB,EAA7BpB,MAAOqB,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAE5B,OACE,yBAAK7B,UAAU,iCACb,uBAAGG,KAAMwB,EAAMG,OAAO,SAAS9B,UAAU,gEACvC,yBAAKA,UAAU,iBACV4B,GACD,yBAAK5B,UAAU,SACb,yBAAKsB,IAAKM,EAAO5B,UAAU,sBAG/B,wBAAIA,UAAU,oBAAoBM,KAC/BuB,GACD,uBAAG7B,UAAU,sBAAsB6B,IAGvC,0BAAM7B,UAAU,qBAAhB,wB,QC8BO+B,EA1C+C,SAAC,GAGxD,IAFLC,EAEI,EAFJA,qBACAC,EACI,EADJA,mBACI,EAC0CC,wBAASC,GADnD,mBACGC,EADH,KACoBC,EADpB,OAE4BH,wBAAoBC,GAFhD,mBAEGG,EAFH,KAEaC,EAFb,KAIJC,qBAAU,kBAAMD,EAAYN,KAAqB,CAACA,IAJ9C,MAMkDQ,YAAY,CAChEC,OAAQ,SAACC,GACP,IHnBiCC,EGmB3BjB,EAAOgB,EAAM,GAEnB,IADiB,wCACHE,KAAKlB,EAAKmB,KAAK7D,eAC3B,OAAO8D,MACL,8DAGJV,EAAmBV,EAAKmB,OH1BSF,EG2BVjB,EH1B3B,IAAIqB,SAAmB,SAAAC,GACrB,IAAIC,EAAS,IAAIC,WAEjBD,EAAOE,OAAS,SAASC,GACvB,IAAM7E,EAAO6E,EAAEvB,OAAOwB,OAChBC,EAAWC,IAAKC,KAAKjF,EAAM,CAAE0B,KAAM,UACnCwD,EAAcH,EAASI,OAAOJ,EAASK,WAAW,IAElDC,EAAUL,IAAKM,MAAMC,cAAcL,GACnCjF,EAASR,OAAO+F,KAAKH,EAAQ,IAC7BjG,EAAkB,CAACa,GAAQU,OAC/B0E,EAAQlG,KAAI,SAAAK,GAAG,OAAIS,EAAOd,KAAI,SAAA0B,GAAG,OAAIrB,EAAIqB,UAE3C4D,EAAQxF,EAAeG,KAGzBsF,EAAOe,kBAAkBrB,OGUMsB,MAAK,SAAAtG,GAChC2E,EAAY3E,GACZoE,EAAqBpE,SAZnBuG,EANJ,EAMIA,aAAcC,EANlB,EAMkBA,cANlB,EAMiCC,aAiBrC,OACE,yCAASF,IAAT,CAAyBnE,UAAU,yCACjC,0BAAWoE,MACThC,GACA,kDAEE,6BAFF,+BAMCA,GAAmB,2BAAIA,KACvBE,GAAY,kBAAC,EAAD,CAAcjC,SAAU,CAAEC,MAAO,GAAI1C,KAAM0E,O,wDChD1DgC,E,WAGJ,WAAYC,GAAqB,yBAFzBC,aAEwB,EAC9BC,KAAKD,QAAUD,E,iGAGClE,G,0FACToE,KAAKD,QAAQzD,KAAK,YAAaV,I,qLAGnBlC,G,0FACZsG,KAAKD,QAAQE,OAAO,YAAavG,I,qLAGrBA,EAAkCwG,G,0FAC9CF,KAAKD,QAAQI,MAAb,oBAAgCzG,GAAOwG,I,uQAIvCF,K,SAAwBA,KAAKD,QAAQK,QAAQ,a,iDAAxCC,a,gKAGKC,GAAsC,IAAD,OACtDN,KAAKD,QAAQQ,SAAS,aAAa,SAAAxG,GAAI,OAAIuG,EAAG,EAAKD,aAAatG,S,mCAGrDyG,GACX,OAAOA,EAAYA,EAAUC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE7E,MAAQ8E,EAAE9E,MAAQ,EAAI6E,EAAE7E,MAAQ8E,EAAE9E,OAAS,EAAI,KAAK,O,KAQvF+E,MAJf,SAA+BC,GAC7B,OAAO,IAAIhB,EAAgBgB,ICjCvBC,E,WAGJ,WAAYhB,GAAqB,yBAFzBC,aAEwB,EAC9BC,KAAKD,QAAUD,E,mGAGG7C,G,0FACX+C,KAAKD,QAAQzD,KAAK,cAAeW,I,uLAGnBvD,G,0FACdsG,KAAKD,QAAQE,OAAO,cAAevG,I,uLAGrBA,EAAkCqH,G,0FAChDf,KAAKD,QAAQI,MAAb,sBAAkCzG,GAAOqH,I,yQAIzCf,K,SAAwBA,KAAKD,QAAQK,QAAQ,e,iDAAxCC,a,kKAGOC,GAA0C,IAAD,OAC5DN,KAAKD,QAAQQ,SAAS,eAAe,SAAAxG,GAAI,OAAIuG,EAAG,EAAKD,aAAatG,S,mCAGvDiH,GACX,OAAOA,EAAcA,EAAYP,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE7E,MAAQ8E,EAAE9E,MAAQ,EAAI6E,EAAE7E,MAAQ8E,EAAE9E,OAAS,EAAI,KAAK,O,KAQ3FoF,MAJf,SAAiCJ,GAC/B,OAAO,IAAIC,EAAkBD,I,iBC5BzBK,G,uBAIJ,WAAYC,GAAyB,yBAHrCC,QAGoC,OAFpCrB,aAEoC,EAClC,IAAMsB,EAAMC,IAASC,cAAcJ,GACnCnB,KAAKoB,GAAKC,EAAIvB,WACdE,KAAKD,QAAUsB,EAAItB,U,0FAGVyB,G,0FACFxB,KAAKoB,GACTK,IAAID,GACJE,KAAK,SACLjC,MAAK,SAAAkC,GAAC,OAAIA,EAAEhI,U,4KAGL6H,EAAczH,G,0FACjBiG,KAAKoB,GAAGK,IAAID,GAAMI,IAAI7H,I,6KAGpB8H,EAAkB9H,G,0FACpBiG,KAAKoB,GAAGK,IAAII,GAAUvF,KAAKvC,I,gLAItByH,G,0FACLxB,KAAKoB,GAAGK,IAAID,GAAME,KAAK,SAC7BjC,MAAK,SAAAkC,GAAC,OAAIA,EAAEhI,OAAS,MAAI8F,KAAKnG,I,6KAGpBkI,EAAc9H,G,0FAClBsG,KAAKoB,GAAGK,IAAR,UAAeD,EAAf,YAAuB9H,IAAOoI,U,wIAG9BN,EAAclB,GACrBN,KAAKoB,GAAGK,IAAID,GAAMO,GAAG,SAAS,SAACJ,GAAD,OAAOrB,EAAGhH,EAA0BqI,EAAEhI,e,MASzDqI,MAJf,SAAiCb,GAC/B,OAAO,IAAID,EAAgBC,IC/CvBc,E,WAGJ,WAAYnC,GAAqB,yBAFzBC,aAEwB,EAC9BC,KAAKD,QAAUD,E,6FAGHoC,G,0FACLlC,KAAKD,QAAQzD,KAAK,WAAY4F,I,iLAGtBxI,G,0FACRsG,KAAKD,QAAQE,OAAO,WAAYvG,I,iLAGxBA,EAAkCyI,G,0FAC1CnC,KAAKD,QAAQI,MAAb,mBAA+BzG,GAAOyI,I,mQAItCnC,K,SAAwBA,KAAKD,QAAQK,QAAQ,Y,iDAAxCC,a,4JAGCC,GAAiC,IAAD,OAC7CN,KAAKD,QAAQQ,SAAS,YAAY,SAAAxG,GAAI,OAAIuG,EAAG,EAAKD,aAAatG,S,mCAGpDqI,GACX,OAAOA,EAAWA,EAAS3B,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE2B,UAAY1B,EAAE0B,UAAY,EAAI3B,EAAE2B,UAAY1B,EAAE0B,WAAa,EAAI,KAAK,O,KAQrGC,MAJf,SAA2BzB,GACzB,OAAO,IAAIoB,EAAYpB,IClBnBf,EAAWkC,EAVsB,CACrCO,OAAQ,0CACRC,WAAY,oCACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,8CAIHC,EAAkBlC,EAAsBd,GACxCiD,EAAoB9B,EAAwBnB,GAC5CkD,EAAcV,EAAkBxC,G,iBCuDvBmD,EAjEmC,SAAC,GAG5C,IAFLC,EAEI,EAFJA,eACAC,EACI,EADJA,aACI,EACoC1F,mBAAS0F,GAD7C,mBACGC,EADH,KACiBC,EADjB,KAGJtF,qBAAU,kBAAMsF,EAAgBF,KAAe,CAACA,IAH5C,MAKkDnF,YAAY,CAChEC,OAAQ,SAACC,GACP,IAAMhB,EAAOgB,EAAM,GAEnB,IADiB,6CACHE,KAAKlB,EAAKmB,KAAK7D,eAC3B,OAAO8D,MACL,yEAXJ,EAKIoB,aALJ,EAKkBC,cALlB,EAKiCC,aAgCrC,OACE,yBAAKrE,UAAU,sBACb,8BACE,kBAAC,IAAD,CACE+H,OAAO,UACPC,mBAAiB,EACjBC,WAAY1D,EAASC,QAAQ0B,IAAI,UACjCgC,SAAU,CAACC,aAAc,mBACzBC,cAxBkB,SAACzG,GACzBmG,EAAgBO,MAwBVC,gBArBoB,SAAC3G,GAC3B4C,EACGC,QACA0B,IAAI,UACJqC,MAAM5G,GACN6G,iBACAtE,MAAK,SAAAuE,GACJX,EAAgBW,GAChBd,EAAec,OAcbC,GAAG,eAEL,2BAAOC,QAAQ,cACb,4CAEE,6BAFF,iCAODd,GAAgB,yBAAKvG,IAAKuG,EAAc7H,UAAU,WC3DrDR,EAAsC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACvCG,EAAOC,OAAaJ,GAC1B,GAAoB,IAAhBG,EAAKG,OACP,OAAO,2BAAIN,GAH4C,MAKjCG,EAAK,GAArBK,EALiD,EAKjDA,MAAOC,EAL0C,EAK1CA,KACf,OAAO,uBAAGC,KAAMF,EAAOD,UAAWC,EAAMf,SAAS,SAAoB,QAATgB,EAAiB,WAAaD,EAAMf,SAAS,gBAA2B,QAATgB,EAAiB,UAAY,IAAc,QAATA,EAAiB,aAAeD,IAoNhL2I,EAxM6B,SAAC,GAItC,IAHL3D,EAGI,EAHJA,UACAnG,EAEI,EAFJA,OACA+J,EACI,EADJA,QAEMjL,EAAO,GACbqH,EAAU6D,SAAQ,SAAAzI,GAChB,IAAMzB,EACc,YAAZ,OAANE,QAAM,IAANA,OAAA,EAAAA,EAAQ0B,OACJpB,EAAoBN,EAAOoB,KAAMpB,EAAO0B,MAAOH,EAASzC,MACxDS,EAA2B,OAAQ,SAAUgC,EAASzC,MAC5DA,EAAKmD,KAAL,MAAAnD,EAAI,YAASgB,OAEf,IAAMmK,EAAanL,EAAK,GAExB,GAAIA,EAAKmC,OAAS,EAEhB,OAAO,KAGT,IAAMiJ,EAASD,EAAWzJ,WAAU,SAAAd,GAAI,OAAIA,EAAKU,SAAS,WACpD+J,EAAUF,EAAWzJ,WAAU,SAAAd,GAAI,OAAIA,EAAKU,SAAS,WAErDuB,EAAesI,EAAWrI,QAAO,SAACC,EAAKC,EAAKC,GAIhD,OAHID,EAAI9C,WAAWmB,cAAc6B,WAAW,SAAWF,EAAI9C,WAAWmB,cAAc6B,WAAW,UAC7FH,EAAII,KAAKF,GAEJF,IACN,IAEGuI,EAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAElDC,EAAM,IAAIC,KAEVC,EAAgBzL,EAAKkB,QAAO,SAAAC,GAChC,IAAIuK,GAAO,EACLC,EAAUxK,EAAIiK,GACpB,GAAIO,EAAQrK,SAAS,SACnBoK,GAAO,OACF,GAAIC,EAAQrK,SAASgK,EAAKC,EAAIK,WACnCF,GAAO,OACF,GAAIC,EAAQrK,SAAS,KAAM,CACbqK,EAAQE,MAAM,UACtBX,SAAQ,SAAAY,GACjB,GAAIA,EAAOxK,SAAS,KAAM,CACxB,IAAMyK,EAAYD,EAAOD,MAAM,KACzBG,EAAOV,EAAK5J,WAAU,SAAAuK,GAC1B,OAAOF,EAAU,GAAGzK,SAAS2K,MAEzBC,EAAQZ,EAAK5J,WAAU,SAAAuK,GAC3B,OAAOF,EAAU,GAAGzK,SAAS2K,MAE3BD,EAAOT,EAAIK,UAAYM,EAAQX,EAAIK,WACrCF,GAAO,OAKf,OAAOA,KAGHS,EAAO,GACPC,EAAU,GACVC,EAAW,GA2BjB,OAzBAZ,EAAcP,SAAQ,SAAA/J,GACpB,IAAMmL,EAAWnL,EAAIkK,GAASzI,MAAM,2BACpC,IAAK0J,EAAU,OAAO,GAEnBA,EAAS,GAAGjL,cAAcC,SAAS,OACpCH,EAAI,GAAGE,cAAcC,SAAS,QAE9BgL,EAAS,IAAM,OAEjB,IAAMC,EAAYC,IAAOF,EAAS,GAAI,aAChCG,EACJH,EAASnK,OAAS,EACdqK,IAAOF,EAAS,GAAI,aACpBE,IAAOD,GAAWG,IAAI,EAAG,KAC/BH,EAAUI,SAAS,GAAI,KAEnBH,IAAOjB,GAAKqB,UAAUL,EAAWE,EAAS,KAAM,MAClDN,EAAKhJ,KAAKhC,GACDqL,IAAOjB,GAAKsB,cAAcJ,GACnCL,EAAQjJ,KAAKhC,GACJqL,IAAOjB,GAAKuB,SAASP,IAC9BF,EAASlJ,KAAKhC,MAKhB,yBAAKiB,UAAU,sBAGT+J,EAAKhK,OAAS,GACd,oCACE,yBAAKC,UAAU,mBACb,wBAAIA,UAAU,kBAAd,WAAwC6I,IAE1C,2BAAO7I,UAAU,yDACf,2BAAOA,UAAU,cACf,4BACG+I,EAAWpL,KAAI,SAACE,EAAKgD,GACpB,IAAKJ,EAAavB,SAAS2B,GACzB,OAAO,wBAAIxB,IAAKwB,GAAMhD,QAK9B,+BACGkM,EAAKpM,KAAI,SAACoB,EAAK4L,GAAN,OACR,wBAAItL,IAAKsL,GACN5L,EAAIpB,KAAI,SAACiN,EAAMC,GACd,IAAKpK,EAAavB,SAAS2L,GACzB,OAAO,wBAAIxL,IAAKwL,GACd,kBAAC,EAAD,CAAWpL,MAAOmL,eAalCX,EAASlK,OAAS,GAClB,oCACE,yBAAKC,UAAU,mBACb,wBAAIA,UAAU,kBAAd,YAAyC6I,IAE3C,2BAAO7I,UAAU,yDACf,2BAAOA,UAAU,cACf,4BACG+I,EAAWpL,KAAI,SAACE,EAAKgD,GACpB,IAAKJ,EAAavB,SAAS2B,GACzB,OAAO,wBAAIxB,IAAKwB,GAAMhD,QAK9B,+BACGoM,EAAStM,KAAI,SAACoB,EAAK4L,GAAN,OACZ,wBAAItL,IAAKsL,GACN5L,EAAIpB,KAAI,SAACiN,EAAMC,GACd,IAAKpK,EAAavB,SAAS2L,GACzB,OAAO,wBAAIxL,IAAKwL,GACd,kBAAC,EAAD,CAAWpL,MAAOmL,eAclCZ,EAAQjK,OAAS,GACjB,oCACE,yBAAKC,UAAU,mBACb,wBAAIA,UAAU,kBAAd,aAA0C6I,IAE5C,2BAAO7I,UAAU,yDACf,2BAAOA,UAAU,cACf,4BACG+I,EAAWpL,KAAI,SAACE,EAAKgD,GACpB,IAAKJ,EAAavB,SAAS2B,GACzB,OAAO,wBAAIxB,IAAKwB,GAAMhD,QAK9B,+BACGmM,EAAQrM,KAAI,SAACoB,EAAK4L,GAAN,OACX,wBAAItL,IAAKsL,GACN5L,EAAIpB,KAAI,SAACiN,EAAMC,GACd,IAAKpK,EAAavB,SAAS2L,GACzB,OAAO,wBAAIxL,IAAKwL,GACd,kBAAC,EAAD,CAAWpL,MAAOmL,iB,kBClK7BE,GA7CU,SAAAC,GAAU,IAAD,EAC1BC,EAAWC,cACXC,EAAQ,UAAGC,GAAWH,EAASI,iBAAvB,aAAG,EAA+BF,SAChD,OACE,oCACE,4BAAQlL,UAAU,kEAChB,uBAAGG,KAAK,KAAKH,UAAU,gBACrB,yBACEA,UAAU,OACVsB,IAAK+J,KACLC,IAAI,MACJC,OAAO,QAGX,4BAAQvL,UAAU,iBAAiBE,KAAK,SAASsL,cAAY,WAAWC,cAAY,sBAAsBC,gBAAc,qBAAqBC,gBAAc,QAAQC,aAAW,qBAC5K,0BAAM5L,UAAU,yBAElB,yBAAKA,UAAU,2BAA2B0I,GAAG,sBAC3C,wBAAI1I,UAAU,sBACZ,wBAAIA,UAAiC,WAAtBgL,EAASI,SAAwB,kBAAoB,YAClE,uBAAGpL,UAAU,WAAWG,KAAK,YAA7B,YAEF,wBAAIH,UAAiC,cAAtBgL,EAASI,SAA2B,kBAAoB,YACrE,uBAAGpL,UAAU,WAAWG,KAAK,eAA7B,aAEF,wBAAIH,UAAiC,aAAtBgL,EAASI,SAA0B,kBAAoB,YACpE,uBAAGpL,UAAU,WAAWG,KAAK,cAA7B,YAEF,wBAAIH,UAAiC,cAAtBgL,EAASI,SAA2B,kBAAoB,YACrE,uBAAGpL,UAAU,WAAWG,KAAK,eAA7B,qBAEF,wBAAIH,UAAU,YACZ,uBAAGA,UAAU,WAAWG,KAAK,8BAA7B,eAKR,yBAAKH,UAAU,mBACf,wBAAIA,UAAU,uCACXkL,GAAsB,MC+IhBW,GAjLqC,SAAC,GAAmB,IAAjB5G,EAAgB,EAAhBA,UAAgB,EACjC/C,mBAAiB,QADgB,mBAC9D5D,EAD8D,KAClDwN,EADkD,OAEnC5J,mBAAiB,IAFkB,mBAE9D3D,EAF8D,KAEnDwN,EAFmD,OAGvC7J,mBAAiB,WAHsB,mBAG9D2G,EAH8D,KAGrDmD,EAHqD,KAI/DhB,EAAWC,cAEX/B,EAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAExD1G,qBAAU,WACR,GAA0B,cAAtBwI,EAASI,SACXY,EAAW,YACXF,EAAc,QACdC,EAAa,eACR,GAA0B,WAAtBf,EAASI,SAAuB,CACzC,IAAMjC,EAAM,IAAIC,KACV6C,EAAQ/C,EAAKC,EAAIK,UACvBsC,EAAc,OACdC,EAAaE,OACkB,cAAtBjB,EAASI,WAClBY,EAAW,kBACXF,EAAc,QACdC,EAAa,qBAEd,CAACf,EAASI,WAEb,IAAMc,EAAqBC,uBAAY,WACrC,IAAMC,EAAY,qBACdC,EAAQ,GASZ,OARApH,EAAU6D,SAAQ,YAAe,IAAZlL,EAAW,EAAXA,KACb0O,EAAY3N,EAAkBf,EAAM,QACpC2O,EAAY3O,EACfD,KAAI,SAAAoB,GAAG,OAAIA,EAAIuN,MACfxN,QAAO,SAAA0N,GAAI,OAAIJ,EAAUvJ,KAAK2J,MAC9B7O,KAAI,SAAA6O,GAAI,OAAIA,EAAKhM,MAAM4L,GAAW,MACrCC,EAAQA,EAAMlN,OAAOoN,MAEhBE,MAAMC,KAAK,IAAIC,IAAIN,IAAQnH,MAAK,SAACC,EAAGC,GACzC,IAAMwH,EAAK,IAAIxD,KAAK,cAAgBjE,GAC9B0H,EAAK,IAAIzD,KAAK,cAAgBhE,GACpC,OAAOwH,EAAKC,EAAK,EAAID,EAAKC,GAAM,EAAI,OAErC,CAAC5H,IAEE6H,EAAeX,uBAAY,WAC/B,IAAIY,EAAW,GAOf,OANA9H,EAAU6D,SAAQ,YAAe,IAAZlL,EAAW,EAAXA,KACb0O,EAAY3N,EAAkBf,EAAM,WACpC2O,EAAY3O,EACfD,KAAI,SAAAoB,GAAG,OAAIA,EAAIuN,MAClBS,EAAWA,EAAS5N,OAAOoN,MAEtBE,MAAMC,KAAK,IAAIC,IAAII,IAAW7H,SACpC,CAACD,IAEJ,OACE,oCAG4B,cAAtB+F,EAASI,UACT,yBAAKpL,UAAU,aACb,yBAAKA,UAAU,OACb,wBAAIA,UAAU,yCACZ,wBAAIA,UAAU,YACZ,uBAAGG,KAAK,WAAWH,UAAiC,WAAtBgL,EAASI,SAAwB,kBAAoB,YAAnF,oBAEF,wBAAIpL,UAAU,YACZ,uBAAGG,KAAK,cAAcH,UAAiC,cAAtBgL,EAASI,SAA2B,kBAAoB,YAAzF,mBAEF,wBAAIpL,UAAU,YACZ,uBAAGG,KAAK,aAAaH,UAAiC,aAAtBgL,EAASI,SAA0B,kBAAoB,YAAvF,qBAOZ,yBAAKpL,UAAU,aAGa,WAAtBgL,EAASI,UACT,kBAAC,EAAD,CACEnG,UAAWA,EACXnG,SACmB,SAAfR,GAAuC,KAAdC,IAAqB,CAC9C2B,KAAM5B,EACNkC,MAAOjC,GAGXsK,QAASA,KAKjB,yBAAK7I,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yBACb,2BACE2I,QAAQ,SACR3I,UACwB,aAAtBgL,EAASI,SAA0B,eAAiB,UAHxD,aAKa,IACX,4BACEtI,KAAK,SACLkC,SAAU,SAAA3B,GACRyI,EAAczI,EAAEvB,OAAO7B,OACvB8L,EAAa,KAEfrD,GAAG,GACHzI,MAAO3B,GACP,4BAAQ2B,MAAM,QAAd,aACA,4BAAQA,MAAM,QAAd,eACA,4BAAQA,MAAM,OAAd,eACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,WAAd,YAEc,SAAf3B,IACiB,QAAfA,EACC,4BACE0B,UAAU,OACVgF,SAAU,SAAA3B,GAAC,OAAI0I,EAAa1I,EAAEvB,OAAO7B,SACrC,4BAAQA,MAAM,IAAd,cACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,QAEe,SAAf3B,EACF,4BACE0B,UAAU,OACVgF,SAAU,SAAA3B,GAAC,OAAI0I,EAAa1I,EAAEvB,OAAO7B,MAAMhB,iBAC3C,4BAAQgB,MAAM,IAAd,eACCiM,IAAqBvO,KAAI,SAAA6O,GAAI,OAC5B,4BAAQvM,MAAOuM,GAAOA,OAGT,YAAflO,EACF,4BACE0B,UAAU,OACVgF,SAAU,SAAA3B,GAAC,OAAI0I,EAAa1I,EAAEvB,OAAO7B,MAAMhB,iBAC3C,4BAAQgB,MAAM,IAAd,kBACC6M,IAAenP,KAAI,SAAA6O,GAAI,OACtB,4BAAQvM,MAAOuM,GAAOA,OAItB,2BACEtM,KAAK,OACLF,UAAU,OACVgF,SAAU,SAAA3B,GAAC,OAAI0I,EAAa1I,EAAEvB,OAAO7B,MAAMhB,gBAC3C+N,YAAW,gBAAW1O,EAAX,aAMJ,WAAtB0M,EAASI,UAAyBnG,EAAUtH,KAAI,SAAC0C,EAAUQ,GAC1D,OACE,kBAAC,EAAD,CACExB,IAAKwB,EACLR,SAAUA,EACVvB,SACmB,SAAfR,GAAuC,KAAdC,IAAqB,CAC9C2B,KAAM5B,EACNkC,MAAOjC,WCtKnB0O,GAA0D,SAAC,GAAD,IAC9D5M,EAD8D,EAC9DA,SACA6M,EAF8D,EAE9DA,UACAC,EAH8D,EAG9DA,mBACAC,EAJ8D,EAI9DA,mBAJ8D,OAM9D,wBAAIpN,UAAU,uDACZ,4BAAKK,EAASC,OAEb4M,EACC,4BAAQlN,UAAU,qBAAqBqN,QAASD,GAAhD,KAIA,4BAAQpN,UAAU,kBAAkBqN,QAASF,GAC3C,uBAAGnN,UAAU,8BA8FNsN,GA5EiC,SAAC,GAK1C,IAJLrI,EAII,EAJJA,UACAsI,EAGI,EAHJA,eACAC,EAEI,EAFJA,eACAC,EACI,EADJA,eACI,EACkDvL,wBACpDC,GAFE,mBACGuL,EADH,KACwBC,EADxB,KAIEC,EAA4B,SAAAC,GAAO,OACvCF,EAAuB,eAAKD,EAAN,GAA8BG,KAmBtD,OAHArL,qBAAU,WACRsL,QAAQC,IAAIL,KACX,CAACA,IAEF,yBAAK1N,UAAU,wBACb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,sBACZiF,EAAUtH,KAAI,SAAC0C,EAAUQ,GAAX,OACb,kBAAC,GAAD,CACExB,IAAKwB,EACLR,SAAUA,EACV6M,WAA8B,OAAnBQ,QAAmB,IAAnBA,OAAA,EAAAA,EAAqBvP,OAAQkC,EAASlC,IACjDgP,mBAAoB,kBAAMQ,EAAuBtN,IACjD+M,mBAAoB,kBAAMI,EAAenN,EAASlC,YAIxD,yBAAK6B,UAAU,iCACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,cACT0N,EACC,mBACA,0BAGR,2BACExN,KAAK,OACLF,UAAU,eACVgN,YAAY,iBACZ/M,OAA0B,OAAnByN,QAAmB,IAAnBA,OAAA,EAAAA,EAAqBpN,QAAS,GACrC0E,SAAU,SAAA3B,GAAC,OAAIuK,EAA0B,CAAEtN,MAAO+C,EAAEvB,OAAO7B,WAE7D,kBAAC,EAAD,CACE0H,eAAgB,SAAApH,GAAI,OAAIqN,EAA0B,CAAErN,UACpDqH,aAAY,OAAE8F,QAAF,IAAEA,OAAF,EAAEA,EAAqBnN,OAErC,kBAAC,EAAD,CACEyB,qBAAsB,SAAApE,GAAI,OAAIgQ,EAA0B,CAAEhQ,UAC1DqE,mBAAkB,OAAEyL,QAAF,IAAEA,OAAF,EAAEA,EAAqB9P,OAG3C,4BAAQoC,UAAU,kBAAkBqN,QAvDnB,WAAO,IAExB1I,EAAc,CAAErE,MADQoN,EAAtBpN,MACqB1C,KADC8P,EAAf9P,KACoB2C,KADLmN,EAATnN,MAEhBoE,EAAYpE,OACfoE,EAAYpE,KAAO,IAEjBmN,EAAoBvP,IACtBsP,EAAeC,EAAoBvP,IAAKwG,GAExC4I,EAAe5I,GAEjBgJ,OAAuBxL,MA6CK,OAAnBuL,QAAmB,IAAnBA,OAAA,EAAAA,EAAqBvP,KAAM,eAAiB,uBCpF1C6P,GAnB2C,SAAC,GAAqB,IAAnBvI,EAAkB,EAAlBA,YAC3D,OACE,oCACE,yBAAKzF,UAAU,aACb,yBAAKA,UAAU,2BACZyF,EAAY9H,KAAI,SAAC+D,EAAYb,GAC5B,OACE,kBAAC,EAAD,CACExB,IAAKwB,EACLa,WAAYA,WCJtBuM,GAA8D,SAAC,GAAD,IAClEvM,EADkE,EAClEA,WACAwL,EAFkE,EAElEA,UACAC,EAHkE,EAGlEA,mBACAC,EAJkE,EAIlEA,mBAJkE,OAMlE,wBAAIpN,UAAU,uDACZ,4BAAK0B,EAAWpB,OAEf4M,EACC,4BAAQlN,UAAU,qBAAqBqN,QAASD,GAAhD,KAIA,4BAAQpN,UAAU,kBAAkBqN,QAASF,GAC3C,uBAAGnN,UAAU,8BAqINsN,GAnH4C,SAAC,GAKrD,IAJL7H,EAII,EAJJA,YACAyI,EAGI,EAHJA,iBACAC,EAEI,EAFJA,iBACAC,EACI,EADJA,iBACI,EACsDlM,wBACxDC,GAFE,mBACGkM,EADH,KAC0BC,EAD1B,KAIEC,EAA8B,SAAAV,GAAO,OAC3CS,EAAyB,eAAKD,EAAN,GAAgCR,KACpDW,GAAY,EAgChB,OAHAhM,qBAAU,WACRsL,QAAQC,IAAIM,KACX,CAACA,IAEF,yBAAKrO,UAAU,wBACb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,sBACZyF,EAAY9H,KAAI,SAAC+D,EAAYb,GAAb,OACf,kBAAC,GAAD,CACExB,IAAKwB,EACLa,WAAYA,EACZwL,WAAgC,OAArBmB,QAAqB,IAArBA,OAAA,EAAAA,EAAuBlQ,OAAQuD,EAAWvD,IACrDgP,mBAAoB,kBAAMmB,EAAyB5M,IACnD0L,mBAAoB,kBAAMe,EAAiBzM,EAAWvD,YAI5D,yBAAK6B,UAAU,iCACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,cACTqO,EACC,qBACA,4BAGR,2BACEnO,KAAK,OACLF,UAAU,eACVgN,YAAY,mBACZ/M,OAA4B,OAArBoO,QAAqB,IAArBA,OAAA,EAAAA,EAAuB/N,QAAS,GACvC0E,SAAU,SAAA3B,GAAC,OAAIkL,EAA4B,CAAEjO,MAAO+C,EAAEvB,OAAO7B,WAE/D,kBAAC,EAAD,CACE0H,eAAgB,SAAA/F,GAAK,OAAI2M,EAA4B,CAAE3M,WACvDgG,aAAY,OAAEyG,QAAF,IAAEA,OAAF,EAAEA,EAAuBzM,QAGvC,yBAAK5B,UAAU,sBACb,8BACE,kBAAC,IAAD,CACEgI,mBAAiB,EACjBE,SAAU,CAACC,aAAc,mBACzBF,WAAY1D,EAASC,QAAQ0B,IAAI,gBACjCkC,cA/CY,SAACzG,GACzB6M,GAAY,GA+CAlG,gBA5Dc,SAAC3G,GAC3B4C,EACGC,QACA0B,IAAI,gBACJqC,MAAM5G,GACN6G,iBACAtE,MAAK,SAAAuE,GACJ8F,EAA4B,CAAC5M,KAAM8G,IACnC+F,GAAY,MAqDJ9F,GAAG,cAEL,2BAAOC,QAAQ,aACb,kDAEE,6BAFF,iCAOD6F,GAAa,yBAAKlN,IAAK+G,SACxB,OAACgG,QAAD,IAACA,OAAD,EAACA,EAAuB1M,OAAQ,uBAAGxB,KAAMkO,EAAsB1M,KAAMG,OAAO,UAA5C,YAGpC,8BACE9B,UAAU,oBACVgN,YAAY,UACZ/M,OAA4B,OAArBoO,QAAqB,IAArBA,OAAA,EAAAA,EAAuBxM,OAAQ,GACtCmD,SAAU,SAAA3B,GAAC,OAAIkL,EAA4B,CAAE1M,KAAMwB,EAAEvB,OAAO7B,WAG9D,4BAAQD,UAAU,uBAAuBqN,QA7FxB,WAAO,IAExB7H,EAAgB,CAAElF,MADa+N,EAA7B/N,MACuBqB,KADM0M,EAAtB1M,KACsBC,MADAyM,EAAhBzM,OACgC,GAAIC,KADpBwM,EAATxM,MAC2C,IACnEwM,EAAsBlQ,IACxBiQ,EAAiBC,EAAsBlQ,IAAKqH,GAE5C0I,EAAiB1I,GAEnB8I,OAAyBnM,MAsFK,OAArBkM,QAAqB,IAArBA,OAAA,EAAAA,EAAuBlQ,KAAM,eAAiB,yBC5D5CsQ,GArF+B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACzBxM,mBAAiB,IADQ,mBACpD4E,EADoD,KACzC6H,EADyC,OAE/BzM,mBAAiB,IAFc,mBAEpD0M,EAFoD,KAE5CC,EAF4C,OAGrB3M,mBAAiB,IAHI,mBAGpD4M,EAHoD,KAGvCC,EAHuC,OAIrB7M,mBAAiB,IAJI,mBAIpD8M,EAJoD,KAIvCC,EAJuC,KAMrDC,EAAU,SAAC7L,GACfsL,EAAa,IACbE,EAAU,IACVE,EAAe,IACfE,EAAe,cACfE,YAAW,WACTF,EAAe,MACd,MAGCG,EAAO,SAAC/L,GACZ4L,EAAe,UAQjB,OACE,oCACE,yBAAKjP,UAAU,aACb,oNAGA,0BAAMqP,SAXG,SAAChM,GACdA,EAAEiM,iBACF/K,EAASxD,KAAK,WAAY,CAAC+F,YAAW8H,SAAQE,gBAAc5K,KAAKgL,EAASE,KAUpE,yBAAKpP,UAAU,cACb,2BAAO2I,QAAQ,aAAf,qBACA,2BAAOzI,KAAK,OAAOwI,GAAG,YAAY1I,UAAU,eAAegF,SAAU,SAAA3B,GAAC,OAAIsL,EAAatL,EAAEvB,OAAO7B,QAAQA,MAAO6G,EAAWyI,UAAQ,KAEpI,yBAAKvP,UAAU,cACb,0CACA,yBAAKA,UAAU,cACb,2BAAOE,KAAK,QAAQwI,GAAG,MAAM5F,KAAK,SAAS7C,MAAM,MAAMuP,UAAuB,QAAXZ,GAAmB5J,SAAU,SAAA3B,GAAC,OAAIA,EAAEvB,OAAO0N,SAAWX,EAAUxL,EAAEvB,OAAO7B,QAAQsP,UAAQ,IAC5J,2BAAO5G,QAAQ,OAAf,SAEF,yBAAK3I,UAAU,cACb,2BAAOE,KAAK,QAAQwI,GAAG,MAAM5F,KAAK,SAAS7C,MAAM,MAAMuP,UAAuB,QAAXZ,GAAmB5J,SAAU,SAAA3B,GAAC,OAAIA,EAAEvB,OAAO0N,SAAWX,EAAUxL,EAAEvB,OAAO7B,UAC5I,2BAAO0I,QAAQ,OAAf,UAGJ,yBAAK3I,UAAU,cACb,2BAAO2I,QAAQ,eAAf,wBACA,2BAAOzI,KAAK,OAAOwI,GAAG,cAAc1I,UAAU,eAAegF,SAAU,SAAA3B,GAAC,OAAI0L,EAAe1L,EAAEvB,OAAO7B,QAAQA,MAAO6O,EAAaS,UAAQ,KAE1I,yBAAKvP,UAAU,cACb,4BAAQE,KAAK,SAASF,UAAU,0BAAhC,YACGgP,GAAgB,0BAAMhP,UAAU,SAASgP,MAIlD,yBAAKhP,UAAU,kBACb,2BAAOA,UAAU,yDACf,2BAAOA,UAAU,cACf,4BACE,0HAGJ,+BACC0O,EAAM/Q,KAAI,SAAC8R,EAAQ5O,GAClB,IAAI6O,GAAUD,EAAO3I,UAAU6I,OAAO,qBAAuBF,EAAOX,YAAYa,OAAO,mBACnFf,EAASa,EAAOb,OAIpB,OAHIc,IACFd,EAAoB,QAAXA,EAAmB,eAAO,gBAGnC,wBAAIvP,IAAKwB,GACP,wBAAI+O,IAAKF,GAAU,OAAQD,EAAO3I,UAAlC,IAA8C8H,EAA9C,IAAuDa,EAAOX,sBClC/De,GA7Ce,WAC5B,OACE,oCACE,yBAAK7P,UAAU,aACb,yBACEsB,IAAK+J,KACLrL,UAAU,sBACVuL,OAAO,MACPD,IAAI,MAGR,yBAAKtL,UAAU,0DACb,yBAAKA,UAAU,6DACb,uBACEG,KAAK,2EACL2B,OAAO,SACP9B,UAAU,iCAHZ,8CAMA,uBAAGG,KAAK,WAAWH,UAAU,+BAA7B,4BAGA,uBAAGG,KAAK,cAAcH,UAAU,+BAAhC,6BAGA,uBAAGG,KAAK,mDAAmDH,UAAU,4CAArE,+BAGA,uBAAGG,KAAK,aAAaH,UAAU,+BAA/B,4BAGA,uBAAGG,KAAK,cAAcH,UAAU,+BAAhC,+BAGA,uBACEG,KAAK,6BACLH,UAAU,+BAFZ,uBCtBK8P,GAVc,WAAO,IAAD,EACC5N,mBAAqB,IADtB,mBAC1B+C,EAD0B,KACf8K,EADe,KAOjC,OAJAvN,qBAAU,WACR+E,EAAgByI,mBAAmBD,KAClC,IAEI,kBAACE,GAAD,CAAehL,UAAWA,KCU7BiL,GAAe,SAACC,GAAD,OACnBlS,OAAOC,QAAQiS,GAAQxS,KAAI,mCAAEsI,EAAF,YAAUmK,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,UAAjB,OACzB,kBAAC,IAAD,CAAOpK,KAAMA,EAAMmK,MAAOA,EAAOE,UAAWD,QAGnCE,GAAwB,CACnC,IAAK,CAAEH,OAAO,EAAMC,UCtBK,WAAO,IAAD,EACiBnO,mBAAqB,IADtC,mBACxBsO,EADwB,KACNC,EADM,KAG/BjO,qBAAU,WACR+E,EAAgByI,mBAAmBS,KAClC,IAoBH,OACE,kBAACC,GAAD,CACEzL,UAAWuL,EACXjD,eArBmB,SAAAlN,GACrB,OAAKA,EAASzC,KAGTyC,EAASC,MAGPiH,EAAgBoJ,YAAYtQ,GAF1B0C,MAAM,wCAHNA,MAAM,sCAoBb0K,eARmB,SAACtP,EAAKyS,GAC3B,OAAOrJ,EAAgBkG,eAAetP,EAAKyS,IAQzCpD,eAbmB,SAAArP,GACrB,OAAOoJ,EAAgBsJ,eAAe1S,QDKxC,gBAAiB,CAAEiS,OAAO,EAAMC,UEvBI,WAAO,IAAD,EACUnO,mBAAuB,IADjC,mBACnC4O,EADmC,KACfC,EADe,KAG1CvO,qBAAU,WACRgF,EAAkBwJ,qBAAqBD,KACtC,IAoBH,OACE,kBAACE,GAAD,CACExL,YAAaqL,EACb5C,iBArBqB,SAAAxM,GACvB,OAAKA,EAAWC,KAGXD,EAAWpB,MAGTkH,EAAkB0J,cAAcxP,GAF9BqB,MAAM,wCAHNA,MAAM,sCAoBbqL,iBARqB,SAACjQ,EAAKgT,GAC7B,OAAO3J,EAAkB4G,iBAAiBjQ,EAAKgT,IAQ7ChD,iBAbqB,SAAAhQ,GACvB,OAAOqJ,EAAkB4J,iBAAiBjT,SFYjCgN,GAAuB,CAClC,IAAK,CAAEiF,OAAO,EAAMC,UGlCK,WACzB,OAAO,kBAACgB,GAAD,OHiC4CnG,SAAU,2BAC7D,SAAU,CACRkF,OAAO,EACPC,UAAWP,GACX5E,SAAU,uDAEZ,WAAY,CACVkF,OAAO,EACPC,UAAWP,GACX5E,SAAU,uDAEZ,YAAa,CACXkF,OAAO,EACPC,UAAWP,GACX5E,SAAU,wDAEZ,YAAa,CACXkF,OAAO,EACPC,UAAWP,GACX5E,SAAU,sDAEZ,WAAY,CACVkF,OAAO,EACPC,UIvD6B,WAAO,IAAD,EACCnO,mBAAuB,IADxB,mBAC9BuD,EAD8B,KACjB6L,EADiB,KAOrC,OAJA9O,qBAAU,WACRgF,EAAkBwJ,qBAAqBM,KACtC,IAEI,kBAACC,GAAD,CAAmB9L,YAAaA,KJiDrCyF,SAAU,oBAEZ,YAAa,CACXkF,OAAO,EACPC,UK5DsB,WAAO,IAAD,EACJnO,mBAAiB,IADb,mBACvBwM,EADuB,KAChB8C,EADgB,KAO9B,OAJAhP,qBAAU,WACRiF,EAAYgK,eAAeD,KAC1B,IAEI,kBAACE,GAAD,CAAYhD,MAAOA,KLsDxBxD,SAAU,wBAEZ,SAAU,CAAEmF,UApCS,kBACrB,kBAAC,IAAD,CAAYsB,SAAS,UAAUzB,GAAaK,QA6C/BqB,GAPO,kBACpB,kBAAC,IAAD,KACE,kBAAC,GAAD,MACC1B,GAAa/E,MMpEH0G,GAFH,kBAAM,kBAACC,GAAD,OCQEC,QACW,cAA7BC,OAAOhH,SAASiH,UAEe,UAA7BD,OAAOhH,SAASiH,UAEhBD,OAAOhH,SAASiH,SAASzR,MACvB,2DCPN0R,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDgI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtO,MAAK,SAAAuO,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9E,QAAQ8E,MAAMA,EAAMC,c","file":"static/js/main.836986b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.3acec546.gif\";","module.exports = __webpack_public_path__ + \"static/media/SCALogo.80df96a3.png\";","import moment from 'moment';\nimport xlsx from 'xlsx';\n\nimport { DataFrame } from './types';\n\nexport const dataframeFromExcelFile = (excelFile: File) =>\n  new Promise<DataFrame>(resolve => {\n    var reader = new FileReader();\n\n    reader.onload = function(e) {\n      const data = e.target.result;\n      const workbook = xlsx.read(data, { type: 'array' });\n      const spreadSheet = workbook.Sheets[workbook.SheetNames[0]];\n\n      const rowObjs = xlsx.utils.sheet_to_json(spreadSheet);\n      const header = Object.keys(rowObjs[0]);\n      const rows: DataFrame = [header].concat(\n        rowObjs.map(obj => header.map(key => obj[key])),\n      );\n      resolve(cleanExcelData(rows));\n    };\n\n    reader.readAsArrayBuffer(excelFile);\n  });\n\nexport const convertImageFileToBase64Str = (image: File) => \n  new Promise<string | ArrayBuffer>(resolve => {\n    const reader = new FileReader();\n    reader.onloadend = function (e) {\n      resolve(e.target.result);\n    }\n    reader.readAsDataURL(image);\n  });\n    \n\nexport const adjustExcelTime = string => {\n    return string.toString();\n    if (typeof string === 'string') return string;\n    const timeInMiliSeconds = (string - (25567 + 1)) * 86400 * 1000;\n    const fiveHours = 1000 * 60 * 60 * 5;\n    const data = new Date(timeInMiliSeconds + fiveHours);\n    return moment(data).format('LT');\n};\n\nexport const cleanExcelData = (d: DataFrame) => \n    d.map(rows => rows.map(col => adjustExcelTime(col)));\n\n\nexport const convertJsonToArrayWithIds = (obj: object) =>\n    Object.entries(obj).map(([_id, val]) => ({ _id, ...val }));\n\nexport const excludeFilterDataFrameRows = (filterType: string, filterVal: string, data: DataFrame) => {\n    const header = [...data[0]];\n    const searchableColIndex = getColumnIdxOfKey(data, filterType);\n    if (searchableColIndex === -1) { // This table doesn't have a column for specified filterType\n        return [...data];\n    }\n    const filteredRows = data.slice(1).filter(row => {\n        let cellText = row[searchableColIndex];\n        // if (filterType === 'time') cellText = cellText.replace(':', '');\n        return cellText && !cellText.toLowerCase().includes(filterVal.toLowerCase());\n    });\n    return [header].concat(filteredRows);\n}\n\nexport const filterDataFrameRows = (filterType: string, filterVal: string, data: DataFrame) => {\n    const header = [...data[0]];\n    const searchableColIndex = getColumnIdxOfKey(data, filterType);\n    if (searchableColIndex === -1) { // This table doesn't have a column for specified filterType\n        return [header];\n    }\n    const filteredRows = data.slice(1).filter(row => {\n        let cellText = row[searchableColIndex];\n        // if (filterType === 'time') cellText = cellText.replace(':', '');\n        return cellText && cellText.toLowerCase().includes(filterVal.toLowerCase());\n    });\n    return [header].concat(filteredRows);\n}\n\nexport const getColumnIdxOfKey = (data: DataFrame, key: string) => {\n  const colIndex = data[0].findIndex(currKey =>\n    currKey.toLowerCase().includes(key.toLowerCase())\n  );\n  return colIndex;\n}","import React from 'react';\n\nimport * as linkify from 'linkifyjs';\nimport { Schedule } from '../../types';\nimport { excludeFilterDataFrameRows, filterDataFrameRows } from '../../util';\n\ninterface ScheduleCardProps {\n  schedule: Schedule;\n  filter?: {\n    /** The column in the header to look for */\n    type: string;\n    /** The string to compare cells with */\n    match: string;\n  };\n  stringToHighlight?: string;\n}\n\ninterface SmartTextProps {\n  input: string;\n  highlight?: boolean;\n  row?: string[];\n  passwordCol: number;\n}\n/** If input contains a link, SmartText will replace it with a clickable ancor tag */\nconst SmartText: React.FC<SmartTextProps> = ({ input, highlight, row, passwordCol }) => {\n  const urls = linkify.find(input);\n  let password = '';\n  if (~passwordCol && row[passwordCol] !== '-') {\n    password = `Password: ${row[passwordCol]}`;\n  }\n  if (urls.length === 0) {\n    return <p className={highlight && 'highlight'}>{input}</p>;\n  }\n  const { value, type } = urls[0];\n  return <p><a href={value} className={value.includes('zoom') && type === 'url' ? 'zoomIcon' : value.includes('gotomeeting') && type === 'url' ? 'gtmIcon' : ''}>{type === 'url' ? 'Click here' : value}</a> <span className=\"password\">{password}</span></p>;\n};\n\nconst ScheduleCard: React.FC<ScheduleCardProps> = ({ schedule, filter }) => {\n  const { title, rows, logo } = schedule;\n\n  const filteredRows = filter\n    ? filterDataFrameRows(filter.type, filter.match, rows)\n    : excludeFilterDataFrameRows('type', 'minyan', rows);\n\n  if (filteredRows.length === 1) {\n    // No rows matched the filter criteria\n    return null;\n  }\n\n  const headerRow = filteredRows[0];\n\n  const filteredCols = headerRow.reduce((acc, cur, idx) => {\n    if (cur.toString().toLowerCase().startsWith('hide')) {\n      acc.push(idx)\n    }\n    return acc;\n  }, []);\n\n  const filterColIdx =\n    filter && rows[0].findIndex(col => col.toLowerCase().includes(filter.type));\n\n  const passwordColIdx =\n    rows[0].findIndex(col => col.toLowerCase().includes('password'));\n\n  const shouldHighlight = (colText: string, colIdx) => {\n    if (filter?.match === 'minyan') {\n      return false;\n    }\n    const text = colText.toLowerCase();\n    return filterColIdx === colIdx && text.includes(filter.match);\n  };\n\n  return (\n    <div className=\"schedule-card my-5\">\n      <div className=\"card-header\">\n        {!!logo && (\n          <div className=\"w-100\">\n            <img src={logo} className=\"logo ml-4\" />\n          </div>\n        )}\n        <h1 className=\"schedule-title\">{title}</h1>\n      </div>\n      <table className=\"table table-striped table-bordered table-hover shadow\">\n        <thead className=\"text-light\">\n          <tr>\n            {filteredRows[0].map((col, idx) => {\n              if (!filteredCols.includes(idx)) {\n                return <th key={idx}>{col}</th>\n              }\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          {filteredRows.slice(1).map((row, rIdx) => (\n            <tr key={rIdx}>\n              {row.map((col, cIdx) => {\n                if (!filteredCols.includes(cIdx)) {\n                  return <td key={cIdx}>\n                    <SmartText\n                      input={col}\n                      row={row}\n                      passwordCol={passwordColIdx}\n                      highlight={shouldHighlight(col, cIdx)}\n                    />\n                  </td>\n                }\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ScheduleCard;\n","import React from 'react';\n\nimport { Attachment } from '../../types';\n\ninterface AttachmentCardProps {\n  attachment: Attachment;\n}\n\nconst AttachmentCard: React.FC<AttachmentCardProps> = ({ attachment }) => {\n  const { title, file, cover, body } = attachment;\n\n  return (\n    <div className=\"attachment-card px-0 col-md-4\">\n      <a href={file} target=\"_blank\" className=\"d-flex flex-column align-items-center justify-content-center\">\n        <div className=\"card-header\">\n          {!!cover && (\n            <div className=\"w-100\">\n              <img src={cover} className=\"attachment-cover\" />\n            </div>\n          )}\n          <h3 className=\"attachment-title\">{title}</h3>\n          {!!body && (\n            <p className=\"attachment-caption\">{body}</p>\n          )}\n        </div>\n        <span className=\"btn btn-secondary\">Click to download</span>\n      </a>\n    </div>\n  );\n};\n\nexport default AttachmentCard;\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nimport { DataFrame } from '../../types';\nimport { dataframeFromExcelFile } from '../../util';\n\nimport ScheduleCard from './ScheduleCard';\n\ninterface SpreadSheetDropBoxProps {\n  onSpreadSheetDropped: (data: DataFrame) => void;\n  currentSpreadSheet?: DataFrame;\n}\n\nconst SpreadSheetDropBox: React.FC<SpreadSheetDropBoxProps> = ({\n  onSpreadSheetDropped,\n  currentSpreadSheet,\n}) => {\n  const [droppedFileName, setDroppedFileName] = useState(undefined);\n  const [dataRows, setDataRows] = useState<DataFrame>(undefined);\n\n  useEffect(() => setDataRows(currentSpreadSheet), [currentSpreadSheet]);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: (files: File[]) => {\n      const file = files[0];\n      const excelExt = /^([a-zA-Z0-9\\s_\\\\.\\-:])+(.xls|.xlsx)$/;\n      if (!excelExt.test(file.name.toLowerCase())) {\n        return alert(\n          'Only files with .xlsx or .xls extentions are allowed here.',\n        );\n      }\n      setDroppedFileName(file.name);\n      dataframeFromExcelFile(file).then(rows => {\n        setDataRows(rows);\n        onSpreadSheetDropped(rows);\n      });\n    },\n  });\n\n  return (\n    <div {...getRootProps()} className=\"file-dropper scroll-content p-4 my-2\">\n      <input {...getInputProps()} />\n      {!droppedFileName && (\n        <p>\n          Drop excel file here\n          <br />\n          (or click to choose file)\n        </p>\n      )}\n      {!!droppedFileName && <p>{droppedFileName}</p>}\n      {!!dataRows && <ScheduleCard schedule={{ title: '', rows: dataRows }} />}\n    </div>\n  );\n};\n\nexport default SpreadSheetDropBox;\n","import { Schedule, Database } from '../types';\n\nclass ScheduleService {\n  private storage: Database;\n\n  constructor(database: Database) {\n    this.storage = database;\n  }\n\n  async addSchedule(schedule: Schedule) {\n    return this.storage.push('schedules', schedule);\n  }\n\n  async removeSchedule(_id: firebase.database.Reference) {\n    return this.storage.delete('schedules', _id);\n  }\n\n  async updateSchedule(_id: firebase.database.Reference, newSchedule: Schedule) {\n    return this.storage.write(`schedules/${_id}`, newSchedule);\n  }\n\n  async getAllSchedules(): Promise<Schedule[]> {\n    return this._alphabetize(await this.storage.findAll('schedules'));\n  }\n\n  onSchedulesChanged(cb: (schedules: Schedule[]) => void) {\n    this.storage.onChange('schedules', data => cb(this._alphabetize(data)));\n  }\n\n  _alphabetize(schedules: Schedule[]) {\n    return schedules ? schedules.sort((a, b) => a.title > b.title ? 1 : a.title < b.title ? -1 : 0) : [];\n  }\n}\n\nfunction createScheduleManager(persistedStorage: Database) {\n  return new ScheduleService(persistedStorage);\n}\n\nexport default createScheduleManager;\n","import { Attachment, Database } from '../types';\n\nclass AttachmentService {\n  private storage: Database;\n\n  constructor(database: Database) {\n    this.storage = database;\n  }\n\n  async addAttachment(attachment: Attachment) {\n    return this.storage.push('attachments', attachment);\n  }\n\n  async removeAttachment(_id: firebase.database.Reference) {\n    return this.storage.delete('attachments', _id);\n  }\n\n  async updateAttachment(_id: firebase.database.Reference, newAttachment: Attachment) {\n    return this.storage.write(`attachments/${_id}`, newAttachment);\n  }\n\n  async getAllAttachments(): Promise<Attachment[]> {\n    return this._alphabetize(await this.storage.findAll('attachments'));\n  }\n\n  onAttachmentsChanged(cb: (attachments: Attachment[]) => void) {\n    this.storage.onChange('attachments', data => cb(this._alphabetize(data)));\n  }\n\n  _alphabetize(attachments: Attachment[]) {\n    return attachments ? attachments.sort((a, b) => a.title > b.title ? 1 : a.title < b.title ? -1 : 0) : [];\n  }\n}\n\nfunction createAttachmentManager(persistedStorage: Database) {\n  return new AttachmentService(persistedStorage);\n}\n\nexport default createAttachmentManager;\n","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/storage';\n\nimport { Database, FirebaseConfig } from '../types';\nimport { convertJsonToArrayWithIds } from '../util';\n\nclass FirebaseManager implements Database {\n  db: firebase.database.Database;\n  storage: firebase.storage.Storage;\n\n  constructor(config: FirebaseConfig) {\n    const app = firebase.initializeApp(config);\n    this.db = app.database();\n    this.storage = app.storage();\n  }\n\n  async read(path: string) {\n    return this.db\n      .ref(path)\n      .once('value')\n      .then(s => s.val());\n  }\n\n  async write(path: string, data: any) {\n    return this.db.ref(path).set(data);\n  }\n\n  async push(basePath: string, data: any) {\n    return this.db.ref(basePath).push(data);\n  }\n\n  /** Gets all documents with their id's in collection */\n  async findAll(path: string) {\n    return this.db.ref(path).once('value')\n    .then(s => s.val() || {}).then(convertJsonToArrayWithIds)\n  }\n\n  async delete(path: string, _id: firebase.database.Reference) {\n    return this.db.ref(`${path}/${_id}`).remove();\n  }\n\n  onChange(path: string, cb: (data: any) => void) {\n    this.db.ref(path).on('value', (s) => cb(convertJsonToArrayWithIds(s.val())));\n  }\n\n}\n\nfunction createFirebaseDbManager(config: FirebaseConfig) {\n  return new FirebaseManager(config);\n}\n\nexport default createFirebaseDbManager;\n","import { Form, Database } from '../types';\n\nclass FormService {\n  private storage: Database;\n\n  constructor(database: Database) {\n    this.storage = database;\n  }\n\n  async addForm(form: Form) {\n    return this.storage.push('tehillim', form);\n  }\n\n  async removeForm(_id: firebase.database.Reference) {\n    return this.storage.delete('tehillim', _id);\n  }\n\n  async updateForm(_id: firebase.database.Reference, newForm: Form) {\n    return this.storage.write(`tehillim/${_id}`, newForm);\n  }\n\n  async getAllForms(): Promise<Form[]> {\n    return this._alphabetize(await this.storage.findAll('tehillim'));\n  }\n\n  onFormsChanged(cb: (tehillim: Form[]) => void) {\n    this.storage.onChange('tehillim', data => cb(this._alphabetize(data)));\n  }\n\n  _alphabetize(tehillim: Form[]) {\n    return tehillim ? tehillim.sort((a, b) => a.firstName > b.firstName ? 1 : a.firstName < b.firstName ? -1 : 0) : [];\n  }\n}\n\nfunction createFormManager(persistedStorage: Database) {\n  return new FormService(persistedStorage);\n}\n\nexport default createFormManager;\n","import { FirebaseConfig } from '../types';\n\nimport createScheduleManager from './ScheduleService';\nimport createAttachmentManager from './AttachmentService';\nimport createFirebaseDbManager from './DatabaseService';\nimport createFormManager from './FormService';\n\nconst firebaseConfig: FirebaseConfig = {\n  apiKey: \"AIzaSyDUNiNW3dfplmHAq65wfKIGGSHS8MGXgzM\",\n  authDomain: \"sca-rab-schedules.firebaseapp.com\",\n  databaseURL: \"https://sca-rab-schedules.firebaseio.com\",\n  projectId: \"sca-rab-schedules\",\n  storageBucket: \"sca-rab-schedules.appspot.com\",\n  messagingSenderId: \"893196040077\",\n  appId: \"1:893196040077:web:75ee18b5d771028f616fc4\"\n}\n\nconst database = createFirebaseDbManager(firebaseConfig);\nconst scheduleManager = createScheduleManager(database);\nconst attachmentManager = createAttachmentManager(database);\nconst formManager = createFormManager(database);\n\nexport { database, scheduleManager, attachmentManager, formManager };\n","import React, { useState, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport FileUploader from 'react-firebase-file-uploader';\nimport { database } from '../../service/index';\nimport spinner from '../assets/spinner.gif';\n\ninterface ImageDropBoxProps {\n  onImageDropped: (image: string) => void;\n  currentImage?: string;\n}\nconst ImageDropBox: React.FC<ImageDropBoxProps> = ({\n  onImageDropped,\n  currentImage,\n}) => {\n  const [previewImage, setPreviewImage] = useState(currentImage);\n\n  useEffect(() => setPreviewImage(currentImage), [currentImage]);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: (files: File[]) => {\n      const file = files[0];\n      const imageExt = /^([a-zA-Z0-9\\s_\\\\.\\-:])+(.jpg|.jpeg|.png)$/;\n      if (!imageExt.test(file.name.toLowerCase())) {\n        return alert(\n          'Only files with .jpg or .jpeg or .png extensions are allowed here.',\n        );\n      }\n      /* convertImageFileToBase64Str(file).then(base64URL => {\n        setPreviewImage(base64URL as string);\n        onImageDropped(base64URL as string);\n      }); */\n    },\n  });\n\n  const handleUploadStart = (file) => {\n    setPreviewImage(spinner as string);\n  };\n\n  const handleUploadSuccess = (file) => {\n    database\n      .storage\n      .ref(\"/logos\")\n      .child(file)\n      .getDownloadURL()\n      .then(url => {\n        setPreviewImage(url as string);\n        onImageDropped(url as string);\n      });\n  };\n\n  return (\n    <div className=\"image-dropper mt-2\">\n      <form>\n        <FileUploader\n          accept=\"image/*\"\n          randomizeFilename\n          storageRef={database.storage.ref(\"/logos\")}\n          metadata={{cacheControl: 'max-age=2592000'}}\n          onUploadStart={handleUploadStart}\n          onUploadSuccess={handleUploadSuccess}\n          id=\"image-drop\"\n        />\n        <label htmlFor=\"image-drop\">\n          <p>\n            Drop logo here\n            <br />\n            (or click to choose file)\n          </p>\n        </label>\n      </form>\n      {!!previewImage && <img src={previewImage} className=\"logo\" />}\n    </div>\n  );\n};\n\nexport default ImageDropBox;\n","import React from 'react';\n\nimport moment from 'moment';\nimport * as linkify from 'linkifyjs';\nimport { Schedule } from '../../types';\nimport { excludeFilterDataFrameRows, filterDataFrameRows, getColumnIdxOfKey } from '../../util';\n\ninterface SmartTextProps {\n  input: string;\n}\n/** If input contains a link, SmartText will replace it with a clickable ancor tag */\nconst SmartText: React.FC<SmartTextProps> = ({ input }) => {\n  const urls = linkify.find(input);\n  if (urls.length === 0) {\n    return <p>{input}</p>;\n  }\n  const { value, type } = urls[0];\n  return <a href={value} className={value.includes('zoom') && type === 'url' ? 'zoomIcon' : value.includes('gotomeeting') && type === 'url' ? 'gtmIcon' : ''}>{type === 'url' ? 'Click here' : value}</a>;\n};\n\ninterface LiveItemsProps {\n  schedules: Schedule[];\n  filter?: {\n    type: string;\n    match: string;\n  };\n  heading: string;\n}\n\nconst LiveItems: React.FC<LiveItemsProps> = ({\n  schedules,\n  filter,\n  heading,\n}) => {\n  const rows = [];\n  schedules.forEach(schedule => {\n    const filteredRows =\n      filter?.match === 'minyan'\n        ? filterDataFrameRows(filter.type, filter.match, schedule.rows)\n        : excludeFilterDataFrameRows('type', 'minyan', schedule.rows);\n    rows.push(...filteredRows);\n  });\n  const headerRows = rows[0];\n\n  if (rows.length < 2) {\n    // No rows matched the filter criteria\n    return null;\n  }\n\n  const dayIdx = headerRows.findIndex(data => data.includes('Days'))\n  const timeIdx = headerRows.findIndex(data => data.includes('Time'))\n\n  const filteredCols = headerRows.reduce((acc, cur, idx) => {\n    if (cur.toString().toLowerCase().startsWith('hide') || cur.toString().toLowerCase().startsWith('days')) {\n      acc.push(idx)\n    }\n    return acc;\n  }, []);\n\n  const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  const now = new Date();\n\n  const filteredByDay = rows.filter(row => {\n    let flag = false;\n    const rowDays = row[dayIdx];\n    if (rowDays.includes('Daily')) {\n      flag = true;\n    } else if (rowDays.includes(days[now.getDay()])) {\n      flag = true;\n    } else if (rowDays.includes('-')) {\n      const rowDaysArr = rowDays.split(/[^\\w-]/);\n      rowDaysArr.forEach(rowDay => {\n        if (rowDay.includes('-')) {\n          const leftRight = rowDay.split('-');\n          const left = days.findIndex(v => {\n            return leftRight[0].includes(v);\n          });\n          const right = days.findIndex(v => {\n            return leftRight[1].includes(v);\n          });\n          if (left < now.getDay() && right > now.getDay()) {\n            flag = true;\n          }\n        }\n      });\n    }\n    return flag;\n  });\n\n  const live = [];\n  const elapsed = [];\n  const upcoming = [];\n\n  filteredByDay.forEach(row => {\n    const rowTimes = row[timeIdx].match(/\\d\\d?:\\d\\d ?(?:[AP]M)?/g);\n    if (!rowTimes) return false;\n    if (\n      !rowTimes[0].toLowerCase().includes('pm') &&\n      row[3].toLowerCase().includes('pm')\n    ) {\n      rowTimes[0] += ' pm';\n    }\n    const startTime = moment(rowTimes[0], 'h:mm:ss a');\n    const endTime =\n      rowTimes.length > 1\n        ? moment(rowTimes[1], 'h:mm:ss a')\n        : moment(startTime).add(1, 'h');\n    startTime.subtract(10, 'm');\n\n    if (moment(now).isBetween(startTime, endTime, null, '[)')) {\n      live.push(row);\n    } else if (moment(now).isSameOrAfter(endTime)) {\n      elapsed.push(row);\n    } else if (moment(now).isBefore(startTime)) {\n      upcoming.push(row);\n    }\n  });\n\n  return (\n    <div className=\"schedule-card my-5\">\n      {\n        (() => (\n          live.length > 0 &&\n          <>\n            <div className=\"card-header row\">\n              <h1 className=\"schedule-title\">Ongoing {heading}</h1>\n            </div>\n            <table className=\"table table-striped table-bordered table-hover shadow\">\n              <thead className=\"text-light\">\n                <tr>\n                  {headerRows.map((col, idx) => {\n                    if (!filteredCols.includes(idx)) {\n                      return <th key={idx}>{col}</th>\n                    }\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {live.map((row, rowId) => (\n                  <tr key={rowId}>\n                    {row.map((cell, cellId) => {\n                      if (!filteredCols.includes(cellId)) {\n                        return <td key={cellId}>\n                          <SmartText input={cell} />\n                        </td>\n                      }\n                    })}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </>\n        ))()\n      }\n      {\n        (() => (\n          upcoming.length > 0 &&\n          <>\n            <div className=\"card-header row\">\n              <h1 className=\"schedule-title\">Upcoming {heading}</h1>\n            </div>\n            <table className=\"table table-striped table-bordered table-hover shadow\">\n              <thead className=\"text-light\">\n                <tr>\n                  {headerRows.map((col, idx) => {\n                    if (!filteredCols.includes(idx)) {\n                      return <th key={idx}>{col}</th>\n                    }\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {upcoming.map((row, rowId) => (\n                  <tr key={rowId}>\n                    {row.map((cell, cellId) => {\n                      if (!filteredCols.includes(cellId)) {\n                        return <td key={cellId}>\n                          <SmartText input={cell} />\n                        </td>\n                      }\n                    })}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </>\n        ))()\n      }\n\n      {\n        (() => (\n          elapsed.length > 0 &&\n          <>\n            <div className=\"card-header row\">\n              <h1 className=\"schedule-title\">Completed {heading}</h1>\n            </div>\n            <table className=\"table table-striped table-bordered table-hover shadow\">\n              <thead className=\"text-light\">\n                <tr>\n                  {headerRows.map((col, idx) => {\n                    if (!filteredCols.includes(idx)) {\n                      return <th key={idx}>{col}</th>\n                    }\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {elapsed.map((row, rowId) => (\n                  <tr key={rowId}>\n                    {row.map((cell, cellId) => {\n                      if (!filteredCols.includes(cellId)) {\n                        return <td key={cellId}>\n                          <SmartText input={cell} />\n                        </td>\n                      }\n                    })}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </>\n        ))()\n      }\n\n    </div>\n  );\n};\n\nexport default LiveItems;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { mainRoutes } from '../../AppNavigator';\nimport SCALogo from '../assets/SCALogo.png';\n\nconst Header: React.FC = props => {\n  const location = useLocation();\n  const pageName = mainRoutes[location.pathname]?.pageName;\n  return (\n    <>\n      <header className=\"navbar navbar-expand-lg navbar-light fixed-top bg-light shadow\">\n        <a href=\"/#\" className=\"navbar-brand\">\n          <img\n            className=\"py-0\"\n            src={SCALogo}\n            alt=\"SCA\"\n            height=\"60\"\n          />\n        </a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <nav className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className={location.pathname === '/today' ? 'active nav-item' : 'nav-item'}>\n              <a className=\"nav-link\" href=\"/#/today\">Classes</a>\n            </li>\n            <li className={location.pathname === '/minyanim' ? 'active nav-item' : 'nav-item'}>\n              <a className=\"nav-link\" href=\"/#/minyanim\">Minyanim</a>\n            </li>\n            <li className={location.pathname === '/letters' ? 'active nav-item' : 'nav-item'}>\n              <a className=\"nav-link\" href=\"/#/letters\">Letters</a>\n            </li>\n            <li className={location.pathname === '/tehillim' ? 'active nav-item' : 'nav-item'}>\n              <a className=\"nav-link\" href=\"/#/tehillim\">Tehillim Request</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"mailto:info@scaupdates.org\">Contact</a>\n            </li>\n          </ul>\n        </nav>\n      </header>\n      <div className=\"header-spacing\"></div>\n      <h5 className=\"w-100 text-center header-title my-5\">\n        {pageName ? pageName : ''}\n      </h5>\n    </>\n  );\n};\n\nexport default Header;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { ScheduleCard, LiveItems } from '../components';\n\nimport { Schedule } from '../../types';\nimport { getColumnIdxOfKey } from '../../util';\nimport { useLocation } from 'react-router-dom';\n\ninterface ClassesScreenProps {\n  schedules: Schedule[];\n}\n\nconst ClassesScreen: React.FC<ClassesScreenProps> = ({ schedules }) => {\n  const [filterType, setfilterType] = useState<string>('none');\n  const [filterVal, setFilterVal] = useState<string>('');\n  const [heading, setHeading] = useState<string>('Classes');\n  const location = useLocation();\n\n  const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  useEffect(() => {\n    if (location.pathname === '/minyanim') {\n      setHeading('Minyanim');\n      setfilterType('type');\n      setFilterVal('minyan');\n    } else if (location.pathname === '/today') {\n      const now = new Date();\n      const today = days[now.getDay()]\n      setfilterType('day');\n      setFilterVal(today);\n    } else if (location.pathname === '/bekhorot') {\n      setHeading('Siyum Bekhorot');\n      setfilterType('type');\n      setFilterVal('siyum bekhorot');\n    }\n  }, [location.pathname]);\n\n  const calcAvailableTimes = useCallback(() => {\n    const validTime = /\\d\\d?:\\d\\d ([AP]M)/;\n    let times = [];\n    schedules.forEach(({ rows }) => {\n      const idxOfTime = getColumnIdxOfKey(rows, 'time');\n      const moreTimes = rows\n        .map(row => row[idxOfTime])\n        .filter(time => validTime.test(time))\n        .map(time => time.match(validTime)[0]);\n      times = times.concat(moreTimes);\n    });\n    return Array.from(new Set(times)).sort((a, b) => {\n      const _a = new Date('1970/01/01 ' + a);\n      const _b = new Date('1970/01/01 ' + b);\n      return _a > _b ? 1 : _a < _b ? -1 : 0;\n    });\n  }, [schedules]);\n\n  const calcTeachers = useCallback(() => {\n    let teachers = [];\n    schedules.forEach(({ rows }) => {\n      const idxOfTime = getColumnIdxOfKey(rows, 'teacher');\n      const moreTimes = rows\n        .map(row => row[idxOfTime]);\n      teachers = teachers.concat(moreTimes);\n    });\n    return Array.from(new Set(teachers)).sort();\n  }, [schedules]);\n\n  return (\n    <>\n      {\n        (() => (\n          location.pathname !== '/minyanim' &&\n          <div className=\"container\">\n            <div className=\"row\">\n              <ul className=\"nav nav-pills nav-justified m-3 w-100\">\n                <li className=\"nav-item\">\n                  <a href=\"/#/today\" className={location.pathname === '/today' ? 'nav-link active' : 'nav-link'}>Today's Classes</a>\n                </li>\n                <li className=\"nav-item\">\n                  <a href=\"/#/bekhorot\" className={location.pathname === '/bekhorot' ? 'nav-link active' : 'nav-link'}>Siyum Bekhorot</a>\n                </li>\n                <li className=\"nav-item\">\n                  <a href=\"/#/classes\" className={location.pathname === '/classes' ? 'nav-link active' : 'nav-link'}>Full Schedule</a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        ))()\n      }\n      <div className=\"container\">\n        {\n          (() => (\n            location.pathname === '/today' &&\n            <LiveItems\n              schedules={schedules}\n              filter={\n                !(filterType === 'none' || filterVal === '') && {\n                  type: filterType,\n                  match: filterVal,\n                }\n              }\n              heading={heading}\n            />\n          ))()\n        }\n      </div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"input-group mt-3 mx-3\">\n            <label\n              htmlFor=\"filter\"\n              className={\n                location.pathname === '/classes' ? 'header-title' : 'hidden'\n              }>\n              Filter By:{' '}\n              <select\n                name=\"filter\"\n                onChange={e => {\n                  setfilterType(e.target.value);\n                  setFilterVal('');\n                }}\n                id=\"\"\n                value={filterType}>\n                <option value=\"none\">No filter</option>\n                <option value=\"time\">Time of day</option>\n                <option value=\"day\">Day of week</option>\n                <option value=\"topic\">Topic</option>\n                <option value=\"teacher\">Teacher</option>\n              </select>\n              {filterType !== 'none' &&\n                (filterType === 'day' ? (\n                  <select\n                    className=\"ml-2\"\n                    onChange={e => setFilterVal(e.target.value)}>\n                    <option value=\"\">Choose Day</option>\n                    <option value=\"mon\">Mon</option>\n                    <option value=\"tues\">Tues</option>\n                    <option value=\"wed\">Wed</option>\n                    <option value=\"thurs\">Thurs</option>\n                    <option value=\"fri\">Fri</option>\n                    <option value=\"sun\">Sun</option>\n                  </select>\n                ) : filterType === 'time' ? (\n                  <select\n                    className=\"ml-2\"\n                    onChange={e => setFilterVal(e.target.value.toLowerCase())}>\n                    <option value=\"\">Choose Time</option>\n                    {calcAvailableTimes().map(time => (\n                      <option value={time}>{time}</option>\n                    ))}\n                  </select>\n                ) : filterType === 'teacher' ? (\n                  <select\n                    className=\"ml-2\"\n                    onChange={e => setFilterVal(e.target.value.toLowerCase())}>\n                    <option value=\"\">Choose Teacher</option>\n                    {calcTeachers().map(time => (\n                      <option value={time}>{time}</option>\n                    ))}\n                  </select>\n                ) : (\n                      <input\n                        type=\"text\"\n                        className=\"ml-2\"\n                        onChange={e => setFilterVal(e.target.value.toLowerCase())}\n                        placeholder={`Enter ${filterType}(s)`}\n                      />\n                    ))}\n            </label>\n          </div>\n        </div>\n        {location.pathname !== '/today' && schedules.map((schedule, idx) => {\n          return (\n            <ScheduleCard\n              key={idx}\n              schedule={schedule}\n              filter={\n                !(filterType === 'none' || filterVal === '') && {\n                  type: filterType,\n                  match: filterVal,\n                }\n              }\n            />\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default ClassesScreen;\n","import React, { useState, useEffect } from 'react';\n\nimport { SpreadSheetDropBox, ImageDropBox } from '../components';\nimport { Schedule, DataFrame } from '../../types';\n\ninterface SchedulePreviewItemProps {\n  schedule: Schedule;\n  isEditing: boolean;\n  onUpdateBtnPressed: () => void;\n  onDeleteBtnPressed: () => void;\n}\nconst SchedulePreviewItem: React.FC<SchedulePreviewItemProps> = ({\n  schedule,\n  isEditing,\n  onUpdateBtnPressed,\n  onDeleteBtnPressed,\n}) => (\n  <li className=\"list-group-item d-flex justify-content-between my-2\">\n    <h3>{schedule.title}</h3>\n\n    {isEditing ? (\n      <button className=\"btn btn-danger m-1\" onClick={onDeleteBtnPressed}>\n        x\n      </button>\n    ) : (\n      <button className=\"btn btn-warning\" onClick={onUpdateBtnPressed}>\n        <i className=\"fas fa-edit text-light\"></i>\n      </button>\n    )}\n  </li>\n);\n\ninterface AdminScreenProps {\n  schedules: Schedule[];\n  createSchedule: (\n    newSchedule: Schedule,\n  ) => Promise<firebase.database.Reference> | void;\n  deleteSchedule: (_id: firebase.database.Reference) => Promise<boolean>;\n  updateSchedule: (\n    _id: firebase.database.Reference,\n    updatedSchedule: Schedule,\n  ) => Promise<boolean>;\n}\n\nconst AdminScreen: React.FC<AdminScreenProps> = ({\n  schedules,\n  createSchedule,\n  deleteSchedule,\n  updateSchedule,\n}) => {\n  const [scheduleBeingEdited, setScheduleBeingEdited] = useState<Schedule>(\n    undefined,\n  );\n  const updateScheduleBeingEdited = updates =>\n    setScheduleBeingEdited({ ...scheduleBeingEdited, ...updates });\n\n  const onSaveBtnPressed = () => {\n    const { title, rows, logo } = scheduleBeingEdited;\n    const newSchedule = { title, rows, logo };\n    if (!newSchedule.logo) {\n      newSchedule.logo = '';\n    }\n    if (scheduleBeingEdited._id) {\n      updateSchedule(scheduleBeingEdited._id, newSchedule);\n    } else {\n      createSchedule(newSchedule);\n    }\n    setScheduleBeingEdited(undefined);\n  };\n\n  useEffect(() => {\n    console.log(scheduleBeingEdited);\n  }, [scheduleBeingEdited]);\n  return (\n    <div className=\"admin-page-container\">\n      <div className=\"schedule-manager-widget row mt-5 py-5\">\n        <div className=\"col scroll-content\">\n          {schedules.map((schedule, idx) => (\n            <SchedulePreviewItem\n              key={idx}\n              schedule={schedule}\n              isEditing={scheduleBeingEdited?._id === schedule._id}\n              onUpdateBtnPressed={() => setScheduleBeingEdited(schedule)}\n              onDeleteBtnPressed={() => deleteSchedule(schedule._id)}\n            />\n          ))}\n        </div>\n        <div className=\"col schedule-upload-container\">\n          <div className=\"text-center\">\n            <h3 className=\"text-light\">\n              {!!scheduleBeingEdited\n                ? 'Update Schedule:'\n                : 'Upload Schedule Here:'}\n            </h3>\n          </div>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Schedule Title\"\n            value={scheduleBeingEdited?.title || ''}\n            onChange={e => updateScheduleBeingEdited({ title: e.target.value })}\n          />\n          <ImageDropBox\n            onImageDropped={logo => updateScheduleBeingEdited({ logo })}\n            currentImage={scheduleBeingEdited?.logo}\n          />\n          <SpreadSheetDropBox\n            onSpreadSheetDropped={rows => updateScheduleBeingEdited({ rows })}\n            currentSpreadSheet={scheduleBeingEdited?.rows}\n          />\n\n          <button className=\"btn btn-success\" onClick={onSaveBtnPressed}>\n            {scheduleBeingEdited?._id ? 'Save updates' : 'Upload Schedule'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminScreen;\n","import React, { useState } from 'react';\nimport { AttachmentCard } from '../components';\n\nimport { Attachment } from '../../types';\n\ninterface AttachmentScreenProps {\n  attachments: Attachment[];\n}\n\nconst AttachmentScreen: React.FC<AttachmentScreenProps> = ({ attachments }) => {\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row align-items-stretch\">\n          {attachments.map((attachment, idx) => {\n            return (\n              <AttachmentCard\n                key={idx}\n                attachment={attachment}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AttachmentScreen;\n","import React, { useState, useEffect } from 'react';\n\nimport { ImageDropBox } from '../components';\nimport { Attachment } from '../../types';\nimport FileUploader from 'react-firebase-file-uploader';\nimport { database } from '../../service/index';\nimport spinner from '../assets/spinner.gif';\n\ninterface AttachmentPreviewItemProps {\n  attachment: Attachment;\n  isEditing: boolean;\n  onUpdateBtnPressed: () => void;\n  onDeleteBtnPressed: () => void;\n}\nconst AttachmentPreviewItem: React.FC<AttachmentPreviewItemProps> = ({\n  attachment,\n  isEditing,\n  onUpdateBtnPressed,\n  onDeleteBtnPressed,\n}) => (\n  <li className=\"list-group-item d-flex justify-content-between my-2\">\n    <h3>{attachment.title}</h3>\n\n    {isEditing ? (\n      <button className=\"btn btn-danger m-1\" onClick={onDeleteBtnPressed}>\n        x\n      </button>\n    ) : (\n      <button className=\"btn btn-warning\" onClick={onUpdateBtnPressed}>\n        <i className=\"fas fa-edit text-light\"></i>\n      </button>\n    )}\n  </li>\n);\n\ninterface AttachmentsAdminScreenProps {\n  attachments: Attachment[];\n  createAttachment: (\n    newAttachment: Attachment,\n  ) => Promise<firebase.database.Reference> | void;\n  deleteAttachment: (_id: firebase.database.Reference) => Promise<boolean>;\n  updateAttachment: (\n    _id: firebase.database.Reference,\n    updatedAttachment: Attachment,\n  ) => Promise<boolean>;\n}\n\nconst AdminScreen: React.FC<AttachmentsAdminScreenProps> = ({\n  attachments,\n  createAttachment,\n  deleteAttachment,\n  updateAttachment,\n}) => {\n  const [attachmentBeingEdited, setAttachmentBeingEdited] = useState<Attachment>(\n    undefined,\n  );\n  const updateAttachmentBeingEdited = updates =>\n  setAttachmentBeingEdited({ ...attachmentBeingEdited, ...updates });\n  let uploading = false;\n\n  const onSaveBtnPressed = () => {\n    const { title, file, cover, body } = attachmentBeingEdited;\n    const newAttachment = { title, file, cover: cover || '', body: body || ''};\n    if (attachmentBeingEdited._id) {\n      updateAttachment(attachmentBeingEdited._id, newAttachment);\n    } else {\n      createAttachment(newAttachment);\n    }\n    setAttachmentBeingEdited(undefined);\n  };\n\n  const handleUploadSuccess = (file) => {\n    database\n      .storage\n      .ref(\"/attachments\")\n      .child(file)\n      .getDownloadURL()\n      .then(url => {\n        updateAttachmentBeingEdited({file: url as string});\n        uploading = false;\n      });\n  };\n\n  const handleUploadStart = (file) => {\n    uploading = true;\n  };\n\n  useEffect(() => {\n    console.log(attachmentBeingEdited);\n  }, [attachmentBeingEdited]);\n  return (\n    <div className=\"admin-page-container\">\n      <div className=\"schedule-manager-widget row mt-5 py-5\">\n        <div className=\"col scroll-content\">\n          {attachments.map((attachment, idx) => (\n            <AttachmentPreviewItem\n              key={idx}\n              attachment={attachment}\n              isEditing={attachmentBeingEdited?._id === attachment._id}\n              onUpdateBtnPressed={() => setAttachmentBeingEdited(attachment)}\n              onDeleteBtnPressed={() => deleteAttachment(attachment._id)}\n            />\n          ))}\n        </div>\n        <div className=\"col schedule-upload-container\">\n          <div className=\"text-center\">\n            <h3 className=\"text-light\">\n              {!!attachmentBeingEdited\n                ? 'Update Attachment:'\n                : 'Upload Attachment Here:'}\n            </h3>\n          </div>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Attachment Title\"\n            value={attachmentBeingEdited?.title || ''}\n            onChange={e => updateAttachmentBeingEdited({ title: e.target.value })}\n          />\n          <ImageDropBox\n            onImageDropped={cover => updateAttachmentBeingEdited({ cover })}\n            currentImage={attachmentBeingEdited?.cover}\n          />\n          \n          <div className=\"image-dropper mt-2\">\n            <form>\n              <FileUploader\n                randomizeFilename\n                metadata={{cacheControl: 'max-age=2592000'}}\n                storageRef={database.storage.ref(\"/attachments\")}\n                onUploadStart={handleUploadStart}\n                onUploadSuccess={handleUploadSuccess}\n                id=\"file-drop\"\n              />\n              <label htmlFor=\"file-drop\">\n                <p>\n                  Drop attachment here\n                  <br />\n                  (or click to choose file)\n                </p>\n              </label>\n            </form>\n            {!!uploading && <img src={spinner} />}\n            {!!attachmentBeingEdited?.file && <a href={attachmentBeingEdited.file} target=\"_blank\">Preview</a>}\n          </div>\n\n          <textarea\n            className=\"form-control mt-2\"\n            placeholder=\"Caption\"\n            value={attachmentBeingEdited?.body || ''}\n            onChange={e => updateAttachmentBeingEdited({ body: e.target.value })}\n          />\n\n          <button className=\"btn btn-success mt-2\" onClick={onSaveBtnPressed}>\n            {attachmentBeingEdited?._id ? 'Save updates' : 'Upload Attachment'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminScreen;\n","import React, { useState, useEffect } from 'react';\n\nimport { Form } from '../../types';\nimport { database } from '../../service/index';\n\ninterface FormScreenProps {\n  forms: Form[];\n}\n\nconst FormScreen: React.FC<FormScreenProps> = ({ forms }) => {\n  const [firstName, setFirstName] = useState<string>('');\n  const [benbat, setBenbat] = useState<string>('');\n  const [mothersName, setMothersName] = useState<string>('');\n  const [formMessage, setFormMessage] = useState<string>('');\n\n  const success = (e) => {\n    setFirstName('');\n    setBenbat('');\n    setMothersName('');\n    setFormMessage('Submitted!');\n    setTimeout(() => {\n      setFormMessage('');\n    }, 2000);\n  }\n\n  const fail = (e) => {\n    setFormMessage('Error');\n  }\n\n  const submit = (e) => {\n    e.preventDefault();\n    database.push('tehillim', {firstName, benbat, mothersName}).then(success, fail);\n  }\n  \n  return (\n    <>\n      <div className=\"container\">\n        <p>\n          We are compiling a list of those who have fallen ill to share with the community so that we may dedicate our prayers and learning in the merit of their complete and speedy recovery.\n        </p>\n        <form onSubmit={submit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"firstName\">Hebrew First Name</label>\n            <input type=\"text\" id=\"firstName\" className=\"form-control\" onChange={e => setFirstName(e.target.value)} value={firstName} required />\n          </div>\n          <div className=\"form-group\">\n            <label>Ben/Bat</label>\n            <div className=\"form-check\">\n              <input type=\"radio\" id=\"ben\" name=\"benbat\" value=\"ben\" checked={!!(benbat === 'ben')} onChange={e => e.target.checked && setBenbat(e.target.value)} required />\n              <label htmlFor=\"ben\"> Ben</label>\n            </div>\n            <div className=\"form-check\">\n              <input type=\"radio\" id=\"bat\" name=\"benbat\" value=\"bat\" checked={!!(benbat === 'bat')} onChange={e => e.target.checked && setBenbat(e.target.value)} />\n              <label htmlFor=\"bat\"> Bat</label>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"mothersName\">Mother's Hebrew Name</label>\n            <input type=\"text\" id=\"mothersName\" className=\"form-control\" onChange={e => setMothersName(e.target.value)} value={mothersName} required />\n          </div>\n          <div className=\"form-group\">\n            <button type=\"submit\" className=\"btn btn-primary btn-lg\">Submit</button>\n            {!!formMessage && (<span className=\"alert\">{formMessage}</span>)}\n          </div>\n        </form>\n      </div>\n      <div className=\"container my-5\">\n        <table className=\"table table-striped table-bordered table-hover shadow\">\n          <thead className=\"text-light\">\n            <tr>\n              <th>Please dedicate prayers and learning in the merit of their complete and speedy recovery.</th>\n            </tr>\n          </thead>\n          <tbody>\n          {forms.map((person, idx) => {\n            let hebrew = ~person.firstName.search(/[\\u0590-\\u05FF]/) && ~person.mothersName.search(/[\\u0590-\\u05FF]/);\n            let benbat = person.benbat;\n            if (hebrew) {\n              benbat = benbat === 'ben' ? 'בן' : 'בת'\n            }\n            return (\n              <tr key={idx}>\n                <td dir={hebrew && 'rtl'}>{person.firstName} {benbat} {person.mothersName}</td>\n              </tr>\n            )\n          })}\n          </tbody>\n        </table>\n      </div>\n\n    </>\n  );\n};\n\nexport default FormScreen;\n","import React from 'react';\nimport SCALogo from '../assets/SCALogo.png';\n\nconst IndexScreen: React.FC = () => {\n  return (\n    <>\n      <div className=\"container\">\n        <img\n          src={SCALogo}\n          className=\"centered-image my-3\"\n          height=\"150\"\n          alt=\"\"\n        />\n      </div>\n      <div className=\"w-100 d-flex align-items-center justify-content-center\">\n        <nav className=\"d-flex flex-column align-items-center my-3 site-nav-index\">\n          <a\n            href=\"https://www.youtube.com/playlist?list=PLS3KTNjJqUepUQ3quLa-UYoypBlfcAlcc\"\n            target=\"_blank\"\n            className=\"btn btn-secondary btn-lg my-3\">\n            Pre Pesah Day of Learning Class Recordings\n          </a>\n          <a href=\"/#/today\" className=\"btn btn-primary btn-lg my-3\">\n            Schedule of Live Classes\n          </a>\n          <a href=\"/#/minyanim\" className=\"btn btn-primary btn-lg my-3\">\n            Schedule of Live Minyanim\n          </a>\n          <a href=\"https://chat.whatsapp.com/FUQrLPQSXlZ8EeB0F1kHLJ\" className=\"btn btn-primary btn-whatsapp btn-lg my-3\">\n            Join Chat for Class Updates\n          </a>\n          <a href=\"/#/letters\" className=\"btn btn-primary btn-lg my-3\">\n            Letters to the Community\n          </a>\n          <a href=\"/#/tehillim\" className=\"btn btn-primary btn-lg my-3\">\n            Request Tehillim for Refuah\n          </a>\n          <a\n            href=\"mailto:info@scaupdates.org\"\n            className=\"btn btn-primary btn-lg my-3\">\n            Contact the SCA\n          </a>\n        </nav>\n      </div>\n    </>\n  );\n};\n\nexport default IndexScreen;\n","import React, { useEffect, useState } from 'react';\nimport { Schedule } from '../types';\nimport { ClassesScreen } from '../ui';\nimport { scheduleManager } from '../service';\n\nconst ClassesScreenCreator = () => {\n  const [schedules, setSchedules] = useState<Schedule[]>([]);\n\n  useEffect(() => {\n    scheduleManager.onSchedulesChanged(setSchedules);\n  }, []);\n\n  return <ClassesScreen schedules={schedules} />;\n};\n\nexport default ClassesScreenCreator;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport { Header } from './ui/components';\nimport {\n  ClassesScreenCreator,\n  AdminScreenCreator,\n  AttachmentsAdminScreenCreator,\n  AttachmentsScreenCreator,\n  FormScreenCreator,\n  IndexScreenCreator,\n} from './factory';\n\ninterface RouteMap {\n  [path: string]: RouteConfig;\n}\ninterface RouteConfig {\n  exact?: boolean;\n  pageName?: string; // For display purposes\n  Component: React.ComponentType;\n}\n\nconst renderRoutes = (routes: RouteMap) =>\n  Object.entries(routes).map(([path, { exact, Component }]) => (\n    <Route path={path} exact={exact} component={Component} />\n  ));\n\nexport const adminRoutes: RouteMap = {\n  '/': { exact: true, Component: AdminScreenCreator },\n  '/edit-letters': { exact: true, Component: AttachmentsAdminScreenCreator },\n};\n\nconst AdminNavigator = () => (\n  <HashRouter basename=\"/admin\">{renderRoutes(adminRoutes)}</HashRouter>\n);\n\nexport const mainRoutes: RouteMap = {\n  '/': { exact: true, Component: IndexScreenCreator, pageName: 'SCA Affiliate Synagogue'},\n  '/today': {\n    exact: true,\n    Component: ClassesScreenCreator,\n    pageName: 'SCA Affiliate Synagogue - Virtual Classes Schedules',\n  },\n  '/classes': {\n    exact: true,\n    Component: ClassesScreenCreator,\n    pageName: 'SCA Affiliate Synagogue - Virtual Classes Schedules',\n  },\n  '/minyanim': {\n    exact: true,\n    Component: ClassesScreenCreator,\n    pageName: 'SCA Affiliate Synagogue - Virtual Minyanim Schedules',\n  },\n  '/bekhorot': {\n    exact: true,\n    Component: ClassesScreenCreator,\n    pageName: 'SCA Affiliate Synagogue - Siyum Bekhorot Schedules',\n  },\n  '/letters': {\n    exact: true,\n    Component: AttachmentsScreenCreator,\n    pageName: 'COVID-19 Letters',\n  },\n  '/tehillim': {\n    exact: true,\n    Component: FormScreenCreator,\n    pageName: 'SCA Tehilim Requests',\n  },\n  '/admin': { Component: AdminNavigator },\n};\n\nconst MainNavigator = () => (\n  <HashRouter>\n    <Header />\n    {renderRoutes(mainRoutes)}\n  </HashRouter>\n);\n\nexport default MainNavigator;\n","import React, { useEffect, useState } from 'react';\n\nimport { AdminScreen } from '../ui';\nimport { scheduleManager } from '../service';\nimport { Schedule, DataFrame } from '../types';\n\nconst AdminScreenCreator = () => {\n  const [currentSchedules, setCurrentSchedules] = useState<Schedule[]>([]);\n\n  useEffect(() => {\n    scheduleManager.onSchedulesChanged(setCurrentSchedules);\n  }, []);\n\n  const uploadSchedule = schedule => {\n    if (!schedule.rows) {\n      return alert('Please upload a spreadsheet first');\n    }\n    if (!schedule.title) {\n      return alert('Please enter the title of this table');\n    }\n    return scheduleManager.addSchedule(schedule);\n  };\n\n  const removeSchedule = _id => {\n    return scheduleManager.removeSchedule(_id);\n  };\n\n  const updateSchedule = (_id, updatedSchedule) => {\n    return scheduleManager.updateSchedule(_id, updatedSchedule);\n  };\n\n  return (\n    <AdminScreen\n      schedules={currentSchedules}\n      createSchedule={uploadSchedule}\n      updateSchedule={updateSchedule}\n      deleteSchedule={removeSchedule}\n    />\n  );\n};\n\nexport default AdminScreenCreator;\n","import React, { useEffect, useState } from 'react';\n\nimport { AttachmentsAdminScreen } from '../ui';\nimport { attachmentManager } from '../service';\nimport { Attachment } from '../types';\n\nconst AttachmentsAdminScreenCreator = () => {\n  const [currentAttachments, setCurrentAttachments] = useState<Attachment[]>([]);\n\n  useEffect(() => {\n    attachmentManager.onAttachmentsChanged(setCurrentAttachments);\n  }, []);\n\n  const uploadAttachment = attachment => {\n    if (!attachment.file) {\n      return alert('Please upload an attachment first');\n    }\n    if (!attachment.title) {\n      return alert('Please enter the title of this table');\n    }\n    return attachmentManager.addAttachment(attachment);\n  };\n\n  const removeAttachment = _id => {\n    return attachmentManager.removeAttachment(_id);\n  };\n\n  const updateAttachment = (_id, updatedAttachment) => {\n    return attachmentManager.updateAttachment(_id, updatedAttachment);\n  };\n\n  return (\n    <AttachmentsAdminScreen\n      attachments={currentAttachments}\n      createAttachment={uploadAttachment}\n      updateAttachment={updateAttachment}\n      deleteAttachment={removeAttachment}\n    />\n  );\n};\n\nexport default AttachmentsAdminScreenCreator;\n","import React, { useEffect, useState } from 'react';\nimport { IndexScreen } from '../ui';\n\nconst IndexScreenCreator = () => {\n  return <IndexScreen />;\n};\n\nexport default IndexScreenCreator;\n","import React, { useEffect, useState } from 'react';\nimport { Attachment } from '../types';\nimport { AttachmentsScreen } from '../ui';\nimport { attachmentManager } from '../service';\n\nconst AttachmentsScreenCreator = () => {\n  const [attachments, setAttachments] = useState<Attachment[]>([]);\n\n  useEffect(() => {\n    attachmentManager.onAttachmentsChanged(setAttachments);\n  }, []);\n\n  return <AttachmentsScreen attachments={attachments} />;\n};\n\nexport default AttachmentsScreenCreator;","import React, { useEffect, useState } from 'react';\nimport { FormScreen } from '../ui';\nimport { Form } from '../types';\nimport { formManager } from '../service';\n\nconst FormScreenCreator = () => {\n  const [forms, setForms] = useState<Form[]>([]);\n\n  useEffect(() => {\n    formManager.onFormsChanged(setForms);\n  }, []);\n\n  return <FormScreen forms={forms} />;\n};\n\nexport default FormScreenCreator;\n","import React from 'react';\n\nimport AppNavigator from './AppNavigator';\n\nconst App = () => <AppNavigator />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'jquery';\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\nimport './ui/styles.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}