{"version":3,"sources":["ui/assets/spinner.gif","ui/assets/SCALogo.png","util.ts","ui/components/ScheduleCard.tsx","ui/components/AttachmentCard.tsx","ui/components/SpreadSheetDropBox.tsx","service/ScheduleService.ts","service/AttachmentService.ts","service/DatabaseService.ts","service/index.ts","ui/components/ImageDropBox.tsx","ui/components/LiveItems.tsx","ui/components/Header.tsx","ui/screens/Home.tsx","ui/screens/Admin.tsx","ui/screens/Attachments.tsx","ui/screens/AttachmentsAdmin.tsx","ui/screens/Form.tsx","ui/screens/Index.tsx","factory/HomeScreenCreator.tsx","factory/AdminScreenCreator.tsx","factory/AttachmentsScreenCreator.tsx","factory/AttachmentsAdminScreenCreator.tsx","factory/FormScreenCreator.tsx","factory/IndexScreenCreator.tsx","AppNavigator.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","cleanExcelData","d","map","rows","col","string","data","Date","moment","format","adjustExcelTime","convertJsonToArrayWithIds","obj","Object","entries","_id","val","getColumnIdxOfKey","key","colIndex","findIndex","currKey","toLowerCase","includes","undefined","SmartText","input","highlight","urls","linkify","length","className","value","type","href","ScheduleCard","schedule","filter","title","logo","filteredRows","filterType","filterVal","header","searchableColIndex","console","log","slice","row","cellText","replace","concat","filterDataFrameRows","match","filterColIdx","shouldHighlight","colText","colIdx","text","src","idx","rIdx","cIdx","AttachmentCard","attachment","file","cover","body","target","SpreadSheetDropBox","onSpreadSheetDropped","currentSpreadSheet","useState","droppedFileName","setDroppedFileName","dataRows","setDataRows","useEffect","useDropzone","onDrop","files","excelFile","test","name","alert","Promise","resolve","reader","FileReader","onload","e","result","workbook","xlsx","read","spreadSheet","Sheets","SheetNames","rowObjs","utils","sheet_to_json","keys","readAsArrayBuffer","then","getRootProps","getInputProps","isDragActive","ScheduleService","database","storage","this","push","delete","newSchedule","write","findAll","_alphabetize","cb","onChange","schedules","sort","a","b","createScheduleManager","persistedStorage","AttachmentService","newAttachment","attachments","createAttachmentManager","FirebaseManager","config","db","app","firebase","initializeApp","path","ref","once","s","set","basePath","remove","on","createFirebaseDbManager","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","scheduleManager","attachmentManager","ImageDropBox","onImageDropped","currentImage","previewImage","setPreviewImage","accept","randomizeFilename","storageRef","metadata","cacheControl","onUploadStart","spinner","onUploadSuccess","child","getDownloadURL","url","id","htmlFor","LiveItems","forEach","headerRows","days","now","filteredByTime","flag","rowDays","getDay","split","rowDay","leftRight","left","v","right","rowTimes","startTime","endTime","add","subtract","isBetween","rowId","cell","cellId","Header","props","SCALogo","alt","height","HomeScreen","setfilterType","setFilterVal","useLocation","pathname","placeholder","SchedulePreviewItem","isEditing","onUpdateBtnPressed","onDeleteBtnPressed","onClick","AdminScreen","createSchedule","deleteSchedule","updateSchedule","scheduleBeingEdited","setScheduleBeingEdited","updateScheduleBeingEdited","updates","AttachmentScreen","AttachmentPreviewItem","createAttachment","deleteAttachment","updateAttachment","attachmentBeingEdited","setAttachmentBeingEdited","updateAttachmentBeingEdited","uploading","FormScreen","firstName","setFirstName","benbat","setBenbat","mothersName","setMothersName","success","fail","onSubmit","preventDefault","required","checked","IndexScreen","HomeScreenCreator","setSchedules","onSchedulesChanged","Home","AdminScreenCreator","currentSchedules","setCurrentSchedules","Admin","addSchedule","updatedSchedule","removeSchedule","AttachmentsScreenCreator","setAttachments","onAttachmentsChanged","Attachments","AttachmentsAdminScreenCreator","currentAttachments","setCurrentAttachments","AttachmentsAdmin","addAttachment","updatedAttachment","removeAttachment","FormScreenCreator","Form","IndexScreenCreator","Index","AppNavigator","exact","component","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.094df65f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.3acec546.gif\";","module.exports = __webpack_public_path__ + \"static/media/SCALogo.b2d06419.png\";","import moment from 'moment';\nimport xlsx from 'xlsx';\n\nimport { DataFrame } from './types';\n\nexport const dataframeFromExcelFile = (excelFile: File) =>\n  new Promise<DataFrame>(resolve => {\n    var reader = new FileReader();\n\n    reader.onload = function(e) {\n      const data = e.target.result;\n      const workbook = xlsx.read(data, { type: 'array' });\n      const spreadSheet = workbook.Sheets[workbook.SheetNames[0]];\n\n      const rowObjs = xlsx.utils.sheet_to_json(spreadSheet);\n      const header = Object.keys(rowObjs[0]);\n      const rows: DataFrame = [header].concat(\n        rowObjs.map(obj => header.map(key => obj[key])),\n      );\n      resolve(cleanExcelData(rows));\n    };\n\n    reader.readAsArrayBuffer(excelFile);\n  });\n\nexport const convertImageFileToBase64Str = (image: File) => \n  new Promise<string | ArrayBuffer>(resolve => {\n    const reader = new FileReader();\n    reader.onloadend = function (e) {\n      resolve(e.target.result);\n    }\n    reader.readAsDataURL(image);\n  });\n    \n\nexport const adjustExcelTime = string => {\n    if (typeof string === 'string') return string;\n    const timeInMiliSeconds = (string - (25567 + 1)) * 86400 * 1000;\n    const fiveHours = 1000 * 60 * 60 * 5;\n    const data = new Date(timeInMiliSeconds + fiveHours);\n    return moment(data).format('LT');\n};\n\nexport const cleanExcelData = (d: DataFrame) => \n    d.map(rows => rows.map(col => adjustExcelTime(col)));\n\n\nexport const convertJsonToArrayWithIds = (obj: object) =>\n    Object.entries(obj).map(([_id, val]) => ({ _id, ...val }));\n\nexport const filterDataFrameRows = (filterType: string, filterVal: string, data: DataFrame) => {\n    const header = [...data[0]];\n    const searchableColIndex = getColumnIdxOfKey(data, filterType);\n    if (searchableColIndex === -1) { // This table doesn't have a column for specified filterType\n        return [header];\n    }\n    console.log(data);\n    const filteredRows = data.slice(1).filter(row => {\n        let cellText = row[searchableColIndex];\n        if (filterType === 'time') cellText = cellText.replace(':', '');\n        return cellText && cellText.toLowerCase().includes(filterVal.toLowerCase());\n    });\n    return [header].concat(filteredRows);\n}\n\nexport const getColumnIdxOfKey = (data: DataFrame, key: string) => {\n  const colIndex = data[0].findIndex(currKey =>\n    currKey.toLowerCase().includes(key.toLowerCase())\n  );\n  return colIndex !== -1 ? colIndex : undefined;\n}","import React from 'react';\n\nimport * as linkify from 'linkifyjs';\nimport { Schedule } from '../../types';\nimport { filterDataFrameRows } from '../../util';\nimport { findAllByDisplayValue } from '@testing-library/react';\n\ninterface ScheduleCardProps {\n  schedule: Schedule;\n  filter?: {\n    /** The column in the header to look for */\n    type: string;\n    /** The string to compare cells with */\n    match: string;\n  };\n  stringToHighlight?: string;\n}\n\ninterface SmartTextProps {\n  input: string;\n  highlight?: boolean;\n}\n/** If input contains a link, SmartText will replace it with a clickable ancor tag */\nconst SmartText: React.FC<SmartTextProps> = ({ input, highlight }) => {\n  const urls = linkify.find(input);\n  if (urls.length === 0) {\n    return <p className={highlight && 'highlight'}>{input}</p>;\n  }\n  const { value, type } = urls[0];\n  return <a href={value}>{type === 'url' ? 'Click here' : value}</a>;\n};\n\nconst ScheduleCard: React.FC<ScheduleCardProps> = ({ schedule, filter }) => {\n  const { title, rows, logo } = schedule;\n\n  const filteredRows = filter\n    ? filterDataFrameRows(filter.type, filter.match, rows)\n    : rows;\n\n  if (filteredRows.length === 1) {\n    // No rows matched the filter criteria\n    return null;\n  }\n\n  const filterColIdx =\n    filter && rows[0].findIndex(col => col.toLowerCase().includes(filter.type));\n\n  const shouldHighlight = (colText: string, colIdx) => {\n    if (filter?.match === 'minyan') {\n      return false;\n    }\n    const text = colText.toLowerCase();\n    return filterColIdx === colIdx\n      ? filter.type === 'time'\n        ? text.replace(':', '').includes(filter.match)\n        : text.includes(filter.match)\n      : false;\n  };\n\n  return (\n    <div className=\"schedule-card my-5\">\n      <div className=\"card-header\">\n        {!!logo && (\n          <div className=\"w-100\">\n            <img src={logo} className=\"logo ml-4\" />\n          </div>\n        )}\n        <h1 className=\"schedule-title\">{title}</h1>\n      </div>\n      <table className=\"table table-striped table-bordered table-hover shadow\">\n        <thead className=\"text-light\">\n          <tr>\n            {filteredRows[0].map((col, idx) => (\n              <th key={idx}>{col}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {filteredRows.slice(1).map((row, rIdx) => (\n            <tr key={rIdx}>\n              {row.map((col, cIdx) => (\n                <td key={cIdx}>\n                  <SmartText\n                    input={col}\n                    highlight={shouldHighlight(col, cIdx)}\n                  />\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ScheduleCard;\n","import React from 'react';\n\nimport { Attachment } from '../../types';\n\ninterface AttachmentCardProps {\n  attachment: Attachment;\n}\n\nconst AttachmentCard: React.FC<AttachmentCardProps> = ({ attachment }) => {\n  const { title, file, cover, body } = attachment;\n\n  return (\n    <div className=\"attachment-card my-5 col-md-4 col-sm-12\">\n      <a href={file} target=\"_blank\">\n        <div className=\"card-header\">\n          {!!cover && (\n            <div className=\"w-100\">\n              <img src={cover} className=\"attachment-cover\" />\n            </div>\n          )}\n          <h3 className=\"attachment-title\">{title}</h3>\n          <p className=\"attachment-caption\">{body}</p>\n        </div>\n      </a>\n    </div>\n  );\n};\n\nexport default AttachmentCard;\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nimport { DataFrame } from '../../types';\nimport { dataframeFromExcelFile } from '../../util';\n\nimport ScheduleCard from './ScheduleCard';\n\ninterface SpreadSheetDropBoxProps {\n  onSpreadSheetDropped: (data: DataFrame) => void;\n  currentSpreadSheet?: DataFrame;\n}\n\nconst SpreadSheetDropBox: React.FC<SpreadSheetDropBoxProps> = ({\n  onSpreadSheetDropped,\n  currentSpreadSheet,\n}) => {\n  const [droppedFileName, setDroppedFileName] = useState(undefined);\n  const [dataRows, setDataRows] = useState<DataFrame>(undefined);\n\n  useEffect(() => setDataRows(currentSpreadSheet), [currentSpreadSheet]);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: (files: File[]) => {\n      const file = files[0];\n      const excelExt = /^([a-zA-Z0-9\\s_\\\\.\\-:])+(.xls|.xlsx)$/;\n      if (!excelExt.test(file.name.toLowerCase())) {\n        return alert(\n          'Only files with .xlsx or .xls extentions are allowed here.',\n        );\n      }\n      setDroppedFileName(file.name);\n      dataframeFromExcelFile(file).then(rows => {\n        setDataRows(rows);\n        onSpreadSheetDropped(rows);\n      });\n    },\n  });\n\n  return (\n    <div {...getRootProps()} className=\"file-dropper scroll-content p-4 my-2\">\n      <input {...getInputProps()} />\n      {!droppedFileName && (\n        <p>\n          Drop excel file here\n          <br />\n          (or click to choose file)\n        </p>\n      )}\n      {!!droppedFileName && <p>{droppedFileName}</p>}\n      {!!dataRows && <ScheduleCard schedule={{ title: '', rows: dataRows }} />}\n    </div>\n  );\n};\n\nexport default SpreadSheetDropBox;\n","import { Schedule, Database } from '../types';\n\nclass ScheduleService {\n  private storage: Database;\n\n  constructor(database: Database) {\n    this.storage = database;\n  }\n\n  async addSchedule(schedule: Schedule) {\n    return this.storage.push('schedules', schedule);\n  }\n\n  async removeSchedule(_id: firebase.database.Reference) {\n    return this.storage.delete('schedules', _id);\n  }\n\n  async updateSchedule(_id: firebase.database.Reference, newSchedule: Schedule) {\n    return this.storage.write(`schedules/${_id}`, newSchedule);\n  }\n\n  async getAllSchedules(): Promise<Schedule[]> {\n    return this._alphabetize(await this.storage.findAll('schedules'));\n  }\n\n  onSchedulesChanged(cb: (schedules: Schedule[]) => void) {\n    this.storage.onChange('schedules', data => cb(this._alphabetize(data)));\n  }\n\n  _alphabetize(schedules: Schedule[]) {\n    return schedules ? schedules.sort((a, b) => a.title > b.title ? 1 : a.title < b.title ? -1 : 0) : [];\n  }\n}\n\nfunction createScheduleManager(persistedStorage: Database) {\n  return new ScheduleService(persistedStorage);\n}\n\nexport default createScheduleManager;\n","import { Attachment, Database } from '../types';\n\nclass AttachmentService {\n  private storage: Database;\n\n  constructor(database: Database) {\n    this.storage = database;\n  }\n\n  async addAttachment(attachment: Attachment) {\n    return this.storage.push('attachments', attachment);\n  }\n\n  async removeAttachment(_id: firebase.database.Reference) {\n    return this.storage.delete('attachments', _id);\n  }\n\n  async updateAttachment(_id: firebase.database.Reference, newAttachment: Attachment) {\n    return this.storage.write(`attachments/${_id}`, newAttachment);\n  }\n\n  async getAllAttachments(): Promise<Attachment[]> {\n    return this._alphabetize(await this.storage.findAll('attachments'));\n  }\n\n  onAttachmentsChanged(cb: (attachments: Attachment[]) => void) {\n    this.storage.onChange('attachments', data => cb(this._alphabetize(data)));\n  }\n\n  _alphabetize(attachments: Attachment[]) {\n    return attachments ? attachments.sort((a, b) => a.title > b.title ? 1 : a.title < b.title ? -1 : 0) : [];\n  }\n}\n\nfunction createAttachmentManager(persistedStorage: Database) {\n  return new AttachmentService(persistedStorage);\n}\n\nexport default createAttachmentManager;\n","import firebase from 'firebase';\n\nimport { Database, FirebaseConfig } from '../types';\nimport { convertJsonToArrayWithIds } from '../util';\n\nclass FirebaseManager implements Database {\n  db: firebase.database.Database;\n  storage: firebase.storage.Storage;\n\n  constructor(config: FirebaseConfig) {\n    const app = firebase.initializeApp(config);\n    this.db = app.database();\n    this.storage = app.storage();\n  }\n\n  async read(path: string) {\n    return this.db\n      .ref(path)\n      .once('value')\n      .then(s => s.val());\n  }\n\n  async write(path: string, data: any) {\n    return this.db.ref(path).set(data);\n  }\n\n  async push(basePath: string, data: any) {\n    return this.db.ref(basePath).push(data);\n  }\n\n  /** Gets all documents with their id's in collection */\n  async findAll(path: string) {\n    return this.db.ref(path).once('value')\n    .then(s => s.val() || {}).then(convertJsonToArrayWithIds)\n  }\n\n  async delete(path: string, _id: firebase.database.Reference) {\n    return this.db.ref(`${path}/${_id}`).remove();\n  }\n\n  onChange(path: string, cb: (data: any) => void) {\n    this.db.ref(path).on('value', (s) => cb(convertJsonToArrayWithIds(s.val())));\n  }\n\n}\n\nfunction createFirebaseDbManager(config: FirebaseConfig) {\n  return new FirebaseManager(config);\n}\n\nexport default createFirebaseDbManager;\n","import { FirebaseConfig } from '../types';\n\nimport createScheduleManager from './ScheduleService';\nimport createAttachmentManager from './AttachmentService';\nimport createFirebaseDbManager from './DatabaseService';\n\nconst firebaseConfig: FirebaseConfig = {\n  apiKey: \"AIzaSyDUNiNW3dfplmHAq65wfKIGGSHS8MGXgzM\",\n  authDomain: \"sca-rab-schedules.firebaseapp.com\",\n  databaseURL: \"https://sca-rab-schedules.firebaseio.com\",\n  projectId: \"sca-rab-schedules\",\n  storageBucket: \"sca-rab-schedules.appspot.com\",\n  messagingSenderId: \"893196040077\",\n  appId: \"1:893196040077:web:75ee18b5d771028f616fc4\"\n}\n\nconst database = createFirebaseDbManager(firebaseConfig);\nconst scheduleManager = createScheduleManager(database);\nconst attachmentManager = createAttachmentManager(database);\n\nexport { database, scheduleManager, attachmentManager };\n","import React, { useState, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport FileUploader from 'react-firebase-file-uploader';\nimport { database } from '../../service/index';\nimport spinner from '../assets/spinner.gif';\n\ninterface ImageDropBoxProps {\n  onImageDropped: (image: string) => void;\n  currentImage?: string;\n}\nconst ImageDropBox: React.FC<ImageDropBoxProps> = ({\n  onImageDropped,\n  currentImage,\n}) => {\n  const [previewImage, setPreviewImage] = useState(currentImage);\n\n  useEffect(() => setPreviewImage(currentImage), [currentImage]);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: (files: File[]) => {\n      const file = files[0];\n      const imageExt = /^([a-zA-Z0-9\\s_\\\\.\\-:])+(.jpg|.jpeg|.png)$/;\n      if (!imageExt.test(file.name.toLowerCase())) {\n        return alert(\n          'Only files with .jpg or .jpeg or .png extensions are allowed here.',\n        );\n      }\n      /* convertImageFileToBase64Str(file).then(base64URL => {\n        setPreviewImage(base64URL as string);\n        onImageDropped(base64URL as string);\n      }); */\n    },\n  });\n\n  const handleUploadStart = (file) => {\n    setPreviewImage(spinner as string);\n  };\n\n  const handleUploadSuccess = (file) => {\n    database\n      .storage\n      .ref(\"/logos\")\n      .child(file)\n      .getDownloadURL()\n      .then(url => {\n        setPreviewImage(url as string);\n        onImageDropped(url as string);\n      });\n  };\n\n  return (\n    <div className=\"image-dropper mt-2\">\n      <form>\n        <FileUploader\n          accept=\"image/*\"\n          randomizeFilename\n          storageRef={database.storage.ref(\"/logos\")}\n          metadata={{cacheControl: 'max-age=2592000'}}\n          onUploadStart={handleUploadStart}\n          onUploadSuccess={handleUploadSuccess}\n          id=\"image-drop\"\n        />\n        <label htmlFor=\"image-drop\">\n          <p>\n            Drop logo here\n            <br />\n            (or click to choose file)\n          </p>\n        </label>\n      </form>\n      {!!previewImage && <img src={previewImage} className=\"logo\" />}\n    </div>\n  );\n};\n\nexport default ImageDropBox;\n","import React from 'react';\n\nimport moment from 'moment';\nimport * as linkify from 'linkifyjs';\nimport { Schedule } from '../../types';\n\ninterface SmartTextProps {\n  input: string;\n}\n/** If input contains a link, SmartText will replace it with a clickable ancor tag */\nconst SmartText: React.FC<SmartTextProps> = ({ input }) => {\n  const urls = linkify.find(input);\n  if (urls.length === 0) {\n    return <p>{input}</p>;\n  }\n  const { value, type } = urls[0];\n  return <a href={value}>{type === 'url' ? 'Click here' : value}</a>;\n};\n\ninterface LiveItemsProps {\n  schedules: Schedule[];\n}\n\nconst LiveItems: React.FC<LiveItemsProps> = ({ schedules }) => {\n  const rows = [];\n  schedules.forEach(schedule => {\n    rows.push(...schedule.rows);\n  });\n  const headerRows = rows[0];\n\n  const days = [\n    \"Sun\",\n    \"Mon\",\n    \"Tue\",\n    \"Wed\",\n    \"Thu\",\n    \"Fri\",\n    \"Sat\"\n  ]\n\n  const now = new Date();\n\n  const filteredByDay = rows.filter((row) => {\n    let flag = false;\n    const rowDays = row[2];\n    if (rowDays.includes('Daily')) {\n      flag = true;\n    } else if (rowDays.includes(days[now.getDay()])) {\n      flag = true;\n    } else if (rowDays.includes('-')) {\n      const rowDaysArr = rowDays.split(/[^\\w-]/);\n      rowDaysArr.forEach(rowDay => {\n        if (rowDay.includes('-')) {\n          const leftRight = rowDay.split('-');\n          const left = days.findIndex((v) => {\n            return leftRight[0].includes(v);\n          })\n          const right = days.findIndex((v) => {\n            return leftRight[1].includes(v);\n          })\n          if (left < now.getDay() && right > now.getDay()) {\n            flag = true;\n          }\n        }\n      });\n    }\n    return flag\n  })\n\n  const filteredByTime = filteredByDay.filter(row => {\n    const rowTimes = row[3].match(/\\d\\d?:\\d\\d ?(?:[AP]M)?/g);\n    if (!rowTimes[0].toLowerCase().includes('pm') && row[3].toLowerCase().includes('pm')) {\n      rowTimes[0]+=' pm';\n    }\n    const startTime = moment(rowTimes[0], 'h:mm:ss a');\n    const endTime = rowTimes.length > 1 ? moment(rowTimes[1], 'h:mm:ss a') : moment(startTime).add(1,'h');\n    startTime.subtract(5, 'm')\n\n    return moment(now).isBetween(startTime, endTime, null, '[)')\n  })\n\n  if (!filteredByTime.length) {\n    return null;\n  }\n\n  return (\n    <div className=\"schedule-card my-5\">\n      <div className=\"card-header row\">\n        <h1 className=\"schedule-title\">Classes Going on Right Now</h1>\n      </div>\n      <table className=\"table table-striped table-bordered table-hover shadow\">\n        <thead className=\"text-light\">\n          <tr>\n            {headerRows.map((col, idx) => (\n              <th key={idx}>{col}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {filteredByTime.map((row, rowId) => (\n            <tr key={rowId}>\n              {row.map((cell, cellId) => (\n                <td key={cellId}>\n                  <SmartText\n                    input={cell}\n                  />\n                </td>\n              ))}\n            </tr>\n            )\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default LiveItems;","import React from 'react';\nimport SCALogo from '../assets/SCALogo.png';\n\nconst Header: React.FC = props => (\n  <>\n    <header className=\"navbar fixed-top bg-light shadow\">\n      <div className=\"w-100 d-flex justify-content-between\">\n        <a href=\"/#\">\n          <img\n            className=\"navbar-brand py-0\"\n            src={SCALogo}\n            alt=\"SCA\"\n            height=\"60\"\n          />\n        </a>\n      </div>\n\n      <nav className=\"site-nav w-100 d-flex my-3\">\n        <a href=\"/#/classes\">\n          Classes\n        </a>\n        <a href=\"/#/minyanim\">\n          Minyanim\n        </a>\n        <a href=\"/#/letters\">\n          Letters\n        </a>\n        <a href=\"/#/tehillim\">\n          Tehillim Request\n        </a>\n        <a href=\"mailto:info@scaupdates.org\">\n          Contact\n        </a>\n      </nav>\n\n      <h5 className=\"w-100 text-center header-title m-0\">\n        SCA Affiliate Synagogue Virtual Classes\n      </h5>\n    </header>\n    <div className=\"header-spacing\"></div>\n  </>\n);\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { ScheduleCard, LiveItems } from '../components';\n\nimport { Schedule } from '../../types';\nimport { useLocation } from 'react-router-dom';\n\ninterface HomeScreenProps {\n  schedules: Schedule[];\n}\n\nconst HomeScreen: React.FC<HomeScreenProps> = ({ schedules }) => {\n  const [filterType, setfilterType] = useState<string>('none');\n  const [filterVal, setFilterVal] = useState<string>('');\n  let location = useLocation();\n\n  if (location.pathname === '/minyanim' && filterType !== 'topic') {\n    setfilterType('topic');\n    setFilterVal('minyan');\n  }\n\n  return (\n    <>\n      {(() => {\n        if (filterVal !== 'minyan') {\n          return <div className=\"container\">\n            <LiveItems schedules={schedules} />\n          </div>\n        }\n      })()}\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"input-group mt-3\">\n            <label htmlFor=\"filter\" className={filterType === 'topic' ? 'hidden' : 'header-title'}>\n              Filter By:{' '}\n              <select\n                name=\"filter\"\n                onChange={e => setfilterType(e.target.value)}\n                id=\"\"\n                value={filterType}>\n                <option value=\"none\">No filter</option>\n                <option value=\"time\">Time of day</option>\n                <option value=\"day\">Day of week</option>\n                <option value=\"class\">Class</option>\n                <option value=\"teacher\">Teacher</option>\n              </select>\n              {filterType !== 'none' && (\n                <input\n                  type=\"text\"\n                  className=\"ml-2\"\n                  onChange={e => setFilterVal(e.target.value.toLowerCase())}\n                  placeholder={`Enter ${filterType}(s)`}\n                />\n              )}\n            </label>\n          </div>\n        </div>\n        {schedules.map((schedule, idx) => {\n          return (\n            <ScheduleCard\n              key={idx}\n              schedule={schedule}\n              filter={\n                !(filterType === 'none' || filterVal === '') && {\n                  type: filterType,\n                  match: filterVal,\n                }\n              }\n            />\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default HomeScreen;\n","import React, { useState, useEffect } from 'react';\n\nimport { SpreadSheetDropBox, ImageDropBox } from '../components';\nimport { Schedule, DataFrame } from '../../types';\n\ninterface SchedulePreviewItemProps {\n  schedule: Schedule;\n  isEditing: boolean;\n  onUpdateBtnPressed: () => void;\n  onDeleteBtnPressed: () => void;\n}\nconst SchedulePreviewItem: React.FC<SchedulePreviewItemProps> = ({\n  schedule,\n  isEditing,\n  onUpdateBtnPressed,\n  onDeleteBtnPressed,\n}) => (\n  <li className=\"list-group-item d-flex justify-content-between my-2\">\n    <h3>{schedule.title}</h3>\n\n    {isEditing ? (\n      <button className=\"btn btn-danger m-1\" onClick={onDeleteBtnPressed}>\n        x\n      </button>\n    ) : (\n      <button className=\"btn btn-warning\" onClick={onUpdateBtnPressed}>\n        <i className=\"fas fa-edit text-light\"></i>\n      </button>\n    )}\n  </li>\n);\n\ninterface AdminScreenProps {\n  schedules: Schedule[];\n  createSchedule: (\n    newSchedule: Schedule,\n  ) => Promise<firebase.database.Reference> | void;\n  deleteSchedule: (_id: firebase.database.Reference) => Promise<boolean>;\n  updateSchedule: (\n    _id: firebase.database.Reference,\n    updatedSchedule: Schedule,\n  ) => Promise<boolean>;\n}\n\nconst AdminScreen: React.FC<AdminScreenProps> = ({\n  schedules,\n  createSchedule,\n  deleteSchedule,\n  updateSchedule,\n}) => {\n  const [scheduleBeingEdited, setScheduleBeingEdited] = useState<Schedule>(\n    undefined,\n  );\n  const updateScheduleBeingEdited = updates =>\n    setScheduleBeingEdited({ ...scheduleBeingEdited, ...updates });\n\n  const onSaveBtnPressed = () => {\n    const { title, rows, logo } = scheduleBeingEdited;\n    const newSchedule = { title, rows, logo };\n    if (scheduleBeingEdited._id) {\n      updateSchedule(scheduleBeingEdited._id, newSchedule);\n    } else {\n      createSchedule(newSchedule);\n    }\n    setScheduleBeingEdited(undefined);\n  };\n\n  useEffect(() => {\n    console.log(scheduleBeingEdited);\n  }, [scheduleBeingEdited]);\n  return (\n    <div className=\"admin-page-container\">\n      <div className=\"schedule-manager-widget row mt-5 py-5\">\n        <div className=\"col scroll-content\">\n          {schedules.map((schedule, idx) => (\n            <SchedulePreviewItem\n              key={idx}\n              schedule={schedule}\n              isEditing={scheduleBeingEdited?._id === schedule._id}\n              onUpdateBtnPressed={() => setScheduleBeingEdited(schedule)}\n              onDeleteBtnPressed={() => deleteSchedule(schedule._id)}\n            />\n          ))}\n        </div>\n        <div className=\"col schedule-upload-container\">\n          <div className=\"text-center\">\n            <h3 className=\"text-light\">\n              {!!scheduleBeingEdited\n                ? 'Update Schedule:'\n                : 'Upload Schedule Here:'}\n            </h3>\n          </div>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Schedule Title\"\n            value={scheduleBeingEdited?.title || ''}\n            onChange={e => updateScheduleBeingEdited({ title: e.target.value })}\n          />\n          <ImageDropBox\n            onImageDropped={logo => updateScheduleBeingEdited({ logo })}\n            currentImage={scheduleBeingEdited?.logo}\n          />\n          <SpreadSheetDropBox\n            onSpreadSheetDropped={rows => updateScheduleBeingEdited({ rows })}\n            currentSpreadSheet={scheduleBeingEdited?.rows}\n          />\n\n          <button className=\"btn btn-success\" onClick={onSaveBtnPressed}>\n            {scheduleBeingEdited?._id ? 'Save updates' : 'Upload Schedule'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminScreen;\n","import React, { useState } from 'react';\nimport { AttachmentCard } from '../components';\n\nimport { Attachment } from '../../types';\n\ninterface AttachmentScreenProps {\n  attachments: Attachment[];\n}\n\nconst AttachmentScreen: React.FC<AttachmentScreenProps> = ({ attachments }) => {\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row\">\n          {attachments.map((attachment, idx) => {\n            return (\n              <AttachmentCard\n                key={idx}\n                attachment={attachment}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AttachmentScreen;\n","import React, { useState, useEffect } from 'react';\n\nimport { ImageDropBox } from '../components';\nimport { Attachment } from '../../types';\nimport FileUploader from 'react-firebase-file-uploader';\nimport { database } from '../../service/index';\nimport spinner from '../assets/spinner.gif';\n\ninterface AttachmentPreviewItemProps {\n  attachment: Attachment;\n  isEditing: boolean;\n  onUpdateBtnPressed: () => void;\n  onDeleteBtnPressed: () => void;\n}\nconst AttachmentPreviewItem: React.FC<AttachmentPreviewItemProps> = ({\n  attachment,\n  isEditing,\n  onUpdateBtnPressed,\n  onDeleteBtnPressed,\n}) => (\n  <li className=\"list-group-item d-flex justify-content-between my-2\">\n    <h3>{attachment.title}</h3>\n\n    {isEditing ? (\n      <button className=\"btn btn-danger m-1\" onClick={onDeleteBtnPressed}>\n        x\n      </button>\n    ) : (\n      <button className=\"btn btn-warning\" onClick={onUpdateBtnPressed}>\n        <i className=\"fas fa-edit text-light\"></i>\n      </button>\n    )}\n  </li>\n);\n\ninterface AttachmentsAdminScreenProps {\n  attachments: Attachment[];\n  createAttachment: (\n    newAttachment: Attachment,\n  ) => Promise<firebase.database.Reference> | void;\n  deleteAttachment: (_id: firebase.database.Reference) => Promise<boolean>;\n  updateAttachment: (\n    _id: firebase.database.Reference,\n    updatedAttachment: Attachment,\n  ) => Promise<boolean>;\n}\n\nconst AdminScreen: React.FC<AttachmentsAdminScreenProps> = ({\n  attachments,\n  createAttachment,\n  deleteAttachment,\n  updateAttachment,\n}) => {\n  const [attachmentBeingEdited, setAttachmentBeingEdited] = useState<Attachment>(\n    undefined,\n  );\n  const updateAttachmentBeingEdited = updates =>\n  setAttachmentBeingEdited({ ...attachmentBeingEdited, ...updates });\n  let uploading = false;\n\n  const onSaveBtnPressed = () => {\n    const { title, file, cover, body } = attachmentBeingEdited;\n    const newAttachment = { title, file, cover: cover || '', body: body || ''};\n    if (attachmentBeingEdited._id) {\n      updateAttachment(attachmentBeingEdited._id, newAttachment);\n    } else {\n      createAttachment(newAttachment);\n    }\n    setAttachmentBeingEdited(undefined);\n  };\n\n  const handleUploadSuccess = (file) => {\n    database\n      .storage\n      .ref(\"/attachments\")\n      .child(file)\n      .getDownloadURL()\n      .then(url => {\n        updateAttachmentBeingEdited({file: url as string});\n        uploading = false;\n      });\n  };\n\n  const handleUploadStart = (file) => {\n    uploading = true;\n  };\n\n  useEffect(() => {\n    console.log(attachmentBeingEdited);\n  }, [attachmentBeingEdited]);\n  return (\n    <div className=\"admin-page-container\">\n      <div className=\"schedule-manager-widget row mt-5 py-5\">\n        <div className=\"col scroll-content\">\n          {attachments.map((attachment, idx) => (\n            <AttachmentPreviewItem\n              key={idx}\n              attachment={attachment}\n              isEditing={attachmentBeingEdited?._id === attachment._id}\n              onUpdateBtnPressed={() => setAttachmentBeingEdited(attachment)}\n              onDeleteBtnPressed={() => deleteAttachment(attachment._id)}\n            />\n          ))}\n        </div>\n        <div className=\"col schedule-upload-container\">\n          <div className=\"text-center\">\n            <h3 className=\"text-light\">\n              {!!attachmentBeingEdited\n                ? 'Update Attachment:'\n                : 'Upload Attachment Here:'}\n            </h3>\n          </div>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Attachment Title\"\n            value={attachmentBeingEdited?.title || ''}\n            onChange={e => updateAttachmentBeingEdited({ title: e.target.value })}\n          />\n          <ImageDropBox\n            onImageDropped={cover => updateAttachmentBeingEdited({ cover })}\n            currentImage={attachmentBeingEdited?.cover}\n          />\n          \n          <div className=\"image-dropper mt-2\">\n            <form>\n              <FileUploader\n                randomizeFilename\n                metadata={{cacheControl: 'max-age=2592000'}}\n                storageRef={database.storage.ref(\"/attachments\")}\n                onUploadStart={handleUploadStart}\n                onUploadSuccess={handleUploadSuccess}\n                id=\"file-drop\"\n              />\n              <label htmlFor=\"file-drop\">\n                <p>\n                  Drop attachment here\n                  <br />\n                  (or click to choose file)\n                </p>\n              </label>\n            </form>\n            {!!uploading && <img src={spinner} />}\n            {!!attachmentBeingEdited?.file && <a href={attachmentBeingEdited.file} target=\"_blank\">Preview</a>}\n          </div>\n\n          <textarea\n            className=\"form-control mt-2\"\n            placeholder=\"Caption\"\n            value={attachmentBeingEdited?.body || ''}\n            onChange={e => updateAttachmentBeingEdited({ body: e.target.value })}\n          />\n\n          <button className=\"btn btn-success mt-2\" onClick={onSaveBtnPressed}>\n            {attachmentBeingEdited?._id ? 'Save updates' : 'Upload Attachment'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminScreen;\n","import React, { useState, useEffect } from 'react';\n\nimport { Form } from '../../types';\nimport { database } from '../../service/index';\n\nconst FormScreen: React.FC = () => {\n  const [firstName, setFirstName] = useState<string>('');\n  const [benbat, setBenbat] = useState<string>('');\n  const [mothersName, setMothersName] = useState<string>('');\n\n  const success = (e) => {\n    setFirstName('');\n    setBenbat('');\n    setMothersName('');\n  }\n\n  const fail = (e) => {\n    alert('fail');\n  }\n\n  const submit = (e) => {\n    e.preventDefault();\n    database.push('tehillim', {firstName, benbat, mothersName}).then(success, fail);\n  }\n  \n  return (\n    <div className=\"container\">\n      <p>\n        We are compiling a list of those who have fallen ill to share with the community so that we may dedicate our prayers and learning in the merit of their complete and speedy recovery.\n      </p>\n      <form onSubmit={submit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"firstName\">Hebrew First Name</label>\n          <input type=\"text\" id=\"firstName\" className=\"form-control\" onChange={e => setFirstName(e.target.value)} value={firstName} required />\n        </div>\n        <div className=\"form-group\">\n          <label>Ben/Bat</label>\n          <div className=\"form-check\">\n            <input type=\"radio\" id=\"ben\" name=\"benbat\" value=\"ben\" checked={!!(benbat === 'ben')} onChange={e => e.target.checked && setBenbat(e.target.value)} required />\n            <label htmlFor=\"ben\">Ben</label>\n          </div>\n          <div className=\"form-check\">\n            <input type=\"radio\" id=\"bat\" name=\"benbat\" value=\"bat\" checked={!!(benbat === 'bat')} onChange={e => e.target.checked && setBenbat(e.target.value)} />\n            <label htmlFor=\"bat\">Bat</label>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"mothersName\">Mother's Hebrew Name</label>\n          <input type=\"text\" id=\"mothersName\" className=\"form-control\" onChange={e => setMothersName(e.target.value)} value={mothersName} required />\n        </div>\n        <div className=\"form-group\">\n          <button type=\"submit\" className=\"btn btn-primary btn-lg\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default FormScreen;\n","import React from 'react';\nimport { database } from '../../service/index';\n\nconst IndexScreen: React.FC = () => {\n  return (\n    <div className=\"w-100 d-flex align-items-center justify-content-center\">\n      <nav className=\"d-flex flex-column align-items-center my-3 site-nav-index\">\n        <a href=\"/#/classes\" className=\"btn btn-primary btn-lg my-3\">\n          Schedule of Remote Classes\n        </a>\n        <a href=\"/#/minyanim\" className=\"btn btn-primary btn-lg my-3\">\n          Schedule of Remote Minyanim\n        </a>\n        <a href=\"/#/letters\" className=\"btn btn-primary btn-lg my-3\">\n          Letters to the Community\n        </a>\n        <a href=\"/#/tehillim\" className=\"btn btn-primary btn-lg my-3\">\n          Request Tehillim for Refuah\n        </a>\n        <a href=\"mailto:info@scaupdates.org\" className=\"btn btn-primary btn-lg my-3\">\n          Contact the SCA\n        </a>\n      </nav>\n    </div>\n  );\n};\n\nexport default IndexScreen;\n","import React, { useEffect, useState } from 'react';\nimport { Schedule } from '../types';\nimport { HomeScreen } from '../ui';\nimport { scheduleManager } from '../service';\n\nconst HomeScreenCreator = () => {\n  const [schedules, setSchedules] = useState<Schedule[]>([]);\n\n  useEffect(() => {\n    scheduleManager.onSchedulesChanged(setSchedules);\n  }, []);\n\n  return <HomeScreen schedules={schedules} />;\n};\n\nexport default HomeScreenCreator;\n","import React, { useEffect, useState } from 'react';\n\nimport { AdminScreen } from '../ui';\nimport { scheduleManager } from '../service';\nimport { Schedule, DataFrame } from '../types';\n\nconst AdminScreenCreator = () => {\n  const [currentSchedules, setCurrentSchedules] = useState<Schedule[]>([]);\n\n  useEffect(() => {\n    scheduleManager.onSchedulesChanged(setCurrentSchedules);\n  }, []);\n\n  const uploadSchedule = schedule => {\n    if (!schedule.rows) {\n      return alert('Please upload a spreadsheet first');\n    }\n    if (!schedule.title) {\n      return alert('Please enter the title of this table');\n    }\n    return scheduleManager.addSchedule(schedule);\n  };\n\n  const removeSchedule = _id => {\n    return scheduleManager.removeSchedule(_id);\n  };\n\n  const updateSchedule = (_id, updatedSchedule) => {\n    return scheduleManager.updateSchedule(_id, updatedSchedule);\n  };\n\n  return (\n    <AdminScreen\n      schedules={currentSchedules}\n      createSchedule={uploadSchedule}\n      updateSchedule={updateSchedule}\n      deleteSchedule={removeSchedule}\n    />\n  );\n};\n\nexport default AdminScreenCreator;\n","import React, { useEffect, useState } from 'react';\nimport { Attachment } from '../types';\nimport { AttachmentsScreen } from '../ui';\nimport { attachmentManager } from '../service';\n\nconst AttachmentsScreenCreator = () => {\n  const [attachments, setAttachments] = useState<Attachment[]>([]);\n\n  useEffect(() => {\n    attachmentManager.onAttachmentsChanged(setAttachments);\n  }, []);\n\n  return <AttachmentsScreen attachments={attachments} />;\n};\n\nexport default AttachmentsScreenCreator;","import React, { useEffect, useState } from 'react';\n\nimport { AttachmentsAdminScreen } from '../ui';\nimport { attachmentManager } from '../service';\nimport { Attachment } from '../types';\n\nconst AttachmentsAdminScreenCreator = () => {\n  const [currentAttachments, setCurrentAttachments] = useState<Attachment[]>([]);\n\n  useEffect(() => {\n    attachmentManager.onAttachmentsChanged(setCurrentAttachments);\n  }, []);\n\n  const uploadAttachment = attachment => {\n    if (!attachment.file) {\n      return alert('Please upload an attachment first');\n    }\n    if (!attachment.title) {\n      return alert('Please enter the title of this table');\n    }\n    return attachmentManager.addAttachment(attachment);\n  };\n\n  const removeAttachment = _id => {\n    return attachmentManager.removeAttachment(_id);\n  };\n\n  const updateAttachment = (_id, updatedAttachment) => {\n    return attachmentManager.updateAttachment(_id, updatedAttachment);\n  };\n\n  return (\n    <AttachmentsAdminScreen\n      attachments={currentAttachments}\n      createAttachment={uploadAttachment}\n      updateAttachment={updateAttachment}\n      deleteAttachment={removeAttachment}\n    />\n  );\n};\n\nexport default AttachmentsAdminScreenCreator;\n","import React, { useEffect, useState } from 'react';\nimport { FormScreen } from '../ui';\n\nconst FormScreenCreator = () => {\n  return <FormScreen />;\n};\n\nexport default FormScreenCreator;\n","import React, { useEffect, useState } from 'react';\nimport { IndexScreen } from '../ui';\n\nconst IndexScreenCreator = () => {\n  return <IndexScreen />;\n};\n\nexport default IndexScreenCreator;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport { HomeScreenCreator, AdminScreenCreator, AttachmentsAdminScreenCreator, AttachmentsScreenCreator, FormScreenCreator, IndexScreenCreator } from './factory';\n\nconst AppNavigator = () => (\n  <HashRouter>\n    <Route exact path=\"/\" component={IndexScreenCreator} />\n    <Route exact path=\"/classes\" component={HomeScreenCreator} />\n    <Route exact path=\"/minyanim\" component={HomeScreenCreator} />\n    <Route exact path=\"/letters\" component={AttachmentsScreenCreator} />\n    <Route exact path=\"/tehillim\" component={FormScreenCreator} />\n    <Route exact path=\"/admin\" component={AdminScreenCreator} />\n    <Route exact path=\"/admin/letters\" component={AttachmentsAdminScreenCreator} />\n  </HashRouter>\n);\n\nexport default AppNavigator;\n","import React from 'react';\n\nimport { Header } from './ui/components';\nimport AppNavigator from './AppNavigator';\nimport SCALogo from './ui/assets/SCALogo.png';\n\nconst App = () => (\n  <>\n    <Header />\n    <AppNavigator />\n  </>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './ui/styles.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}