{"version":3,"sources":["ui/assets/spinner.gif","ui/assets/SCALogo.png","ui/assets/sca-white.svg","util.ts","ui/components/ScheduleCard.tsx","ui/components/AttachmentCard.tsx","service/ScheduleService.ts","service/AttachmentService.ts","service/DatabaseService.ts","service/FormService.ts","service/index.ts","ui/components/ImageDropBox.tsx","ui/components/LiveItems.tsx","ui/components/LiveClassesCarousel.tsx","ui/components/Header.tsx","ui/components/Footer.tsx","ui/screens/Classes.tsx","ui/screens/Attachments.tsx","ui/screens/AttachmentsAdmin.tsx","ui/screens/Form.tsx","ui/screens/Index.tsx","factory/ClassesScreenCreator.tsx","AppNavigator.tsx","factory/AttachmentsAdminScreenCreator.tsx","factory/IndexScreenCreator.tsx","factory/AttachmentsScreenCreator.tsx","factory/FormScreenCreator.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","convertJsonToArrayWithIds","obj","Object","entries","map","_id","val","excludeFilterDataFrameRows","filterType","filterVal","data","header","searchableColIndex","getColumnIdxOfKey","filteredRows","slice","filter","row","cellText","toLowerCase","includes","concat","filterDataFrameRows","key","findIndex","currKey","SmartText","input","highlight","passwordCol","urls","linkify","password","length","className","value","type","href","ScheduleCard","schedule","location","useLocation","title","rows","logo","match","filteredCols","reduce","acc","cur","idx","toString","startsWith","push","filterColIdx","col","passwordColIdx","shouldHighlight","colText","colIdx","pathname","text","src","rIdx","cIdx","AttachmentCard","attachment","file","cover","body","target","ScheduleService","database","storage","this","read","scheduleRef","cb","onChange","createScheduleManager","persistedStorage","AttachmentService","delete","newAttachment","write","findAll","_alphabetize","attachments","sort","a","b","createAttachmentManager","FirebaseManager","config","db","app","firebase","initializeApp","path","ref","once","then","s","set","basePath","remove","on","createFirebaseDbManager","FormService","form","newForm","tehillim","firstName","createFormManager","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","scheduleManager","attachmentManager","formManager","ImageDropBox","onImageDropped","currentImage","useState","previewImage","setPreviewImage","useEffect","useDropzone","onDrop","files","test","name","alert","getRootProps","getInputProps","isDragActive","accept","randomizeFilename","storageRef","metadata","cacheControl","onUploadStart","spinner","onUploadSuccess","child","getDownloadURL","url","id","htmlFor","LiveItems","schedules","heading","forEach","headerRows","dayIdx","timeIdx","passwordIdx","days","now","Date","filteredByDay","flag","rowDays","getDay","split","rowDay","leftRight","left","v","right","live","elapsed","upcoming","rowTimes","startTime","moment","endTime","add","subtract","isBetween","isSameOrAfter","isBefore","rowId","cell","cellId","console","log","LiveClasses","Swiper","slidesPerView","centeredSlides","grabCursor","joinIdx","topicIdx","teacherIdx","time","topic","teacher","style","maxWidth","Header","props","pageName","mainRoutes","SCALogo","alt","height","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Footer","sca","width","ClassesScreen","setfilterType","setFilterVal","setHeading","today","calcAvailableTimes","useCallback","validTime","times","idxOfTime","moreTimes","Array","from","Set","_a","_b","calcTeachers","teachers","rel","e","placeholder","AttachmentScreen","AttachmentPreviewItem","isEditing","onUpdateBtnPressed","onDeleteBtnPressed","onClick","AdminScreen","createAttachment","deleteAttachment","updateAttachment","undefined","attachmentBeingEdited","setAttachmentBeingEdited","updateAttachmentBeingEdited","updates","uploading","FormScreen","forms","setFirstName","benbat","setBenbat","mothersName","setMothersName","formMessage","setFormMessage","success","setTimeout","fail","onSubmit","preventDefault","required","checked","person","hebrew","search","dir","IndexScreen","LiveClassesCarousel","ClassesScreenCreator","setSchedules","onSchedulesChanged","Classes","renderRoutes","routes","exact","Component","component","adminRoutes","currentAttachments","setCurrentAttachments","onAttachmentsChanged","AttachmentsAdmin","addAttachment","updatedAttachment","removeAttachment","Index","setAttachments","Attachments","setForms","onFormsChanged","Form","basename","MainNavigator","App","AppNavigator","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2e3b6ce4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.3acec546.gif\";","module.exports = __webpack_public_path__ + \"static/media/SCALogo.80df96a3.png\";","module.exports = __webpack_public_path__ + \"static/media/sca-white.cbe6bec1.svg\";","import moment from 'moment';\nimport xlsx from 'xlsx';\n\n\nexport const dataframeFromExcelFile = (excelFile: File) =>\n  new Promise<DataFrame>(resolve => {\n    var reader = new FileReader();\n\n    reader.onload = function(e) {\n      const data = e.target.result;\n      const workbook = xlsx.read(data, { type: 'array' });\n      const spreadSheet = workbook.Sheets[workbook.SheetNames[0]];\n\n      const rowObjs = xlsx.utils.sheet_to_json(spreadSheet);\n      const header = Object.keys(rowObjs[0]);\n      const rows: DataFrame = [header].concat(\n        rowObjs.map(obj => header.map(key => obj[key])),\n      );\n      resolve(cleanExcelData(rows));\n    };\n\n    reader.readAsArrayBuffer(excelFile);\n  });\n\nexport const convertImageFileToBase64Str = (image: File) => \n  new Promise<string | ArrayBuffer>(resolve => {\n    const reader = new FileReader();\n    reader.onloadend = function (e) {\n      resolve(e.target.result);\n    }\n    reader.readAsDataURL(image);\n  });\n    \n\nexport const adjustExcelTime = string => {\n    return string.toString();\n    if (typeof string === 'string') return string;\n    const timeInMiliSeconds = (string - (25567 + 1)) * 86400 * 1000;\n    const fiveHours = 1000 * 60 * 60 * 5;\n    const data = new Date(timeInMiliSeconds + fiveHours);\n    return moment(data).format('LT');\n};\n\nexport const cleanExcelData = (d: DataFrame) => \n    d.map(rows => rows.map(col => adjustExcelTime(col)));\n\n\nexport const convertJsonToArrayWithIds = (obj: object) =>\n    Object.entries(obj).map(([_id, val]) => ({ _id, ...val }));\n\nexport const excludeFilterDataFrameRows = (filterType: string, filterVal: string, data: DataFrame) => {\n    const header = [...data[0]];\n    const searchableColIndex = getColumnIdxOfKey(data, filterType);\n    if (searchableColIndex === -1) { // This table doesn't have a column for specified filterType\n        return [...data];\n    }\n    const filteredRows = data.slice(1).filter(row => {\n        let cellText = row[searchableColIndex];\n        // if (filterType === 'time') cellText = cellText.replace(':', '');\n        return cellText && !cellText.toLowerCase().includes(filterVal.toLowerCase());\n    });\n    return [header].concat(filteredRows);\n}\n\nexport const filterDataFrameRows = (filterType: string, filterVal: string, data: DataFrame) => {\n    const header = [...data[0]];\n    const searchableColIndex = getColumnIdxOfKey(data, filterType);\n    if (searchableColIndex === -1) { // This table doesn't have a column for specified filterType\n        return [header];\n    }\n    const filteredRows = data.slice(1).filter(row => {\n        let cellText = row[searchableColIndex];\n        // if (filterType === 'time') cellText = cellText.replace(':', '');\n        return cellText && cellText.toLowerCase().includes(filterVal.toLowerCase());\n    });\n    return [header].concat(filteredRows);\n}\n\nexport const getColumnIdxOfKey = (data: DataFrame, key: string) => {\n  const colIndex = data[0].findIndex(currKey =>\n    currKey.toLowerCase().includes(key.toLowerCase())\n  );\n  return colIndex;\n}","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport * as linkify from 'linkifyjs';\n\nimport { excludeFilterDataFrameRows, filterDataFrameRows } from '../../util';\n\ninterface ScheduleCardProps {\n  schedule: Schedule;\n  filter?: {\n    /** The column in the header to look for */\n    type: string;\n    /** The string to compare cells with */\n    match: string;\n  };\n  stringToHighlight?: string;\n}\n\ninterface SmartTextProps {\n  input: string;\n  highlight?: boolean;\n  row?: string[];\n  passwordCol: number;\n}\n/** If input contains a link, SmartText will replace it with a clickable ancor tag */\nexport const SmartText: React.FC<SmartTextProps> = ({ input, highlight, row, passwordCol }) => {\n  const urls = linkify.find(input);\n  let password = '';\n  if (~passwordCol && row[passwordCol] !== '-') {\n    password = `Password: ${row[passwordCol]}`;\n  }\n  if (urls.length === 0) {\n    return <p className={highlight && 'highlight'}>{input}</p>;\n  }\n  const { value, type } = urls[0];\n  return <p><a href={value} className={value.includes('zoom') && type === 'url' ? 'zoomIcon' : value.includes('gotomeeting') && type === 'url' ? 'gtmIcon' : ''}>{type === 'url' ? 'Click here' : value}</a> <span className=\"password\">{password}</span></p>;\n};\n\nconst ScheduleCard: React.FC<ScheduleCardProps> = ({ schedule, filter }) => {\n  const location = useLocation();\n  const { title, rows, logo } = schedule;\n\n  const filteredRows = filter\n    ? filterDataFrameRows(filter.type, filter.match, rows)\n    : excludeFilterDataFrameRows('type', 'minyan', rows);\n\n  if (filteredRows.length === 1) {\n    // No rows matched the filter criteria\n    return null;\n  }\n\n  const headerRow = filteredRows[0];\n\n  const filteredCols = headerRow.reduce((acc, cur, idx) => {\n    if (cur.toString().toLowerCase().startsWith('hide')) {\n      acc.push(idx)\n    }\n    return acc;\n  }, []);\n\n  const filterColIdx =\n    filter && rows[0].findIndex(col => col.toLowerCase().includes(filter.type));\n\n  const passwordColIdx =\n    rows[0].findIndex(col => col.toLowerCase().includes('password'));\n\n  const shouldHighlight = (colText: string, colIdx) => {\n    if (filter?.type === 'topic' && location.pathname === '/bekhorot') {\n      return false;\n    }\n    const text = colText.toLowerCase();\n    return filterColIdx === colIdx && text.includes(filter.match);\n  };\n\n  return (\n    <div className=\"schedule-card my-5\">\n      <div className=\"card-header\">\n        {!!logo && (\n          <div className=\"w-100\">\n            <img src={logo} className=\"logo ml-4\" />\n          </div>\n        )}\n        <h1 className=\"schedule-title\">{title}</h1>\n      </div>\n      <table className=\"table table-striped table-bordered table-hover shadow\">\n        <thead className=\"text-light\">\n          <tr>\n            {filteredRows[0].map((col, idx) => {\n              if (!filteredCols.includes(idx)) {\n                return <th key={idx}>{col}</th>\n              }\n            })}\n          </tr>\n        </thead>\n        <tbody>\n          {filteredRows.slice(1).map((row, rIdx) => (\n            <tr key={rIdx}>\n              {row.map((col, cIdx) => {\n                if (!filteredCols.includes(cIdx)) {\n                  return <td key={cIdx}>\n                    <SmartText\n                      input={col}\n                      row={row}\n                      passwordCol={passwordColIdx}\n                      highlight={shouldHighlight(col, cIdx)}\n                    />\n                  </td>\n                }\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ScheduleCard;\n","import React from 'react';\n\ninterface AttachmentCardProps {\n  attachment: Attachment;\n}\n\nconst AttachmentCard: React.FC<AttachmentCardProps> = ({ attachment }) => {\n  const { title, file, cover, body } = attachment;\n\n  return (\n    <div className=\"col-md-4 my-3\">\n      <div className=\"card text-center h-100\">\n        {!!cover && (\n          <div className=\"card-img-top w-100\">\n            <img src={cover} className=\"attachment-cover\" />\n          </div>\n        )}\n        <a href={file} target=\"_blank\" className=\"card-body d-flex flex-column align-items-center bg-aliceblue\">\n            <h3 className=\"card-title\">{title}</h3>\n            {!!body && (\n              <p className=\"card-text\">{body}</p>\n            )}\n          <span className=\"btn btn-primary d-inline-block mt-auto\">Click to download</span>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default AttachmentCard;\n","class ScheduleService {\n  private storage: Database;\n  static scheduleRef = '1TS3fZHRPlhI4L_URhKJXGa48eOy6BiqM1GeSUJL9jFs/live-website-feed';\n\n  constructor(database: Database) {\n    this.storage = database;\n  }\n\n  async getAllSchedules(): Promise<DataFrame> {\n    return await this.storage.read(ScheduleService.scheduleRef);\n  }\n\n  onSchedulesChanged(cb: (data: DataFrame) => void) {\n    this.storage.onChange(ScheduleService.scheduleRef, cb);\n  }\n}\n\nfunction createScheduleManager(persistedStorage: Database) {\n  return new ScheduleService(persistedStorage);\n}\n\nexport default createScheduleManager;\n","import { convertJsonToArrayWithIds } from '../util';\n\nclass AttachmentService {\n  private storage: Database;\n\n  constructor(database: Database) {\n    this.storage = database;\n  }\n\n  async addAttachment(attachment: Attachment) {\n    return this.storage.push('attachments', attachment);\n  }\n\n  async removeAttachment(_id: firebase.database.Reference) {\n    return this.storage.delete('attachments', _id);\n  }\n\n  async updateAttachment(_id: firebase.database.Reference, newAttachment: Attachment) {\n    return this.storage.write(`attachments/${_id}`, newAttachment);\n  }\n\n  async getAllAttachments(): Promise<Attachment[]> {\n    return this._alphabetize(await this.storage.findAll('attachments'));\n  }\n\n  onAttachmentsChanged(cb: (attachments: Attachment[]) => void) {\n    this.storage.onChange('attachments', data =>\n      cb(this._alphabetize(convertJsonToArrayWithIds(data)))\n    );\n  }\n\n  _alphabetize(attachments: Attachment[]) {\n    return attachments ? attachments.sort((a, b) => a.title > b.title ? 1 : a.title < b.title ? -1 : 0) : [];\n  }\n}\n\nfunction createAttachmentManager(persistedStorage: Database) {\n  return new AttachmentService(persistedStorage);\n}\n\nexport default createAttachmentManager;\n","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/storage';\n\nimport { convertJsonToArrayWithIds } from '../util';\n\nclass FirebaseManager implements Database {\n  db: firebase.database.Database;\n  storage: firebase.storage.Storage;\n\n  constructor(config: FirebaseConfig) {\n    const app = firebase.initializeApp(config);\n    this.db = app.database();\n    this.storage = app.storage();\n  }\n\n  async read(path: string) {\n    return this.db\n      .ref(path)\n      .once('value')\n      .then(s => s.val());\n  }\n\n  async write(path: string, data: any) {\n    return this.db.ref(path).set(data);\n  }\n\n  async push(basePath: string, data: any) {\n    return this.db.ref(basePath).push(data);\n  }\n\n  /** Gets all documents with their id's in collection */\n  async findAll(path: string) {\n    return this.db.ref(path).once('value')\n    .then(s => s.val() || {}).then(convertJsonToArrayWithIds)\n  }\n\n  async delete(path: string, _id: firebase.database.Reference) {\n    return this.db.ref(`${path}/${_id}`).remove();\n  }\n\n  onChange(path: string, cb: (data: any) => void) {\n    this.db.ref(path).on('value', (s) => cb(s.val()));\n  }\n\n}\n\nfunction createFirebaseDbManager(config: FirebaseConfig) {\n  return new FirebaseManager(config);\n}\n\nexport default createFirebaseDbManager;\n","import { convertJsonToArrayWithIds } from '../util';\n\nclass FormService {\n  private storage: Database;\n\n  constructor(database: Database) {\n    this.storage = database;\n  }\n\n  async addForm(form: Form) {\n    return this.storage.push('tehillim', form);\n  }\n\n  async removeForm(_id: firebase.database.Reference) {\n    return this.storage.delete('tehillim', _id);\n  }\n\n  async updateForm(_id: firebase.database.Reference, newForm: Form) {\n    return this.storage.write(`tehillim/${_id}`, newForm);\n  }\n\n  async getAllForms(): Promise<Form[]> {\n    return this._alphabetize(await this.storage.findAll('tehillim'));\n  }\n\n  onFormsChanged(cb: (tehillim: Form[]) => void) {\n    this.storage.onChange('tehillim', data =>\n      cb(this._alphabetize(convertJsonToArrayWithIds(data)))\n    );\n  }\n\n  _alphabetize(tehillim: Form[]) {\n    return tehillim ? tehillim.sort((a, b) => a.firstName > b.firstName ? 1 : a.firstName < b.firstName ? -1 : 0) : [];\n  }\n}\n\nfunction createFormManager(persistedStorage: Database) {\n  return new FormService(persistedStorage);\n}\n\nexport default createFormManager;\n","import createScheduleManager from './ScheduleService';\nimport createAttachmentManager from './AttachmentService';\nimport createFirebaseDbManager from './DatabaseService';\nimport createFormManager from './FormService';\n\nconst firebaseConfig: FirebaseConfig = {\n  apiKey: \"AIzaSyDUNiNW3dfplmHAq65wfKIGGSHS8MGXgzM\",\n  authDomain: \"sca-rab-schedules.firebaseapp.com\",\n  databaseURL: \"https://sca-rab-schedules.firebaseio.com\",\n  projectId: \"sca-rab-schedules\",\n  storageBucket: \"sca-rab-schedules.appspot.com\",\n  messagingSenderId: \"893196040077\",\n  appId: \"1:893196040077:web:75ee18b5d771028f616fc4\"\n}\n\nconst database = createFirebaseDbManager(firebaseConfig);\nconst scheduleManager = createScheduleManager(database);\nconst attachmentManager = createAttachmentManager(database);\nconst formManager = createFormManager(database);\n\nexport { database, scheduleManager, attachmentManager, formManager };\n","import React, { useState, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport FileUploader from 'react-firebase-file-uploader';\nimport { database } from '../../service/index';\nimport spinner from '../assets/spinner.gif';\n\ninterface ImageDropBoxProps {\n  onImageDropped: (image: string) => void;\n  currentImage?: string;\n}\nconst ImageDropBox: React.FC<ImageDropBoxProps> = ({\n  onImageDropped,\n  currentImage,\n}) => {\n  const [previewImage, setPreviewImage] = useState(currentImage);\n\n  useEffect(() => setPreviewImage(currentImage), [currentImage]);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: (files: File[]) => {\n      const file = files[0];\n      const imageExt = /^([a-zA-Z0-9\\s_\\\\.\\-:])+(.jpg|.jpeg|.png)$/;\n      if (!imageExt.test(file.name.toLowerCase())) {\n        return alert(\n          'Only files with .jpg or .jpeg or .png extensions are allowed here.',\n        );\n      }\n      /* convertImageFileToBase64Str(file).then(base64URL => {\n        setPreviewImage(base64URL as string);\n        onImageDropped(base64URL as string);\n      }); */\n    },\n  });\n\n  const handleUploadStart = (file) => {\n    setPreviewImage(spinner as string);\n  };\n\n  const handleUploadSuccess = (file) => {\n    database\n      .storage\n      .ref(\"/logos\")\n      .child(file)\n      .getDownloadURL()\n      .then(url => {\n        setPreviewImage(url as string);\n        onImageDropped(url as string);\n      });\n  };\n\n  return (\n    <div className=\"image-dropper mt-2\">\n      <form>\n        <FileUploader\n          accept=\"image/*\"\n          randomizeFilename\n          storageRef={database.storage.ref(\"/logos\")}\n          metadata={{cacheControl: 'max-age=2592000'}}\n          onUploadStart={handleUploadStart}\n          onUploadSuccess={handleUploadSuccess}\n          id=\"image-drop\"\n        />\n        <label htmlFor=\"image-drop\">\n          <p>\n            Drop logo here\n            <br />\n            (or click to choose file)\n          </p>\n        </label>\n      </form>\n      {!!previewImage && <img src={previewImage} className=\"logo\" />}\n    </div>\n  );\n};\n\nexport default ImageDropBox;\n","import React from 'react';\nimport moment from 'moment';\n// import * as linkify from 'linkifyjs';\n\nimport { SmartText } from './ScheduleCard';\nimport { excludeFilterDataFrameRows, filterDataFrameRows } from '../../util';\n\n// interface SmartTextProps {\n//   input: string;\n// }\n// /** If input contains a link, SmartText will replace it with a clickable ancor tag */\n// const SmartText: React.FC<SmartTextProps> = ({ input }) => {\n//   const urls = linkify.find(input);\n//   if (urls.length === 0) {\n//     return <p>{input}</p>;\n//   }\n//   const { value, type } = urls[0];\n//   return <a href={value} className={value.includes('zoom') && type === 'url' ? 'zoomIcon' : value.includes('gotomeeting') && type === 'url' ? 'gtmIcon' : ''}>{type === 'url' ? 'Click here' : value}</a>;\n// };\n\ninterface LiveItemsProps {\n  schedules: Schedule[];\n  filter?: {\n    type: string;\n    match: string;\n  };\n  heading: string;\n}\n\nconst LiveItems: React.FC<LiveItemsProps> = ({\n  schedules,\n  filter,\n  heading,\n}) => {\n  let rows = [];\n  schedules.forEach(schedule => {\n    const filteredRows =\n      filter?.match === 'minyan'\n        ? filterDataFrameRows(filter.type, filter.match, schedule.rows)\n        : excludeFilterDataFrameRows('type', 'minyan', schedule.rows);\n    rows.push(...filteredRows);\n  });\n  const headerRows = rows[0];\n\n  if (rows.length < 2) {\n    // No rows matched the filter criteria\n    return null;\n  }\n\n  // Only show the rows whose data in column 'HIDE-Toggle' contains 'show'\n  rows = filterDataFrameRows('toggle', 'show', rows);\n\n  const dayIdx = headerRows.findIndex(data => data.toLowerCase().includes('days'))\n  const timeIdx = headerRows.findIndex(data => data.toLowerCase().includes('time'))\n  const passwordIdx = headerRows.findIndex(data => data.toLowerCase().includes('password'));\n\n  const filteredCols = headerRows.reduce((acc, cur, idx) => {\n    if (cur.toString().toLowerCase().startsWith('hide') || cur.toString().toLowerCase().startsWith('days')) {\n      acc.push(idx)\n    }\n    return acc;\n  }, []);\n\n  const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  const now = new Date();\n\n  const filteredByDay = rows.filter(row => {\n    let flag = false;\n    const rowDays = row[dayIdx];\n    if (rowDays.includes('Daily')) {\n      flag = true;\n    } else if (rowDays.includes(days[now.getDay()])) {\n      flag = true;\n    } else if (rowDays.includes('-')) {\n      const rowDaysArr = rowDays.split(/[^\\w-]/);\n      rowDaysArr.forEach(rowDay => {\n        if (rowDay.includes('-')) {\n          const leftRight = rowDay.split('-');\n          const left = days.findIndex(v => {\n            return leftRight[0].includes(v);\n          });\n          const right = days.findIndex(v => {\n            return leftRight[1].includes(v);\n          });\n          if (left < now.getDay() && right > now.getDay()) {\n            flag = true;\n          }\n        }\n      });\n    }\n    return flag;\n  });\n\n  const live = [];\n  const elapsed = [];\n  const upcoming = [];\n\n  filteredByDay.forEach(row => {\n    const rowTimes = row[timeIdx].match(/\\d\\d?:\\d\\d ?(?:[AP]M)?/g);\n    if (!rowTimes) return false;\n    if (\n      !rowTimes[0].toLowerCase().includes('pm') &&\n      row[3].toLowerCase().includes('pm')\n    ) {\n      rowTimes[0] += ' pm';\n    }\n    const startTime = moment(rowTimes[0], 'h:mm:ss a');\n    const endTime =\n      rowTimes.length > 1\n        ? moment(rowTimes[1], 'h:mm:ss a')\n        : moment(startTime).add(1, 'h');\n    startTime.subtract(10, 'm');\n\n    if (moment(now).isBetween(startTime, endTime, null, '[)')) {\n      live.push(row);\n    } else if (moment(now).isSameOrAfter(endTime)) {\n      elapsed.push(row);\n    } else if (moment(now).isBefore(startTime)) {\n      upcoming.push(row);\n    }\n  });\n\n  return (\n    <div className=\"schedule-card my-5\">\n      {\n        (() => (\n          live.length > 0 &&\n          <>\n            <div className=\"card-header\">\n              <h1 className=\"schedule-title\">Ongoing {heading}</h1>\n            </div>\n            <table className=\"table table-striped table-bordered table-hover shadow\">\n              <thead className=\"text-light\">\n                <tr>\n                  {headerRows.map((col, idx) => {\n                    if (!filteredCols.includes(idx)) {\n                      return <th key={idx}>{col}</th>\n                    }\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {live.map((row, rowId) => (\n                  <tr key={rowId}>\n                    {row.map((cell, cellId) => {\n                      if (!filteredCols.includes(cellId)) {\n                        return <td key={cellId}>\n                          <SmartText input={cell} passwordCol={passwordIdx} row={row} />\n                        </td>\n                      }\n                    })}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </>\n        ))()\n      }\n      {\n        (() => (\n          upcoming.length > 0 &&\n          <>\n            <div className=\"card-header\">\n              <h1 className=\"schedule-title\">Upcoming {heading}</h1>\n            </div>\n            <table className=\"table table-striped table-bordered table-hover shadow\">\n              <thead className=\"text-light\">\n                <tr>\n                  {headerRows.map((col, idx) => {\n                    if (!filteredCols.includes(idx)) {\n                      return <th key={idx}>{col}</th>\n                    }\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {upcoming.map((row, rowId) => (\n                  <tr key={rowId}>\n                    {row.map((cell, cellId) => {\n                      if (!filteredCols.includes(cellId)) {\n                        return <td key={cellId}>\n                         <SmartText input={cell} passwordCol={passwordIdx} row={row} />\n                        </td>\n                      }\n                    })}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </>\n        ))()\n      }\n\n      {\n        (() => (\n          elapsed.length > 0 &&\n          <>\n            <div className=\"card-header\">\n              <h1 className=\"schedule-title\">Completed {heading}</h1>\n            </div>\n            <table className=\"table table-striped table-bordered table-hover shadow\">\n              <thead className=\"text-light\">\n                <tr>\n                  {headerRows.map((col, idx) => {\n                    if (!filteredCols.includes(idx)) {\n                      return <th key={idx}>{col}</th>\n                    }\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {elapsed.map((row, rowId) => {\n                  console.log(passwordIdx);\n                  console.log(row[passwordIdx]);\n                  return <tr key={rowId}>\n                    {row.map((cell, cellId) => {\n                      if (!filteredCols.includes(cellId)) {\n                        return <td key={cellId}>\n                          <SmartText input={cell} passwordCol={passwordIdx} row={row} />\n                        </td>\n                      }\n                    })}\n                  </tr>\n})}\n              </tbody>\n            </table>\n          </>\n        ))()\n      }\n\n    </div>\n  );\n};\n\nexport default LiveItems;\n","import React, { useEffect } from 'react';\nimport Swiper from 'swiper';\nimport 'swiper/css/swiper.css';\n\nimport moment from 'moment';\nimport * as linkify from 'linkifyjs';\n\nimport { excludeFilterDataFrameRows, filterDataFrameRows, getColumnIdxOfKey } from '../../util';\nimport { database } from 'firebase';\n\ninterface SmartTextProps {\n  input: string;\n}\n/** If input contains a link, SmartText will replace it with a clickable ancor tag */\nconst SmartText: React.FC<SmartTextProps> = ({ input }) => {\n  const urls = linkify.find(input);\n  if (urls.length === 0) {\n    return <p>{input}</p>;\n  }\n  const { value, type } = urls[0];\n  return <a href={value} className={value.includes('zoom') && type === 'url' ? 'zoomIcon' : value.includes('gotomeeting') && type === 'url' ? 'gtmIcon' : ''}>{type === 'url' ? 'Click here' : value}</a>;\n};\n\ninterface LiveClassesProps {\n  schedules: Schedule[];\n  filter?: {\n    type: string;\n    match: string;\n  };\n  heading: string;\n}\n\nconst LiveClasses: React.FC<LiveClassesProps> = ({\n  schedules,\n  filter,\n  heading,\n}) => {\n  useEffect(() => {\n    new Swiper('.swiper-container',{\n      slidesPerView: 'auto',\n      centeredSlides: true,\n      grabCursor: true\n    });\n  });\n\n  const rows = [];\n  schedules.forEach(schedule => {\n    const filteredRows =\n      filter?.match === 'minyan'\n        ? filterDataFrameRows(filter.type, filter.match, schedule.rows)\n        : excludeFilterDataFrameRows('type', 'minyan', schedule.rows);\n    rows.push(...filteredRows);\n  });\n  const headerRows = rows[0];\n\n  if (rows.length < 2) {\n    // No rows matched the filter criteria\n    return null;\n  }\n\n  const dayIdx = headerRows.findIndex(data => data.toLowerCase().includes('days'));\n  const timeIdx = headerRows.findIndex(data => data.toLowerCase().includes('time'));\n  const joinIdx = headerRows.findIndex(data => data.toLowerCase().includes('join'));\n  const topicIdx = headerRows.findIndex(data => data.toLowerCase().includes('topic'));\n  const teacherIdx = headerRows.findIndex(data => data.toLowerCase().includes('teacher'));\n\n  const filteredCols = headerRows.reduce((acc, cur, idx) => {\n    if (cur.toString().toLowerCase().startsWith('hide') || cur.toString().toLowerCase().startsWith('days')) {\n      acc.push(idx)\n    }\n    return acc;\n  }, []);\n\n  const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  const now = new Date();\n\n  const filteredByDay = rows.filter(row => {\n    let flag = false;\n    const rowDays = row[dayIdx];\n    if (rowDays.includes('Daily')) {\n      flag = true;\n    } else if (rowDays.includes(days[now.getDay()])) {\n      flag = true;\n    } else if (rowDays.includes('-')) {\n      const rowDaysArr = rowDays.split(/[^\\w-]/);\n      rowDaysArr.forEach(rowDay => {\n        if (rowDay.includes('-')) {\n          const leftRight = rowDay.split('-');\n          const left = days.findIndex(v => {\n            return leftRight[0].includes(v);\n          });\n          const right = days.findIndex(v => {\n            return leftRight[1].includes(v);\n          });\n          if (left < now.getDay() && right > now.getDay()) {\n            flag = true;\n          }\n        }\n      });\n    }\n    return flag;\n  });\n\n  const live = [];\n  const elapsed = [];\n  const upcoming = [];\n\n  filteredByDay.forEach(row => {\n    const rowTimes = row[timeIdx].match(/\\d\\d?:\\d\\d ?(?:[AP]M)?/g);\n    if (!rowTimes) return false;\n    if (\n      !rowTimes[0].toLowerCase().includes('pm') &&\n      row[3].toLowerCase().includes('pm')\n    ) {\n      rowTimes[0] += ' pm';\n    }\n    const startTime = moment(rowTimes[0], 'h:mm:ss a');\n    const endTime =\n      rowTimes.length > 1\n        ? moment(rowTimes[1], 'h:mm:ss a')\n        : moment(startTime).add(1, 'h');\n\n    if (moment(now).isBetween(startTime, endTime, null, '[)')) {\n      live.push(row);\n    } else if (moment(now).isSameOrAfter(endTime)) {\n      elapsed.push(row);\n    } else if (moment(now).isBefore(startTime)) {\n      upcoming.push(row);\n    }\n  });\n\n  return (\n    (() => (\n      live.length > 0 &&\n      <>\n        <div className={heading === 'Minyanim' ? 'h3 shadow-lg p-3 mb-5 bg-secondary text-center font-weight-bold text-white' : 'h3 shadow-lg p-3 mb-5 bg-primary text-center font-weight-bold text-white'}>\n          Ongoing {heading}\n        </div>\n        <div className=\"swiper-container live-classes d-flex justify-content-center mb-5\">\n          <div className=\"swiper-wrapper\">\n            {live.map((row, rowId) => {\n              const time = row[timeIdx];\n              const topic = row[topicIdx];\n              const teacher = row[teacherIdx];\n              const url = row[joinIdx];\n              return (\n                <div className=\"swiper-slide card mb-3 flex-grow-1 mx-1\" key={rowId} style={{maxWidth: \"400px\"}}>\n                  <div className=\"row no-gutters align-items-center\">\n                    <div className=\"col-8\">\n                      <div className=\"card-body\">\n                        <p className=\"card-text my-0\">{time}</p>\n                        <p className=\"card-text my-0\"><small className=\"text-muted\">{teacher}</small></p>\n                        <h5 className=\"card-title text-bold mt-2\">{topic}</h5>\n                      </div>\n                    </div>\n                    <div className=\"col-4\">\n                      <SmartText input={url} />\n                    </div>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </>\n    ))()\n  );\n};\n\nexport default LiveClasses;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { mainRoutes } from '../../AppNavigator';\nimport SCALogo from '../assets/SCALogo.png';\n\nconst Header: React.FC = props => {\n  const location = useLocation();\n  const pageName = mainRoutes[location.pathname]?.pageName;\n\n  /* React.useEffect(() => {\n    ga.send([\"pageview\", location.pathname]);\n  }, [location]); */\n\n  return (\n    <>\n      <header className=\"navbar navbar-expand-lg navbar-light fixed-top bg-light shadow\">\n        <a href=\"/#\" className=\"navbar-brand\">\n          <img\n            className=\"py-0\"\n            src={SCALogo}\n            alt=\"SCA\"\n            height=\"60\"\n          />\n        </a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <nav className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n          <ul data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup.show\" className=\"navbar-nav ml-auto\">\n            <li className={location.pathname === '/today' ? 'active nav-item' : 'nav-item'}>\n              <a className=\"nav-link\" href=\"/#/today\">Classes</a>\n            </li>\n            <li className={location.pathname === '/minyanim' ? 'active nav-item' : 'nav-item'}>\n              <a className=\"nav-link\" href=\"/#/minyanim\">Minyanim</a>\n            </li>\n            <li className={location.pathname === '/letters' ? 'active nav-item' : 'nav-item'}>\n              <a className=\"nav-link\" href=\"/#/letters\">COVID-19</a>\n            </li>\n            <li className={location.pathname === '/tehillim' ? 'active nav-item' : 'nav-item'}>\n              <a className=\"nav-link\" href=\"/#/tehillim\">Tehillim Requests</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"mailto:info@scaupdates.org\">Contact</a>\n            </li>\n          </ul>\n        </nav>\n      </header>\n      <div className=\"header-spacing\"></div>\n      {\n        !!pageName && <h5 className=\"w-100 text-center header-title my-5\">\n          {pageName}\n        </h5>\n      }\n    </>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nimport sca from '../assets/sca-white.svg';\n\nconst Footer: React.FC = props => {\n  return (\n    <>\n      <footer className=\"bg-dark d-flex\">\n        <a href=\"/#\" className=\"my-5 mx-auto d-block\">\n          <img\n            className=\"py-0\"\n            src={sca}\n            alt=\"SCA\"\n            height=\"60\"\n            width=\"177\"\n          />\n        </a>\n      </footer>\n    </>\n  );\n};\n\nexport default Footer;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { getColumnIdxOfKey } from '../../util';\nimport { ScheduleCard, LiveItems } from '../components';\n\ninterface ClassesScreenProps {\n  schedules: Schedule[];\n}\n\nconst ClassesScreen: React.FC<ClassesScreenProps> = ({ schedules }) => {\n  const [filterType, setfilterType] = useState<string>('none');\n  const [filterVal, setFilterVal] = useState<string>('');\n  const [heading, setHeading] = useState<string>('Classes');\n  const location = useLocation();\n\n  const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  useEffect(() => {\n    if (location.pathname === '/minyanim') {\n      setHeading('Minyanim');\n      setfilterType('type');\n      setFilterVal('minyan');\n    } else if (location.pathname === '/today') {\n      const now = new Date();\n      const today = days[now.getDay()]\n      setfilterType('day');\n      setFilterVal(today);\n    }\n  }, [days, location.pathname]);\n\n  const calcAvailableTimes = useCallback(() => {\n    const validTime = /\\d\\d?:\\d\\d ([AP]M)/;\n    let times = [];\n    schedules.forEach(({ rows }) => {\n      const idxOfTime = getColumnIdxOfKey(rows, 'time');\n      const moreTimes = rows\n        .map(row => row[idxOfTime])\n        .filter(time => validTime.test(time))\n        .map(time => time.match(validTime)[0]);\n      times = times.concat(moreTimes);\n    });\n    return Array.from(new Set(times)).sort((a, b) => {\n      const _a = new Date('1970/01/01 ' + a);\n      const _b = new Date('1970/01/01 ' + b);\n      return _a > _b ? 1 : _a < _b ? -1 : 0;\n    });\n  }, [schedules]);\n\n  const calcTeachers = useCallback(() => {\n    let teachers = [];\n    schedules.forEach(({ rows }) => {\n      const idxOfTime = getColumnIdxOfKey(rows, 'teacher');\n      const moreTimes = rows\n        .map(row => row[idxOfTime]);\n      teachers = teachers.concat(moreTimes);\n    });\n    return Array.from(new Set(teachers)).sort();\n  }, [schedules]);\n\n  return (\n    <>\n      {\n        (() => (\n          location.pathname !== '/minyanim' &&\n          <div className=\"container\">\n            <div className=\"row\">\n              <ul className=\"nav nav-pills nav-justified m-3 w-100\">\n                <li className=\"nav-item\">\n                  <a href=\"/#/today\" className={location.pathname === '/today' ? 'nav-link active' : 'nav-link'}>Today's Classes</a>\n                </li>\n                <li className=\"nav-item\">\n                  <a href=\"/#/classes\" className={location.pathname === '/classes' ? 'nav-link active' : 'nav-link'}>Full Schedule</a>\n                </li>\n                <li className=\"nav-item\">\n                  <a href=\"https://www.youtube.com/channel/UCsHn2xQEscv11QaNHpPf37A\" target=\"_blank\" rel=\"noopener\" className=\"nav-link\">Recordings</a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        ))()\n      }\n      <div className=\"container\">\n        {\n          (() => (\n            location.pathname === '/today' &&\n            <LiveItems\n              schedules={schedules}\n              filter={\n                !(filterType === 'none' || filterVal === '') && {\n                  type: filterType,\n                  match: filterVal,\n                }\n              }\n              heading={heading}\n            />\n          ))()\n        }\n      </div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"input-group mt-3 mx-3\">\n            <label\n              htmlFor=\"filter\"\n              className={\n                location.pathname === '/classes' ? 'header-title' : 'hidden'\n              }>\n              Filter By:{' '}\n              <select\n                name=\"filter\"\n                onChange={e => {\n                  setfilterType(e.target.value);\n                  setFilterVal('');\n                }}\n                id=\"\"\n                value={filterType}>\n                <option value=\"none\">No filter</option>\n                <option value=\"time\">Time of day</option>\n                <option value=\"day\">Day of week</option>\n                <option value=\"topic\">Topic</option>\n                <option value=\"teacher\">Teacher</option>\n              </select>\n              {filterType !== 'none' &&\n                (filterType === 'day' ? (\n                  <select\n                    className=\"ml-2\"\n                    onChange={e => setFilterVal(e.target.value)}>\n                    <option value=\"\">Choose Day</option>\n                    <option value=\"mon\">Mon</option>\n                    <option value=\"tues\">Tues</option>\n                    <option value=\"wed\">Wed</option>\n                    <option value=\"thurs\">Thurs</option>\n                    <option value=\"fri\">Fri</option>\n                    <option value=\"sun\">Sun</option>\n                  </select>\n                ) : filterType === 'time' ? (\n                  <select\n                    className=\"ml-2\"\n                    onChange={e => setFilterVal(e.target.value.toLowerCase())}>\n                    <option value=\"\">Choose Time</option>\n                    {calcAvailableTimes().map(time => (\n                      <option value={time}>{time}</option>\n                    ))}\n                  </select>\n                ) : filterType === 'teacher' ? (\n                  <select\n                    className=\"ml-2\"\n                    onChange={e => setFilterVal(e.target.value.toLowerCase())}>\n                    <option value=\"\">Choose Teacher</option>\n                    {calcTeachers().map(time => (\n                      <option value={time}>{time}</option>\n                    ))}\n                  </select>\n                ) : (\n                      <input\n                        type=\"text\"\n                        className=\"ml-2\"\n                        onChange={e => setFilterVal(e.target.value.toLowerCase())}\n                        placeholder={`Enter ${filterType}(s)`}\n                      />\n                    ))}\n            </label>\n          </div>\n        </div>\n        {location.pathname !== '/today' && schedules.map((schedule, idx) => {\n          return (\n            <ScheduleCard\n              key={idx}\n              schedule={schedule}\n              filter={\n                !(filterType === 'none' || filterVal === '') && {\n                  type: filterType,\n                  match: filterVal,\n                }\n              }\n            />\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default ClassesScreen;\n","import React, { useState } from 'react';\nimport { AttachmentCard } from '../components';\n\n\ninterface AttachmentScreenProps {\n  attachments: Attachment[];\n}\n\nconst AttachmentScreen: React.FC<AttachmentScreenProps> = ({ attachments }) => {\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row align-items-stretch\">\n          {attachments.map((attachment, idx) => {\n            return (\n              <AttachmentCard\n                key={idx}\n                attachment={attachment}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AttachmentScreen;\n","import React, { useState, useEffect } from 'react';\nimport FileUploader from 'react-firebase-file-uploader';\n\nimport { ImageDropBox } from '../components';\nimport { database } from '../../service/index';\nimport spinner from '../assets/spinner.gif';\n\ninterface AttachmentPreviewItemProps {\n  attachment: Attachment;\n  isEditing: boolean;\n  onUpdateBtnPressed: () => void;\n  onDeleteBtnPressed: () => void;\n}\nconst AttachmentPreviewItem: React.FC<AttachmentPreviewItemProps> = ({\n  attachment,\n  isEditing,\n  onUpdateBtnPressed,\n  onDeleteBtnPressed,\n}) => (\n  <li className=\"list-group-item d-flex justify-content-between my-2\">\n    <h3>{attachment.title}</h3>\n\n    {isEditing ? (\n      <button className=\"btn btn-danger m-1\" onClick={onDeleteBtnPressed}>\n        x\n      </button>\n    ) : (\n      <button className=\"btn btn-warning\" onClick={onUpdateBtnPressed}>\n        <i className=\"fas fa-edit text-light\"></i>\n      </button>\n    )}\n  </li>\n);\n\ninterface AttachmentsAdminScreenProps {\n  attachments: Attachment[];\n  createAttachment: (\n    newAttachment: Attachment,\n  ) => Promise<firebase.database.Reference> | void;\n  deleteAttachment: (_id: firebase.database.Reference) => Promise<boolean>;\n  updateAttachment: (\n    _id: firebase.database.Reference,\n    updatedAttachment: Attachment,\n  ) => Promise<boolean>;\n}\n\nconst AdminScreen: React.FC<AttachmentsAdminScreenProps> = ({\n  attachments,\n  createAttachment,\n  deleteAttachment,\n  updateAttachment,\n}) => {\n  const [attachmentBeingEdited, setAttachmentBeingEdited] = useState<Attachment>(\n    undefined,\n  );\n  const updateAttachmentBeingEdited = updates =>\n  setAttachmentBeingEdited({ ...attachmentBeingEdited, ...updates });\n  let uploading = false;\n\n  const onSaveBtnPressed = () => {\n    const { title, file, cover, body } = attachmentBeingEdited;\n    const newAttachment = { title, file, cover: cover || '', body: body || ''};\n    if (attachmentBeingEdited._id) {\n      updateAttachment(attachmentBeingEdited._id, newAttachment);\n    } else {\n      createAttachment(newAttachment);\n    }\n    setAttachmentBeingEdited(undefined);\n  };\n\n  const handleUploadSuccess = (file) => {\n    database\n      .storage\n      .ref(\"/attachments\")\n      .child(file)\n      .getDownloadURL()\n      .then(url => {\n        updateAttachmentBeingEdited({file: url as string});\n        uploading = false;\n      });\n  };\n\n  const handleUploadStart = (file) => {\n    uploading = true;\n  };\n\n  useEffect(() => {\n    console.log(attachmentBeingEdited);\n  }, [attachmentBeingEdited]);\n  return (\n    <div className=\"admin-page-container\">\n      <div className=\"schedule-manager-widget row mt-5 py-5\">\n        <div className=\"col scroll-content\">\n          {attachments.map((attachment, idx) => (\n            <AttachmentPreviewItem\n              key={idx}\n              attachment={attachment}\n              isEditing={attachmentBeingEdited?._id === attachment._id}\n              onUpdateBtnPressed={() => setAttachmentBeingEdited(attachment)}\n              onDeleteBtnPressed={() => deleteAttachment(attachment._id)}\n            />\n          ))}\n        </div>\n        <div className=\"col schedule-upload-container\">\n          <div className=\"text-center\">\n            <h3 className=\"text-light\">\n              {!!attachmentBeingEdited\n                ? 'Update Attachment:'\n                : 'Upload Attachment Here:'}\n            </h3>\n          </div>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Attachment Title\"\n            value={attachmentBeingEdited?.title || ''}\n            onChange={e => updateAttachmentBeingEdited({ title: e.target.value })}\n          />\n          <ImageDropBox\n            onImageDropped={cover => updateAttachmentBeingEdited({ cover })}\n            currentImage={attachmentBeingEdited?.cover}\n          />\n          \n          <div className=\"image-dropper mt-2\">\n            <form>\n              <FileUploader\n                randomizeFilename\n                metadata={{cacheControl: 'max-age=2592000'}}\n                storageRef={database.storage.ref(\"/attachments\")}\n                onUploadStart={handleUploadStart}\n                onUploadSuccess={handleUploadSuccess}\n                id=\"file-drop\"\n              />\n              <label htmlFor=\"file-drop\">\n                <p>\n                  Drop attachment here\n                  <br />\n                  (or click to choose file)\n                </p>\n              </label>\n            </form>\n            {!!uploading && <img src={spinner} />}\n            {!!attachmentBeingEdited?.file && <a href={attachmentBeingEdited.file} target=\"_blank\">Preview</a>}\n          </div>\n\n          <textarea\n            className=\"form-control mt-2\"\n            placeholder=\"Caption\"\n            value={attachmentBeingEdited?.body || ''}\n            onChange={e => updateAttachmentBeingEdited({ body: e.target.value })}\n          />\n\n          <button className=\"btn btn-success mt-2\" onClick={onSaveBtnPressed}>\n            {attachmentBeingEdited?._id ? 'Save updates' : 'Upload Attachment'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminScreen;\n","import React, { useState } from 'react';\n\nimport { database } from '../../service/index';\n\ninterface FormScreenProps {\n  forms: Form[];\n}\n\nconst FormScreen: React.FC<FormScreenProps> = ({ forms }) => {\n  const [firstName, setFirstName] = useState<string>('');\n  const [benbat, setBenbat] = useState<string>('');\n  const [mothersName, setMothersName] = useState<string>('');\n  const [formMessage, setFormMessage] = useState<string>('');\n\n  const success = (e) => {\n    setFirstName('');\n    setBenbat('');\n    setMothersName('');\n    setFormMessage('Submitted!');\n    setTimeout(() => {\n      setFormMessage('');\n    }, 2000);\n  }\n\n  const fail = (e) => {\n    setFormMessage('Error');\n  }\n\n  const submit = (e) => {\n    e.preventDefault();\n    database.push('tehillim', {firstName, benbat, mothersName}).then(success, fail);\n  }\n  \n  return (\n    <>\n      <div className=\"container\">\n        <p>\n          We are compiling a list of those who have fallen ill to share with the community so that we may dedicate our prayers and learning in the merit of their complete and speedy recovery.\n        </p>\n        <form onSubmit={submit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"firstName\">Hebrew First Name</label>\n            <input type=\"text\" id=\"firstName\" className=\"form-control\" onChange={e => setFirstName(e.target.value)} value={firstName} required />\n          </div>\n          <div className=\"form-group\">\n            <label>Ben/Bat</label>\n            <div className=\"form-check\">\n              <input type=\"radio\" id=\"ben\" name=\"benbat\" value=\"ben\" checked={!!(benbat === 'ben')} onChange={e => e.target.checked && setBenbat(e.target.value)} required />\n              <label htmlFor=\"ben\"> Ben</label>\n            </div>\n            <div className=\"form-check\">\n              <input type=\"radio\" id=\"bat\" name=\"benbat\" value=\"bat\" checked={!!(benbat === 'bat')} onChange={e => e.target.checked && setBenbat(e.target.value)} />\n              <label htmlFor=\"bat\"> Bat</label>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"mothersName\">Mother's Hebrew Name</label>\n            <input type=\"text\" id=\"mothersName\" className=\"form-control\" onChange={e => setMothersName(e.target.value)} value={mothersName} required />\n          </div>\n          <div className=\"form-group\">\n            <button type=\"submit\" className=\"btn btn-primary btn-lg\">Submit</button>\n            {!!formMessage && (<span className=\"alert\">{formMessage}</span>)}\n          </div>\n        </form>\n      </div>\n      <div className=\"container my-5\">\n        <table className=\"table table-striped table-bordered table-hover shadow\">\n          <thead className=\"text-light\">\n            <tr>\n              <th>Please dedicate prayers and learning in the merit of their complete and speedy recovery.</th>\n            </tr>\n          </thead>\n          <tbody>\n          {forms.map((person, idx) => {\n            let hebrew = ~person.firstName.search(/[\\u0590-\\u05FF]/) && ~person.mothersName.search(/[\\u0590-\\u05FF]/);\n            let benbat = person.benbat;\n            if (hebrew) {\n              benbat = benbat === 'ben' ? 'בן' : 'בת'\n            }\n            return (\n              <tr key={idx}>\n                <td dir={hebrew && 'rtl'}>{person.firstName} {benbat} {person.mothersName}</td>\n              </tr>\n            )\n          })}\n          </tbody>\n        </table>\n      </div>\n\n    </>\n  );\n};\n\nexport default FormScreen;\n","import React from 'react';\nimport SCALogo from '../assets/SCALogo.png';\n\nimport { LiveClassesCarousel } from '../components';\n\n\ninterface IndexScreenProps {\n  schedules: Schedule[];\n}\n\nconst IndexScreen: React.FC<IndexScreenProps> = ({ schedules }) => {\n\n  return (\n    <>\n      <div className=\"bg-pesah py-5\">\n        <img\n          src={SCALogo}\n          className=\"centered-image img-fluid\"\n          height=\"150\"\n          alt=\"\"\n        />\n      </div>\n      <LiveClassesCarousel schedules={schedules} filter={{type:\"\",match:\"\"}} heading=\"Classes\" />\n      <div className=\"bg-pesah-recordings pb-5\">\n        <h4 className=\"h3 text-white text-center pt-2 bg-gradient-dark pb-5 font-weight-bold\">Pesah Recordings</h4>\n        <a href=\"https://www.youtube.com/playlist?list=PLS3KTNjJqUepUQ3quLa-UYoypBlfcAlcc\" target=\"_blank\" className=\"d-block h1 text-white text-center my-5 font-weight-light\">To view our library of recorded <br/>pesah classes, click here.</a>\n      </div>\n      <LiveClassesCarousel schedules={schedules} filter={{type:\"type\",match:\"minyan\"}} heading=\"Minyanim\" />\n      <div className=\"d-flex align-items-center justify-content-center my-3 site-nav-index\">\n        <a href=\"https://chat.whatsapp.com/FUQrLPQSXlZ8EeB0F1kHLJ\" className=\"btn btn-primary btn-whatsapp btn-lg m-3\">\n          Join Chat for Class Updates\n        </a>\n        <a\n          href=\"mailto:info@scaupdates.org\"\n          className=\"btn btn-primary btn-lg m-3 btn-email\">\n          Contact the SCA\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default IndexScreen;\n","import React, { useEffect, useState } from 'react';\n\nimport { ClassesScreen } from '../ui';\nimport { scheduleManager } from '../service';\n\nconst ClassesScreenCreator = () => {\n  const [schedules, setSchedules] = useState<Schedule[]>([]);\n\n  useEffect(() => {\n    scheduleManager.onSchedulesChanged((data: DataFrame) => {\n      setSchedules([{ title: 'All Schedules', rows: data }]);\n    });\n  }, []);\n\n  return <ClassesScreen schedules={schedules} />;\n};\n\nexport default ClassesScreenCreator;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport { Header, Footer } from './ui/components';\nimport {\n  ClassesScreenCreator,\n  AttachmentsAdminScreenCreator,\n  AttachmentsScreenCreator,\n  FormScreenCreator,\n  IndexScreenCreator,\n} from './factory';\n\ninterface RouteMap {\n  [path: string]: RouteConfig;\n}\ninterface RouteConfig {\n  exact?: boolean;\n  pageName?: string; // For display purposes\n  Component: React.ComponentType;\n}\n\nconst renderRoutes = (routes: RouteMap) =>\n  Object.entries(routes).map(([path, { exact, Component }]) => (\n    <Route path={path} exact={exact} component={Component} />\n  ));\n\nexport const adminRoutes: RouteMap = {\n  '/edit-letters': { exact: true, Component: AttachmentsAdminScreenCreator },\n};\n\nconst AdminNavigator = () => (\n  <HashRouter basename=\"/admin\">{renderRoutes(adminRoutes)}</HashRouter>\n);\n\nexport const mainRoutes: RouteMap = {\n  '/': { exact: true, Component: IndexScreenCreator, pageName: ''},\n  '/today': {\n    exact: true,\n    Component: ClassesScreenCreator,\n    pageName: 'SCA Affiliate Synagogue - Virtual Classes Schedules',\n  },\n  '/classes': {\n    exact: true,\n    Component: ClassesScreenCreator,\n    pageName: 'SCA Affiliate Synagogue - Virtual Classes Schedules',\n  },\n  '/minyanim': {\n    exact: true,\n    Component: ClassesScreenCreator,\n    pageName: 'SCA Affiliate Synagogue - Virtual Minyanim Schedules',\n  },\n  '/bekhorot': {\n    exact: true,\n    Component: ClassesScreenCreator,\n    pageName: 'SCA Affiliate Synagogue - Siyum Bekhorot Schedules',\n  },\n  '/letters': {\n    exact: true,\n    Component: AttachmentsScreenCreator,\n    pageName: 'COVID-19 Letters',\n  },\n  '/tehillim': {\n    exact: true,\n    Component: FormScreenCreator,\n    pageName: 'SCA Tehilim Requests',\n  },\n  '/admin': { Component: AdminNavigator },\n};\n\nconst MainNavigator = () => (\n  <HashRouter>\n    <Header />\n    {renderRoutes(mainRoutes)}\n    <Footer />\n  </HashRouter>\n);\n\nexport default MainNavigator;\n","import React, { useEffect, useState } from 'react';\n\nimport { AttachmentsAdminScreen } from '../ui';\nimport { attachmentManager } from '../service';\n\nconst AttachmentsAdminScreenCreator = () => {\n  const [currentAttachments, setCurrentAttachments] = useState<Attachment[]>([]);\n\n  useEffect(() => {\n    attachmentManager.onAttachmentsChanged(setCurrentAttachments);\n  }, []);\n\n  const uploadAttachment = attachment => {\n    if (!attachment.file) {\n      return alert('Please upload an attachment first');\n    }\n    if (!attachment.title) {\n      return alert('Please enter the title of this table');\n    }\n    return attachmentManager.addAttachment(attachment);\n  };\n\n  const removeAttachment = _id => {\n    return attachmentManager.removeAttachment(_id);\n  };\n\n  const updateAttachment = (_id, updatedAttachment) => {\n    return attachmentManager.updateAttachment(_id, updatedAttachment);\n  };\n\n  return (\n    <AttachmentsAdminScreen\n      attachments={currentAttachments}\n      createAttachment={uploadAttachment}\n      updateAttachment={updateAttachment}\n      deleteAttachment={removeAttachment}\n    />\n  );\n};\n\nexport default AttachmentsAdminScreenCreator;\n","import React, { useEffect, useState } from 'react';\n\nimport { IndexScreen } from '../ui';\nimport { scheduleManager } from '../service';\n\nconst IndexScreenCreator = () => {\n  const [schedules, setSchedules] = useState<Schedule[]>([]);\n\n  useEffect(() => {\n    scheduleManager.onSchedulesChanged((data: DataFrame) => {\n      setSchedules([{ title: 'All Schedules', rows: data }]);\n    });\n  }, []);\n\n  return <IndexScreen schedules={schedules} />;\n};\n\nexport default IndexScreenCreator;\n","import React, { useEffect, useState } from 'react';\n\nimport { AttachmentsScreen } from '../ui';\nimport { attachmentManager } from '../service';\n\nconst AttachmentsScreenCreator = () => {\n  const [attachments, setAttachments] = useState<Attachment[]>([]);\n\n  useEffect(() => {\n    attachmentManager.onAttachmentsChanged(setAttachments);\n  }, []);\n\n  return <AttachmentsScreen attachments={attachments} />;\n};\n\nexport default AttachmentsScreenCreator;","import React, { useEffect, useState } from 'react';\n\nimport { FormScreen } from '../ui';\nimport { formManager } from '../service';\n\nconst FormScreenCreator = () => {\n  const [forms, setForms] = useState<Form[]>([]);\n\n  useEffect(() => {\n    formManager.onFormsChanged(setForms);\n  }, []);\n\n  return <FormScreen forms={forms} />;\n};\n\nexport default FormScreenCreator;\n","import React from 'react';\n\nimport AppNavigator from './AppNavigator';\n\nconst App = () => <AppNavigator />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'jquery';\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\nimport './ui/styles.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}